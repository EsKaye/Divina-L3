name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CI: true
  NODE_ENV: test

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Linter
      run: npm run lint
    
    - name: Run Unit Tests
      run: npm run test:ci
    
    - name: Run Type Check
      run: npm run type-check

  e2e:
    name: Run E2E Tests
    needs: test
    runs-on: ubuntu-latest
    
    services:
      # Start a local server for E2E tests
      web:
        image: cypress/base:18.14.0
        ports:
          - 3000:3000
        options: >-
          --health-cmd "curl -s http://localhost:3000 > /dev/null || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          NODE_ENV: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build Application
      run: npm run build
    
    - name: Start Server
      run: npx serve -s build -l 3000 &
    
    - name: Run E2E Tests
      uses: cypress-io/github-action@v5
      with:
        build: npm run build
        start: npm start
        wait-on: 'http://localhost:3000'
        browser: chrome
        headless: true
        record: false
    
    - name: Upload Screenshots on Failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-screenshots
        path: cypress/screenshots/
        if-no-files-found: ignore
    
    - name: Upload Videos on Failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-videos
        path: cypress/videos/
        if-no-files-found: ignore

  deploy:
    name: Deploy to Production
    needs: [test, e2e]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build/
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
