{"id":"2a07cddf02bcd77f3d870fd9d57abfc1","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/GameDinL3Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\n\r\n/**\r\n * @title GameDin L3 Bridge Contract\r\n * @dev Handles cross-chain transfers between L2 settlement layer and L3 gaming network\r\n * Manages asset bridging, validation, and cross-chain communication\r\n */\r\ncontract GameDinL3Bridge is AccessControl, ReentrancyGuard, Pausable {\r\n    // =============================================================================\r\n    // CONSTANTS & ROLES\r\n    // =============================================================================\r\n    \r\n    bytes32 public constant BRIDGE_OPERATOR_ROLE = keccak256(\"BRIDGE_OPERATOR_ROLE\");\r\n    bytes32 public constant VALIDATOR_ROLE = keccak256(\"VALIDATOR_ROLE\");\r\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\"EMERGENCY_ROLE\");\r\n    \r\n    uint256 public constant BRIDGE_TIMEOUT = 24 hours;\r\n    uint256 public constant MAX_BRIDGE_AMOUNT = 100000 * 10**18; // 100K tokens\r\n    uint256 public constant MIN_BRIDGE_AMOUNT = 1 * 10**18; // 1 token\r\n    \r\n    // =============================================================================\r\n    // STRUCTS & ENUMS\r\n    // =============================================================================\r\n    \r\n    enum BridgeStatus {\r\n        PENDING,\r\n        PROCESSING,\r\n        COMPLETED,\r\n        FAILED,\r\n        CANCELLED\r\n    }\r\n    \r\n    enum AssetType {\r\n        TOKEN,\r\n        NFT,\r\n        ETH\r\n    }\r\n    \r\n    struct BridgeRequest {\r\n        uint256 requestId;\r\n        address sender;\r\n        address recipient;\r\n        AssetType assetType;\r\n        address assetAddress;\r\n        uint256 amount;\r\n        uint256 tokenId;\r\n        BridgeStatus status;\r\n        uint256 timestamp;\r\n        uint256 deadline;\r\n        bytes32 merkleRoot;\r\n        string l3TransactionHash;\r\n        address validator;\r\n        bool isL3ToL2;\r\n    }\r\n    \r\n    struct BridgeConfig {\r\n        bool isActive;\r\n        uint256 minConfirmations;\r\n        uint256 maxAmount;\r\n        uint256 fee;\r\n        uint256 timeout;\r\n    }\r\n    \r\n    struct ValidatorInfo {\r\n        bool isActive;\r\n        uint256 totalProcessed;\r\n        uint256 successRate;\r\n        uint256 lastActivity;\r\n        uint256 stake;\r\n    }\r\n    \r\n    // =============================================================================\r\n    // STATE VARIABLES\r\n    // =============================================================================\r\n    \r\n    address public settlementContract;\r\n    uint256 public requestCounter;\r\n    uint256 public totalRequests;\r\n    uint256 public totalVolume;\r\n    uint256 public bridgeFee = 0.001 * 10**18; // 0.001 tokens\r\n    uint256 public validatorStake = 1000 * 10**18; // 1000 tokens\r\n    \r\n    mapping(uint256 => BridgeRequest) public bridgeRequests;\r\n    mapping(address => uint256[]) public userRequests;\r\n    mapping(address => ValidatorInfo) public validators;\r\n    mapping(bytes32 => bool) public processedTransactions;\r\n    mapping(address => BridgeConfig) public bridgeConfigs;\r\n    \r\n    // =============================================================================\r\n    // EVENTS\r\n    // =============================================================================\r\n    \r\n    event BridgeRequestCreated(\r\n        uint256 indexed requestId,\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        AssetType assetType,\r\n        address assetAddress,\r\n        uint256 amount,\r\n        uint256 tokenId,\r\n        bool isL3ToL2,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event BridgeRequestProcessed(\r\n        uint256 indexed requestId,\r\n        address indexed validator,\r\n        BridgeStatus status,\r\n        string l3TransactionHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event BridgeRequestCompleted(\r\n        uint256 indexed requestId,\r\n        address indexed recipient,\r\n        uint256 amount,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event ValidatorRegistered(\r\n        address indexed validator,\r\n        uint256 stake,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event ValidatorStakeUpdated(\r\n        address indexed validator,\r\n        uint256 oldStake,\r\n        uint256 newStake\r\n    );\r\n    \r\n    event BridgeFeeUpdated(uint256 oldFee, uint256 newFee);\r\n    event ValidatorStakeUpdated(uint256 oldStake, uint256 newStake);\r\n    \r\n    // =============================================================================\r\n    // CONSTRUCTOR\r\n    // =============================================================================\r\n    \r\n    constructor(address _settlementContract) {\r\n        require(_settlementContract != address(0), \"Invalid settlement contract\");\r\n        settlementContract = _settlementContract;\r\n        \r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(BRIDGE_OPERATOR_ROLE, msg.sender);\r\n        _grantRole(VALIDATOR_ROLE, msg.sender);\r\n        _grantRole(EMERGENCY_ROLE, msg.sender);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // BRIDGE FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Create a bridge request from L2 to L3\r\n     * @param recipient Recipient address on L3\r\n     * @param assetType Type of asset to bridge\r\n     * @param assetAddress Asset contract address\r\n     * @param amount Amount to bridge\r\n     * @param tokenId Token ID (for NFTs)\r\n     */\r\n    function bridgeToL3(\r\n        address recipient,\r\n        AssetType assetType,\r\n        address assetAddress,\r\n        uint256 amount,\r\n        uint256 tokenId\r\n    ) external payable whenNotPaused nonReentrant {\r\n        require(recipient != address(0), \"Invalid recipient\");\r\n        require(amount >= MIN_BRIDGE_AMOUNT, \"Amount too small\");\r\n        require(amount <= MAX_BRIDGE_AMOUNT, \"Amount too large\");\r\n        require(msg.value >= bridgeFee, \"Insufficient bridge fee\");\r\n        \r\n        requestCounter++;\r\n        uint256 requestId = requestCounter;\r\n        \r\n        BridgeRequest storage request = bridgeRequests[requestId];\r\n        request.requestId = requestId;\r\n        request.sender = msg.sender;\r\n        request.recipient = recipient;\r\n        request.assetType = assetType;\r\n        request.assetAddress = assetAddress;\r\n        request.amount = amount;\r\n        request.tokenId = tokenId;\r\n        request.status = BridgeStatus.PENDING;\r\n        request.timestamp = block.timestamp;\r\n        request.deadline = block.timestamp + BRIDGE_TIMEOUT;\r\n        request.isL3ToL2 = false;\r\n        \r\n        userRequests[msg.sender].push(requestId);\r\n        totalRequests++;\r\n        totalVolume += amount;\r\n        \r\n        // Transfer assets to bridge contract\r\n        if (assetType == AssetType.TOKEN) {\r\n            IERC20(assetAddress).transferFrom(msg.sender, address(this), amount);\r\n        } else if (assetType == AssetType.NFT) {\r\n            IERC721(assetAddress).transferFrom(msg.sender, address(this), tokenId);\r\n        } else if (assetType == AssetType.ETH) {\r\n            require(msg.value >= amount + bridgeFee, \"Insufficient ETH\");\r\n        }\r\n        \r\n        emit BridgeRequestCreated(\r\n            requestId,\r\n            msg.sender,\r\n            recipient,\r\n            assetType,\r\n            assetAddress,\r\n            amount,\r\n            tokenId,\r\n            false,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Process bridge request (L2 to L3)\r\n     * @param requestId Request ID\r\n     * @param l3TransactionHash L3 transaction hash\r\n     * @param merkleRoot Merkle root for verification\r\n     */\r\n    function processL2ToL3Request(\r\n        uint256 requestId,\r\n        string memory l3TransactionHash,\r\n        bytes32 merkleRoot\r\n    ) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\r\n        BridgeRequest storage request = bridgeRequests[requestId];\r\n        require(request.requestId != 0, \"Request does not exist\");\r\n        require(request.status == BridgeStatus.PENDING, \"Request not pending\");\r\n        require(!request.isL3ToL2, \"Invalid request direction\");\r\n        require(block.timestamp <= request.deadline, \"Request expired\");\r\n        \r\n        request.status = BridgeStatus.PROCESSING;\r\n        request.l3TransactionHash = l3TransactionHash;\r\n        request.merkleRoot = merkleRoot;\r\n        request.validator = msg.sender;\r\n        \r\n        // Update validator stats\r\n        ValidatorInfo storage validator = validators[msg.sender];\r\n        validator.totalProcessed++;\r\n        validator.lastActivity = block.timestamp;\r\n        \r\n        emit BridgeRequestProcessed(\r\n            requestId,\r\n            msg.sender,\r\n            BridgeStatus.PROCESSING,\r\n            l3TransactionHash,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Complete bridge request (L2 to L3)\r\n     * @param requestId Request ID\r\n     */\r\n    function completeL2ToL3Request(uint256 requestId) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\r\n        BridgeRequest storage request = bridgeRequests[requestId];\r\n        require(request.requestId != 0, \"Request does not exist\");\r\n        require(request.status == BridgeStatus.PROCESSING, \"Request not processing\");\r\n        require(!request.isL3ToL2, \"Invalid request direction\");\r\n        \r\n        request.status = BridgeStatus.COMPLETED;\r\n        \r\n        // Update validator stats\r\n        ValidatorInfo storage validator = validators[msg.sender];\r\n        validator.successRate = (validator.successRate * (validator.totalProcessed - 1) + 100) / validator.totalProcessed;\r\n        \r\n        emit BridgeRequestCompleted(\r\n            requestId,\r\n            request.recipient,\r\n            request.amount,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Process bridge request from L3 to L2\r\n     * @param sender Sender address on L3\r\n     * @param recipient Recipient address on L2\r\n     * @param assetType Type of asset\r\n     * @param assetAddress Asset contract address\r\n     * @param amount Amount to bridge\r\n     * @param tokenId Token ID (for NFTs)\r\n     * @param l3TransactionHash L3 transaction hash\r\n     * @param merkleRoot Merkle root for verification\r\n     */\r\n    function processL3ToL2Request(\r\n        address sender,\r\n        address recipient,\r\n        AssetType assetType,\r\n        address assetAddress,\r\n        uint256 amount,\r\n        uint256 tokenId,\r\n        string memory l3TransactionHash,\r\n        bytes32 merkleRoot\r\n    ) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\r\n        require(sender != address(0), \"Invalid sender\");\r\n        require(recipient != address(0), \"Invalid recipient\");\r\n        require(amount >= MIN_BRIDGE_AMOUNT, \"Amount too small\");\r\n        require(amount <= MAX_BRIDGE_AMOUNT, \"Amount too large\");\r\n        require(bytes(l3TransactionHash).length > 0, \"Invalid L3 transaction hash\");\r\n        require(!processedTransactions[keccak256(abi.encodePacked(l3TransactionHash))], \"Transaction already processed\");\r\n        \r\n        requestCounter++;\r\n        uint256 requestId = requestCounter;\r\n        \r\n        BridgeRequest storage request = bridgeRequests[requestId];\r\n        request.requestId = requestId;\r\n        request.sender = sender;\r\n        request.recipient = recipient;\r\n        request.assetType = assetType;\r\n        request.assetAddress = assetAddress;\r\n        request.amount = amount;\r\n        request.tokenId = tokenId;\r\n        request.status = BridgeStatus.PROCESSING;\r\n        request.timestamp = block.timestamp;\r\n        request.deadline = block.timestamp + BRIDGE_TIMEOUT;\r\n        request.l3TransactionHash = l3TransactionHash;\r\n        request.merkleRoot = merkleRoot;\r\n        request.validator = msg.sender;\r\n        request.isL3ToL2 = true;\r\n        \r\n        userRequests[recipient].push(requestId);\r\n        totalRequests++;\r\n        totalVolume += amount;\r\n        processedTransactions[keccak256(abi.encodePacked(l3TransactionHash))] = true;\r\n        \r\n        // Transfer assets to recipient\r\n        if (assetType == AssetType.TOKEN) {\r\n            IERC20(assetAddress).transfer(recipient, amount);\r\n        } else if (assetType == AssetType.NFT) {\r\n            IERC721(assetAddress).transferFrom(address(this), recipient, tokenId);\r\n        } else if (assetType == AssetType.ETH) {\r\n            payable(recipient).transfer(amount);\r\n        }\r\n        \r\n        request.status = BridgeStatus.COMPLETED;\r\n        \r\n        // Update validator stats\r\n        ValidatorInfo storage validator = validators[msg.sender];\r\n        validator.totalProcessed++;\r\n        validator.successRate = (validator.successRate * (validator.totalProcessed - 1) + 100) / validator.totalProcessed;\r\n        validator.lastActivity = block.timestamp;\r\n        \r\n        emit BridgeRequestCreated(\r\n            requestId,\r\n            sender,\r\n            recipient,\r\n            assetType,\r\n            assetAddress,\r\n            amount,\r\n            tokenId,\r\n            true,\r\n            block.timestamp\r\n        );\r\n        \r\n        emit BridgeRequestCompleted(\r\n            requestId,\r\n            recipient,\r\n            amount,\r\n            block.timestamp\r\n        );\r\n    }\r\n    \r\n    // =============================================================================\r\n    // VALIDATOR FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Register as a validator\r\n     */\r\n    function registerValidator() external whenNotPaused {\r\n        require(!validators[msg.sender].isActive, \"Already registered\");\r\n        \r\n        // Transfer stake to contract\r\n        IERC20(settlementContract).transferFrom(msg.sender, address(this), validatorStake);\r\n        \r\n        ValidatorInfo storage validator = validators[msg.sender];\r\n        validator.isActive = true;\r\n        validator.stake = validatorStake;\r\n        validator.lastActivity = block.timestamp;\r\n        \r\n        _grantRole(VALIDATOR_ROLE, msg.sender);\r\n        \r\n        emit ValidatorRegistered(msg.sender, validatorStake, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @dev Unregister as a validator\r\n     */\r\n    function unregisterValidator() external whenNotPaused {\r\n        ValidatorInfo storage validator = validators[msg.sender];\r\n        require(validator.isActive, \"Not registered\");\r\n        \r\n        validator.isActive = false;\r\n        \r\n        // Return stake to validator\r\n        IERC20(settlementContract).transfer(msg.sender, validator.stake);\r\n        \r\n        _revokeRole(VALIDATOR_ROLE, msg.sender);\r\n        \r\n        emit ValidatorStakeUpdated(msg.sender, validator.stake, 0);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // VIEW FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Get bridge request details\r\n     * @param requestId Request ID\r\n     * @return id Request ID\r\n     * @return sender Sender address\r\n     * @return recipient Recipient address\r\n     * @return assetType Asset type\r\n     * @return assetAddress Asset address\r\n     * @return amount Amount\r\n     * @return tokenId Token ID\r\n     * @return status Request status\r\n     * @return timestamp Timestamp\r\n     * @return deadline Deadline\r\n     * @return merkleRoot Merkle root\r\n     * @return l3TransactionHash L3 transaction hash\r\n     * @return validator Validator address\r\n     * @return isL3ToL2 Whether L3 to L2\r\n     */\r\n    function getBridgeRequest(uint256 requestId) external view returns (\r\n        uint256 id,\r\n        address sender,\r\n        address recipient,\r\n        AssetType assetType,\r\n        address assetAddress,\r\n        uint256 amount,\r\n        uint256 tokenId,\r\n        BridgeStatus status,\r\n        uint256 timestamp,\r\n        uint256 deadline,\r\n        bytes32 merkleRoot,\r\n        string memory l3TransactionHash,\r\n        address validator,\r\n        bool isL3ToL2\r\n    ) {\r\n        BridgeRequest storage request = bridgeRequests[requestId];\r\n        return (\r\n            request.requestId,\r\n            request.sender,\r\n            request.recipient,\r\n            request.assetType,\r\n            request.assetAddress,\r\n            request.amount,\r\n            request.tokenId,\r\n            request.status,\r\n            request.timestamp,\r\n            request.deadline,\r\n            request.merkleRoot,\r\n            request.l3TransactionHash,\r\n            request.validator,\r\n            request.isL3ToL2\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get validator information\r\n     * @param validator Validator address\r\n     * @return isActive Whether active\r\n     * @return totalProcessed Total processed\r\n     * @return successRate Success rate\r\n     * @return lastActivity Last activity\r\n     * @return stake Stake amount\r\n     */\r\n    function getValidatorInfo(address validator) external view returns (\r\n        bool isActive,\r\n        uint256 totalProcessed,\r\n        uint256 successRate,\r\n        uint256 lastActivity,\r\n        uint256 stake\r\n    ) {\r\n        ValidatorInfo storage info = validators[validator];\r\n        return (\r\n            info.isActive,\r\n            info.totalProcessed,\r\n            info.successRate,\r\n            info.lastActivity,\r\n            info.stake\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get user requests\r\n     * @param user User address\r\n     * @return requestIds Array of request IDs\r\n     */\r\n    function getUserRequests(address user) external view returns (uint256[] memory) {\r\n        return userRequests[user];\r\n    }\r\n    \r\n    // =============================================================================\r\n    // ADMIN FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Update bridge fee\r\n     * @param newFee New fee amount\r\n     */\r\n    function updateBridgeFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        uint256 oldFee = bridgeFee;\r\n        bridgeFee = newFee;\r\n        emit BridgeFeeUpdated(oldFee, newFee);\r\n    }\r\n    \r\n    /**\r\n     * @dev Update validator stake requirement\r\n     * @param newStake New stake amount\r\n     */\r\n    function updateValidatorStake(uint256 newStake) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        uint256 oldStake = validatorStake;\r\n        validatorStake = newStake;\r\n        emit ValidatorStakeUpdated(oldStake, newStake);\r\n    }\r\n    \r\n    /**\r\n     * @dev Update settlement contract\r\n     * @param newSettlement New settlement contract address\r\n     */\r\n    function updateSettlementContract(address newSettlement) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(newSettlement != address(0), \"Invalid settlement contract\");\r\n        settlementContract = newSettlement;\r\n    }\r\n    \r\n    /**\r\n     * @dev Pause bridge\r\n     */\r\n    function pause() external onlyRole(EMERGENCY_ROLE) {\r\n        _pause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Unpause bridge\r\n     */\r\n    function unpause() external onlyRole(EMERGENCY_ROLE) {\r\n        _unpause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency withdraw tokens\r\n     * @param token Token address\r\n     * @param amount Amount to withdraw\r\n     */\r\n    function emergencyWithdrawTokens(address token, uint256 amount) external onlyRole(EMERGENCY_ROLE) {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency withdraw ETH\r\n     */\r\n    function emergencyWithdrawETH() external onlyRole(EMERGENCY_ROLE) {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // RECEIVE FUNCTION\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Receive function to accept ETH\r\n     */\r\n    receive() external payable {}\r\n} "},"contracts/GameDinSettlement.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\n\r\n/**\r\n * @title GameDin Settlement Contract\r\n * @dev L2 settlement layer for GameDin L3 gaming blockchain\r\n * Handles cross-chain asset transfers, dispute resolution, and final settlement\r\n */\r\ncontract GameDinSettlement is ERC20, ERC20Pausable, AccessControl, ReentrancyGuard {\r\n    // =============================================================================\r\n    // CONSTANTS & ROLES\r\n    // =============================================================================\r\n    \r\n    bytes32 public constant SETTLEMENT_ROLE = keccak256(\"SETTLEMENT_ROLE\");\r\n    bytes32 public constant BRIDGE_ROLE = keccak256(\"BRIDGE_ROLE\");\r\n    bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\");\r\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\"EMERGENCY_ROLE\");\r\n    \r\n    uint256 public constant SETTLEMENT_TIMEOUT = 7 days;\r\n    uint256 public constant DISPUTE_WINDOW = 3 days;\r\n    uint256 public constant MAX_SETTLEMENT_AMOUNT = 1000000 * 10**18; // 1M tokens\r\n    \r\n    // =============================================================================\r\n    // STRUCTS & ENUMS\r\n    // =============================================================================\r\n    \r\n    enum SettlementStatus {\r\n        PENDING,\r\n        CONFIRMED,\r\n        DISPUTED,\r\n        RESOLVED,\r\n        CANCELLED\r\n    }\r\n    \r\n    enum DisputeReason {\r\n        INSUFFICIENT_FUNDS,\r\n        INVALID_TRANSACTION,\r\n        FRAUD_DETECTED,\r\n        TECHNICAL_ERROR,\r\n        OTHER\r\n    }\r\n    \r\n    struct Settlement {\r\n        uint256 settlementId;\r\n        address from;\r\n        address to;\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n        SettlementStatus status;\r\n        string l3TransactionHash;\r\n        bytes32 merkleRoot;\r\n        uint256 disputeDeadline;\r\n        address disputeInitiator;\r\n        DisputeReason disputeReason;\r\n        string disputeDetails;\r\n    }\r\n    \r\n    struct Dispute {\r\n        uint256 settlementId;\r\n        address initiator;\r\n        DisputeReason reason;\r\n        string details;\r\n        uint256 timestamp;\r\n        bool resolved;\r\n        address resolver;\r\n        string resolution;\r\n    }\r\n    \r\n    struct BridgeConfig {\r\n        address bridgeAddress;\r\n        bool isActive;\r\n        uint256 minConfirmations;\r\n        uint256 maxAmount;\r\n        uint256 fee;\r\n    }\r\n    \r\n    // =============================================================================\r\n    // STATE VARIABLES\r\n    // =============================================================================\r\n    \r\n    uint256 public settlementCounter;\r\n    uint256 public totalSettlements;\r\n    uint256 public totalDisputes;\r\n    uint256 public settlementFee = 0.001 * 10**18; // 0.001 tokens\r\n    uint256 public disputeFee = 0.01 * 10**18; // 0.01 tokens\r\n    \r\n    mapping(uint256 => Settlement) public settlements;\r\n    mapping(uint256 => Dispute) public disputes;\r\n    mapping(address => uint256[]) public userSettlements;\r\n    mapping(bytes32 => bool) public processedL3Transactions;\r\n    mapping(address => BridgeConfig) public bridgeConfigs;\r\n    \r\n    // =============================================================================\r\n    // EVENTS\r\n    // =============================================================================\r\n    \r\n    event SettlementCreated(\r\n        uint256 indexed settlementId,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount,\r\n        string l3TransactionHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event SettlementConfirmed(\r\n        uint256 indexed settlementId,\r\n        address indexed confirmer,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event SettlementDisputed(\r\n        uint256 indexed settlementId,\r\n        address indexed initiator,\r\n        DisputeReason reason,\r\n        string details,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event DisputeResolved(\r\n        uint256 indexed settlementId,\r\n        address indexed resolver,\r\n        string resolution,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event BridgeConfigUpdated(\r\n        address indexed bridgeAddress,\r\n        bool isActive,\r\n        uint256 minConfirmations,\r\n        uint256 maxAmount,\r\n        uint256 fee\r\n    );\r\n    \r\n    event SettlementFeeUpdated(uint256 oldFee, uint256 newFee);\r\n    event DisputeFeeUpdated(uint256 oldFee, uint256 newFee);\r\n    \r\n    // =============================================================================\r\n    // CONSTRUCTOR\r\n    // =============================================================================\r\n    \r\n    constructor(\r\n        address initialOwner,\r\n        uint256 initialSupply\r\n    ) ERC20(\"GameDin Settlement Token\", \"GDIS\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\r\n        _grantRole(SETTLEMENT_ROLE, initialOwner);\r\n        _grantRole(BRIDGE_ROLE, initialOwner);\r\n        _grantRole(DISPUTE_RESOLVER_ROLE, initialOwner);\r\n        _grantRole(EMERGENCY_ROLE, initialOwner);\r\n        \r\n        _mint(initialOwner, initialSupply);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // SETTLEMENT FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Create a new settlement\r\n     * @param to Recipient address\r\n     * @param amount Settlement amount\r\n     * @param l3TransactionHash L3 transaction hash\r\n     * @param merkleRoot Merkle root for verification\r\n     */\r\n    function createSettlement(\r\n        address to,\r\n        uint256 amount,\r\n        string memory l3TransactionHash,\r\n        bytes32 merkleRoot\r\n    ) external onlyRole(SETTLEMENT_ROLE) whenNotPaused nonReentrant {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(amount <= MAX_SETTLEMENT_AMOUNT, \"Amount exceeds maximum\");\r\n        require(bytes(l3TransactionHash).length > 0, \"Invalid L3 transaction hash\");\r\n        require(!processedL3Transactions[keccak256(abi.encodePacked(l3TransactionHash))], \"L3 transaction already processed\");\r\n        \r\n        settlementCounter++;\r\n        uint256 settlementId = settlementCounter;\r\n        \r\n        Settlement storage settlement = settlements[settlementId];\r\n        settlement.settlementId = settlementId;\r\n        settlement.from = msg.sender;\r\n        settlement.to = to;\r\n        settlement.amount = amount;\r\n        settlement.timestamp = block.timestamp;\r\n        settlement.status = SettlementStatus.PENDING;\r\n        settlement.l3TransactionHash = l3TransactionHash;\r\n        settlement.merkleRoot = merkleRoot;\r\n        settlement.disputeDeadline = block.timestamp + DISPUTE_WINDOW;\r\n        \r\n        userSettlements[to].push(settlementId);\r\n        processedL3Transactions[keccak256(abi.encodePacked(l3TransactionHash))] = true;\r\n        totalSettlements++;\r\n        \r\n        emit SettlementCreated(settlementId, msg.sender, to, amount, l3TransactionHash, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @dev Confirm a settlement\r\n     * @param settlementId Settlement ID\r\n     */\r\n    function confirmSettlement(uint256 settlementId) external onlyRole(SETTLEMENT_ROLE) whenNotPaused {\r\n        Settlement storage settlement = settlements[settlementId];\r\n        require(settlement.settlementId != 0, \"Settlement does not exist\");\r\n        require(settlement.status == SettlementStatus.PENDING, \"Settlement not pending\");\r\n        require(block.timestamp <= settlement.disputeDeadline, \"Dispute window expired\");\r\n        \r\n        settlement.status = SettlementStatus.CONFIRMED;\r\n        \r\n        // Transfer tokens to recipient\r\n        _transfer(settlement.from, settlement.to, settlement.amount);\r\n        \r\n        emit SettlementConfirmed(settlementId, msg.sender, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @dev Initiate a dispute for a settlement\r\n     * @param settlementId Settlement ID\r\n     * @param reason Dispute reason\r\n     * @param details Dispute details\r\n     */\r\n    function initiateDispute(\r\n        uint256 settlementId,\r\n        DisputeReason reason,\r\n        string memory details\r\n    ) external payable whenNotPaused {\r\n        require(msg.value >= disputeFee, \"Insufficient dispute fee\");\r\n        \r\n        Settlement storage settlement = settlements[settlementId];\r\n        require(settlement.settlementId != 0, \"Settlement does not exist\");\r\n        require(settlement.status == SettlementStatus.PENDING, \"Settlement not pending\");\r\n        require(block.timestamp <= settlement.disputeDeadline, \"Dispute window expired\");\r\n        require(msg.sender == settlement.to || hasRole(DISPUTE_RESOLVER_ROLE, msg.sender), \"Not authorized to dispute\");\r\n        \r\n        settlement.status = SettlementStatus.DISPUTED;\r\n        settlement.disputeInitiator = msg.sender;\r\n        settlement.disputeReason = reason;\r\n        settlement.disputeDetails = details;\r\n        \r\n        totalDisputes++;\r\n        \r\n        Dispute storage dispute = disputes[settlementId];\r\n        dispute.settlementId = settlementId;\r\n        dispute.initiator = msg.sender;\r\n        dispute.reason = reason;\r\n        dispute.details = details;\r\n        dispute.timestamp = block.timestamp;\r\n        \r\n        emit SettlementDisputed(settlementId, msg.sender, reason, details, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @dev Resolve a dispute\r\n     * @param settlementId Settlement ID\r\n     * @param resolution Resolution details\r\n     * @param approveSettlement Whether to approve the settlement\r\n     */\r\n    function resolveDispute(\r\n        uint256 settlementId,\r\n        string memory resolution,\r\n        bool approveSettlement\r\n    ) external onlyRole(DISPUTE_RESOLVER_ROLE) whenNotPaused {\r\n        Settlement storage settlement = settlements[settlementId];\r\n        Dispute storage dispute = disputes[settlementId];\r\n        \r\n        require(settlement.settlementId != 0, \"Settlement does not exist\");\r\n        require(settlement.status == SettlementStatus.DISPUTED, \"Settlement not disputed\");\r\n        require(!dispute.resolved, \"Dispute already resolved\");\r\n        \r\n        dispute.resolved = true;\r\n        dispute.resolver = msg.sender;\r\n        dispute.resolution = resolution;\r\n        \r\n        if (approveSettlement) {\r\n            settlement.status = SettlementStatus.RESOLVED;\r\n            _transfer(settlement.from, settlement.to, settlement.amount);\r\n        } else {\r\n            settlement.status = SettlementStatus.CANCELLED;\r\n        }\r\n        \r\n        emit DisputeResolved(settlementId, msg.sender, resolution, block.timestamp);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // BRIDGE FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Configure a bridge\r\n     * @param bridgeAddress Bridge contract address\r\n     * @param isActive Whether bridge is active\r\n     * @param minConfirmations Minimum confirmations required\r\n     * @param maxAmount Maximum amount per transaction\r\n     * @param fee Bridge fee\r\n     */\r\n    function configureBridge(\r\n        address bridgeAddress,\r\n        bool isActive,\r\n        uint256 minConfirmations,\r\n        uint256 maxAmount,\r\n        uint256 fee\r\n    ) external onlyRole(BRIDGE_ROLE) {\r\n        require(bridgeAddress != address(0), \"Invalid bridge address\");\r\n        \r\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\r\n        config.bridgeAddress = bridgeAddress;\r\n        config.isActive = isActive;\r\n        config.minConfirmations = minConfirmations;\r\n        config.maxAmount = maxAmount;\r\n        config.fee = fee;\r\n        \r\n        emit BridgeConfigUpdated(bridgeAddress, isActive, minConfirmations, maxAmount, fee);\r\n    }\r\n    \r\n    /**\r\n     * @dev Process bridge transaction\r\n     * @param from Source address\r\n     * @param to Destination address\r\n     * @param amount Amount to transfer\r\n     * @param bridgeAddress Bridge address\r\n     */\r\n    function processBridgeTransaction(\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        address bridgeAddress\r\n    ) external onlyRole(BRIDGE_ROLE) whenNotPaused {\r\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\r\n        require(config.isActive, \"Bridge not active\");\r\n        require(amount <= config.maxAmount, \"Amount exceeds bridge limit\");\r\n        \r\n        _transfer(from, to, amount);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // VIEW FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Get settlement details\r\n     * @param settlementId Settlement ID\r\n     * @return id Settlement ID\r\n     * @return from Sender address\r\n     * @return to Recipient address\r\n     * @return amount Amount\r\n     * @return timestamp Timestamp\r\n     * @return status Settlement status\r\n     * @return l3TransactionHash L3 transaction hash\r\n     * @return merkleRoot Merkle root\r\n     * @return disputeDeadline Dispute deadline\r\n     * @return disputeInitiator Dispute initiator\r\n     * @return disputeReason Dispute reason\r\n     * @return disputeDetails Dispute details\r\n     */\r\n    function getSettlement(uint256 settlementId) external view returns (\r\n        uint256 id,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 timestamp,\r\n        SettlementStatus status,\r\n        string memory l3TransactionHash,\r\n        bytes32 merkleRoot,\r\n        uint256 disputeDeadline,\r\n        address disputeInitiator,\r\n        DisputeReason disputeReason,\r\n        string memory disputeDetails\r\n    ) {\r\n        Settlement storage settlement = settlements[settlementId];\r\n        return (\r\n            settlement.settlementId,\r\n            settlement.from,\r\n            settlement.to,\r\n            settlement.amount,\r\n            settlement.timestamp,\r\n            settlement.status,\r\n            settlement.l3TransactionHash,\r\n            settlement.merkleRoot,\r\n            settlement.disputeDeadline,\r\n            settlement.disputeInitiator,\r\n            settlement.disputeReason,\r\n            settlement.disputeDetails\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get dispute details\r\n     * @param settlementId Settlement ID\r\n     * @return id Settlement ID\r\n     * @return initiator Dispute initiator\r\n     * @return reason Dispute reason\r\n     * @return details Dispute details\r\n     * @return timestamp Timestamp\r\n     * @return resolved Whether resolved\r\n     * @return resolver Resolver address\r\n     * @return resolution Resolution details\r\n     */\r\n    function getDispute(uint256 settlementId) external view returns (\r\n        uint256 id,\r\n        address initiator,\r\n        DisputeReason reason,\r\n        string memory details,\r\n        uint256 timestamp,\r\n        bool resolved,\r\n        address resolver,\r\n        string memory resolution\r\n    ) {\r\n        Dispute storage dispute = disputes[settlementId];\r\n        return (\r\n            dispute.settlementId,\r\n            dispute.initiator,\r\n            dispute.reason,\r\n            dispute.details,\r\n            dispute.timestamp,\r\n            dispute.resolved,\r\n            dispute.resolver,\r\n            dispute.resolution\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get user settlements\r\n     * @param user User address\r\n     * @return settlementIds Array of settlement IDs\r\n     */\r\n    function getUserSettlements(address user) external view returns (uint256[] memory) {\r\n        return userSettlements[user];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get bridge configuration\r\n     * @param bridgeAddress Bridge address\r\n     * @return bridge Bridge address\r\n     * @return isActive Whether active\r\n     * @return minConfirmations Minimum confirmations\r\n     * @return maxAmount Maximum amount\r\n     * @return fee Bridge fee\r\n     */\r\n    function getBridgeConfig(address bridgeAddress) external view returns (\r\n        address bridge,\r\n        bool isActive,\r\n        uint256 minConfirmations,\r\n        uint256 maxAmount,\r\n        uint256 fee\r\n    ) {\r\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\r\n        return (\r\n            config.bridgeAddress,\r\n            config.isActive,\r\n            config.minConfirmations,\r\n            config.maxAmount,\r\n            config.fee\r\n        );\r\n    }\r\n    \r\n    // =============================================================================\r\n    // ADMIN FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Update settlement fee\r\n     * @param newFee New fee amount\r\n     */\r\n    function updateSettlementFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        uint256 oldFee = settlementFee;\r\n        settlementFee = newFee;\r\n        emit SettlementFeeUpdated(oldFee, newFee);\r\n    }\r\n    \r\n    /**\r\n     * @dev Update dispute fee\r\n     * @param newFee New fee amount\r\n     */\r\n    function updateDisputeFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        uint256 oldFee = disputeFee;\r\n        disputeFee = newFee;\r\n        emit DisputeFeeUpdated(oldFee, newFee);\r\n    }\r\n    \r\n    /**\r\n     * @dev Pause contract\r\n     */\r\n    function pause() external onlyRole(EMERGENCY_ROLE) {\r\n        _pause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Unpause contract\r\n     */\r\n    function unpause() external onlyRole(EMERGENCY_ROLE) {\r\n        _unpause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency withdraw ETH\r\n     */\r\n    function emergencyWithdrawETH() external onlyRole(EMERGENCY_ROLE) {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency withdraw tokens\r\n     * @param token Token address\r\n     * @param amount Amount to withdraw\r\n     */\r\n    function emergencyWithdrawTokens(address token, uint256 amount) external onlyRole(EMERGENCY_ROLE) {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n    \r\n    // =============================================================================\r\n    // OVERRIDE FUNCTIONS\r\n    // =============================================================================\r\n    \r\n    /**\r\n     * @dev Override transfer function to check pause\r\n     */\r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual override(ERC20, ERC20Pausable) whenNotPaused {\r\n        super._update(from, to, amount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Receive function to accept ETH\r\n     */\r\n    receive() external payable {}\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1315],"ERC165":[1516],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1316,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1517,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1315,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1516,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,1516,1528,378,1315],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1515],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1515,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[515],"IERC20Errors":[420],"IERC721Errors":[468]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":420,"linearizedBaseContracts":[420],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":390,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":390,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":390,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":390,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":395,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":395,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":400,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":400,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":409,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":409,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":409,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":409,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":414,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":414,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":419,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":419,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":516,"src":"280:1764:2","usedErrors":[390,395,400,409,414,419],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":468,"linearizedBaseContracts":[468],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":426,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":426,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":431,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":431,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":440,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":440,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":440,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":440,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":445,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":445,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":450,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":450,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":457,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":457,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":457,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":462,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":462,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":467,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":467,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":516,"src":"2190:2092:2","usedErrors":[426,431,440,445,450,457,462,467],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":515,"linearizedBaseContracts":[515],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":480,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":480,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":480,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":485,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":485,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":490,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":490,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":497,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":497,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":497,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":502,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":502,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":507,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":507,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":514,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":514,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":514,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":516,"src":"4430:2107:2","usedErrors":[480,485,490,497,502,507,514],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1315],"ERC20":[1030],"IERC20":[1108],"IERC20Errors":[420],"IERC20Metadata":[1168]},"id":1031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1109,"src":"131:36:3","symbolAliases":[{"foreign":{"id":518,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1169,"src":"168:63:3","symbolAliases":[{"foreign":{"id":520,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":1316,"src":"232:48:3","symbolAliases":[{"foreign":{"id":522,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1031,"sourceUnit":516,"src":"281:65:3","symbolAliases":[{"foreign":{"id":524,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":527,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1315,"src":"1133:7:3"},"id":528,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":529,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"1142:6:3"},"id":530,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":531,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1168,"src":"1150:14:3"},"id":532,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":533,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1166:12:3"},"id":534,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1030,"linearizedBaseContracts":[1030,420,1168,1108,1315],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":538,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":1030,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":537,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":544,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":1030,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":543,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":542,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":546,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":1030,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":548,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":1030,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":550,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":1030,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":549,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":566,"nodeType":"Block","src":"1638:57:3","statements":[{"expression":{"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":558,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1648:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":559,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"1656:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":561,"nodeType":"ExpressionStatement","src":"1648:13:3"},{"expression":{"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":562,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1671:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":563,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"1681:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":565,"nodeType":"ExpressionStatement","src":"1671:17:3"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"1425:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":567,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"name_","nameLocation":"1608:5:3","nodeType":"VariableDeclaration","scope":567,"src":"1594:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":552,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:3","nodeType":"VariableDeclaration","scope":567,"src":"1615:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":554,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"1638:0:3"},"scope":1030,"src":"1582:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1155],"body":{"id":575,"nodeType":"Block","src":"1820:29:3","statements":[{"expression":{"id":573,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1837:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":572,"id":574,"nodeType":"Return","src":"1830:12:3"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"1701:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:3","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"1773:2:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"1805:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":570,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:3"},"scope":1030,"src":"1760:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1161],"body":{"id":584,"nodeType":"Block","src":"2024:31:3","statements":[{"expression":{"id":582,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":581,"id":583,"nodeType":"Return","src":"2034:14:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1855:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":585,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:3","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"1977:2:3"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"2009:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":579,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:3"},"scope":1030,"src":"1962:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1167],"body":{"id":593,"nodeType":"Block","src":"2744:26:3","statements":[{"expression":{"hexValue":"3138","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":590,"id":592,"nodeType":"Return","src":"2754:9:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"2061:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":594,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:3","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2705:2:3"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"2737:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":588,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:3"},"scope":1030,"src":"2688:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1057],"body":{"id":602,"nodeType":"Block","src":"2891:36:3","statements":[{"expression":{"id":600,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2908:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":599,"id":601,"nodeType":"Return","src":"2901:19:3"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2776:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:3","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"2850:2:3"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"2882:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:3"},"scope":1030,"src":"2830:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1065],"body":{"id":615,"nodeType":"Block","src":"3059:42:3","statements":[{"expression":{"baseExpression":{"id":611,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3076:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":612,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3086:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":610,"id":614,"nodeType":"Return","src":"3069:25:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"2933:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":616,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:3","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"account","nameLocation":"3012:7:3","nodeType":"VariableDeclaration","scope":616,"src":"3004:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"3050:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:3"},"scope":1030,"src":"2985:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":639,"nodeType":"Block","src":"3371:103:3","statements":[{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"owner","nameLocation":"3389:5:3","nodeType":"VariableDeclaration","scope":639,"src":"3381:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":630,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":628,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3397:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:3"},{"expression":{"arguments":[{"id":632,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"3429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3436:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"3440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3419:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"3419:27:3"},{"expression":{"hexValue":"74727565","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":625,"id":638,"nodeType":"Return","src":"3456:11:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3107:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":640,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"to","nameLocation":"3322:2:3","nodeType":"VariableDeclaration","scope":640,"src":"3314:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"3334:5:3","nodeType":"VariableDeclaration","scope":640,"src":"3326:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:3"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"3365:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:3"},"scope":1030,"src":"3296:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1085],"body":{"id":656,"nodeType":"Block","src":"3621:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":650,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3638:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":652,"indexExpression":{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"3650:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":654,"indexExpression":{"id":653,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3657:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":649,"id":655,"nodeType":"Return","src":"3631:34:3"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"3480:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:3","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"owner","nameLocation":"3559:5:3","nodeType":"VariableDeclaration","scope":657,"src":"3551:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"spender","nameLocation":"3574:7:3","nodeType":"VariableDeclaration","scope":657,"src":"3566:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:3"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"3612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:3"},"scope":1030,"src":"3532:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1095],"body":{"id":680,"nodeType":"Block","src":"4058:107:3","statements":[{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"4076:5:3","nodeType":"VariableDeclaration","scope":680,"src":"4068:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":669,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4084:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:3"},{"expression":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4115:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4122:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4131:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":921,"src":"4106:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"4106:31:3"},{"expression":{"hexValue":"74727565","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":666,"id":679,"nodeType":"Return","src":"4147:11:3"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"3678:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:3","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"spender","nameLocation":"4004:7:3","nodeType":"VariableDeclaration","scope":681,"src":"3996:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"value","nameLocation":"4021:5:3","nodeType":"VariableDeclaration","scope":681,"src":"4013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:3"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"4052:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":664,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:3"},"scope":1030,"src":"3979:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1107],"body":{"id":712,"nodeType":"Block","src":"4850:151:3","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"spender","nameLocation":"4868:7:3","nodeType":"VariableDeclaration","scope":712,"src":"4860:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4878:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:3"},{"expression":{"arguments":[{"id":699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4916:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4922:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4931:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4900:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4900:37:3"},{"expression":{"arguments":[{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4957:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4963:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4967:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4947:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4947:26:3"},{"expression":{"hexValue":"74727565","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":692,"id":711,"nodeType":"Return","src":"4983:11:3"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"4171:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":713,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:3","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"from","nameLocation":"4787:4:3","nodeType":"VariableDeclaration","scope":713,"src":"4779:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"to","nameLocation":"4801:2:3","nodeType":"VariableDeclaration","scope":713,"src":"4793:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"4813:5:3","nodeType":"VariableDeclaration","scope":713,"src":"4805:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:3"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"4844:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:3"},"scope":1030,"src":"4757:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":759,"nodeType":"Block","src":"5443:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5457:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:3","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":737,"nodeType":"IfStatement","src":"5453:86:3","trueBody":{"id":736,"nodeType":"Block","src":"5477:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:3","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":729,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"5498:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"RevertStatement","src":"5491:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5552:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:3","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"5548:86:3","trueBody":{"id":751,"nodeType":"Block","src":"5570:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:3","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":744,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5591:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"RevertStatement","src":"5584:39:3"}]}},{"expression":{"arguments":[{"id":754,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5651:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5657:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"5661:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"5643:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5643:24:3"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"5007:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:3","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"from","nameLocation":"5401:4:3","nodeType":"VariableDeclaration","scope":760,"src":"5393:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"to","nameLocation":"5415:2:3","nodeType":"VariableDeclaration","scope":760,"src":"5407:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"value","nameLocation":"5427:5:3","nodeType":"VariableDeclaration","scope":760,"src":"5419:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:3"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"5443:0:3"},"scope":1030,"src":"5374:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":836,"nodeType":"Block","src":"6064:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6078:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:3","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":807,"nodeType":"Block","src":"6252:362:3","statements":[{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:3","nodeType":"VariableDeclaration","scope":807,"src":"6266:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":786,"initialValue":{"baseExpression":{"id":783,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6288:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":785,"indexExpression":{"id":784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6298:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6321:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6335:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":797,"nodeType":"IfStatement","src":"6317:115:3","trueBody":{"id":796,"nodeType":"Block","src":"6342:90:3","statements":[{"errorCall":{"arguments":[{"id":791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6392:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6398:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6411:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6367:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"RevertStatement","src":"6360:57:3"}]}},{"id":806,"nodeType":"UncheckedBlock","src":"6445:159:3","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6552:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6562:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6570:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6584:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"6552:37:3"}]}]},"id":808,"nodeType":"IfStatement","src":"6074:540:3","trueBody":{"id":780,"nodeType":"Block","src":"6098:148:3","statements":[{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":776,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6214:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6230:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":779,"nodeType":"ExpressionStatement","src":"6214:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6628:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:3","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":828,"nodeType":"Block","src":"6843:206:3","statements":[{"id":827,"nodeType":"UncheckedBlock","src":"6857:182:3","statements":[{"expression":{"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":821,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7002:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7012:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":826,"nodeType":"ExpressionStatement","src":"7002:22:3"}]}]},"id":829,"nodeType":"IfStatement","src":"6624:425:3","trueBody":{"id":820,"nodeType":"Block","src":"6646:191:3","statements":[{"id":819,"nodeType":"UncheckedBlock","src":"6660:167:3","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6791:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6807:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"6791:21:3"}]}]}},{"eventCall":{"arguments":[{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"7079:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7083:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":830,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7064:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"EmitStatement","src":"7059:30:3"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"5680:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":837,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:3","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"from","nameLocation":"6014:4:3","nodeType":"VariableDeclaration","scope":837,"src":"6006:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"to","nameLocation":"6028:2:3","nodeType":"VariableDeclaration","scope":837,"src":"6020:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"value","nameLocation":"6040:5:3","nodeType":"VariableDeclaration","scope":837,"src":"6032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:3"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"6064:0:3"},"scope":1030,"src":"5989:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"7495:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7509:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:3","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":859,"nodeType":"IfStatement","src":"7505:91:3","trueBody":{"id":858,"nodeType":"Block","src":"7532:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:3","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":851,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7553:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"RevertStatement","src":"7546:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:3","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7625:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"7634:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"7605:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"7605:35:3"}]},"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"7102:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:3","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"account","nameLocation":"7462:7:3","nodeType":"VariableDeclaration","scope":870,"src":"7454:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"value","nameLocation":"7479:5:3","nodeType":"VariableDeclaration","scope":870,"src":"7471:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:3"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"7495:0:3"},"scope":1030,"src":"7439:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"8021:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8035:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:3","typeDescriptions":{}}},"id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":892,"nodeType":"IfStatement","src":"8031:89:3","trueBody":{"id":891,"nodeType":"Block","src":"8058:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:3","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"8079:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"RevertStatement","src":"8072:37:3"}]}},{"expression":{"arguments":[{"id":894,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8137:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:3","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"8158:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":893,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8129:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"8129:35:3"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"7653:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:3","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"account","nameLocation":"7988:7:3","nodeType":"VariableDeclaration","scope":903,"src":"7980:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"value","nameLocation":"8005:5:3","nodeType":"VariableDeclaration","scope":903,"src":"7997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:3"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"8021:0:3"},"scope":1030,"src":"7965:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"8781:54:3","statements":[{"expression":{"arguments":[{"id":914,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8800:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"8807:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"8816:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":913,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":981,"src":"8791:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"8791:37:3"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"8177:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:3","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"owner","nameLocation":"8733:5:3","nodeType":"VariableDeclaration","scope":921,"src":"8725:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"spender","nameLocation":"8748:7:3","nodeType":"VariableDeclaration","scope":921,"src":"8740:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"value","nameLocation":"8765:5:3","nodeType":"VariableDeclaration","scope":921,"src":"8757:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"8781:0:3"},"scope":1030,"src":"8707:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"9780:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9794:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:3","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"nodeType":"IfStatement","src":"9790:89:3","trueBody":{"id":946,"nodeType":"Block","src":"9815:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:3","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":939,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"9836:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"RevertStatement","src":"9829:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"9892:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:3","typeDescriptions":{}}},"id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"9888:90:3","trueBody":{"id":961,"nodeType":"Block","src":"9915:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:3","typeDescriptions":{}}},"id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":954,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"9936:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"RevertStatement","src":"9929:38:3"}]}},{"expression":{"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":963,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9987:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":966,"indexExpression":{"id":964,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9999:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":967,"indexExpression":{"id":965,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10017:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"nodeType":"ExpressionStatement","src":"9987:35:3"},{"condition":{"id":971,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"10036:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"10032:76:3","trueBody":{"id":978,"nodeType":"Block","src":"10047:61:3","statements":[{"eventCall":{"arguments":[{"id":973,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10075:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10082:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10091:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10066:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"EmitStatement","src":"10061:36:3"}]}}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"8841:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:3","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"owner","nameLocation":"9708:5:3","nodeType":"VariableDeclaration","scope":981,"src":"9700:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"spender","nameLocation":"9723:7:3","nodeType":"VariableDeclaration","scope":981,"src":"9715:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"value","nameLocation":"9740:5:3","nodeType":"VariableDeclaration","scope":981,"src":"9732:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:3","nodeType":"VariableDeclaration","scope":981,"src":"9747:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":929,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:3"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"9780:0:3"},"scope":1030,"src":"9682:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1028,"nodeType":"Block","src":"10485:387:3","statements":[{"assignments":[992],"declarations":[{"constant":false,"id":992,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:3","nodeType":"VariableDeclaration","scope":1028,"src":"10495:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":997,"initialValue":{"arguments":[{"id":994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10532:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10539:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":993,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10522:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10561:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":999,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:3","memberName":"max","nodeType":"MemberAccess","src":"10580:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"10557:309:3","trueBody":{"id":1026,"nodeType":"Block","src":"10599:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10617:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10636:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1015,"nodeType":"IfStatement","src":"10613:130:3","trueBody":{"id":1014,"nodeType":"Block","src":"10643:100:3","statements":[{"errorCall":{"arguments":[{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10695:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10704:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10722:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1008,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"10668:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"RevertStatement","src":"10661:67:3"}]}},{"id":1025,"nodeType":"UncheckedBlock","src":"10756:100:3","statements":[{"expression":{"arguments":[{"id":1017,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10793:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10800:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10809:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10828:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1016,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[921,981],"referencedDeclaration":981,"src":"10784:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"10784:57:3"}]}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10120:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:3","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"owner","nameLocation":"10429:5:3","nodeType":"VariableDeclaration","scope":1029,"src":"10421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"spender","nameLocation":"10444:7:3","nodeType":"VariableDeclaration","scope":1029,"src":"10436:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"value","nameLocation":"10461:5:3","nodeType":"VariableDeclaration","scope":1029,"src":"10453:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:3"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"10485:0:3"},"scope":1030,"src":"10396:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1031,"src":"1106:9768:3","usedErrors":[390,395,400,409,414,419],"usedEvents":[1042,1051]}],"src":"105:10770:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1108]},"id":1109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1032,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1108,"linearizedBaseContracts":[1108],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1042,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":1042,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":1042,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":1042,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1051,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":1051,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":1051,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":1051,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1057,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1057,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":1108,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1065,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":1065,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":1108,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":1075,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":1075,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1072,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":1108,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":1085,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":1085,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":1108,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1095,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":1095,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":1095,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1092,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":1108,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1107,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":1107,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":1107,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":1107,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":1108,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1109,"src":"204:2575:4","usedErrors":[],"usedEvents":[1042,1051]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1030],"ERC20Pausable":[1142],"Pausable":[1423]},"id":1143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1110,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1143,"sourceUnit":1031,"src":"150:35:5","symbolAliases":[{"foreign":{"id":1111,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"158:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1143,"sourceUnit":1424,"src":"186:53:5","symbolAliases":[{"foreign":{"id":1113,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"194:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1116,"name":"ERC20","nameLocations":["965:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"965:5:5"},"id":1117,"nodeType":"InheritanceSpecifier","src":"965:5:5"},{"baseName":{"id":1118,"name":"Pausable","nameLocations":["972:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1423,"src":"972:8:5"},"id":1119,"nodeType":"InheritanceSpecifier","src":"972:8:5"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"241:688:5","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1142,"linearizedBaseContracts":[1142,1423,1030,420,1168,1108,1315],"name":"ERC20Pausable","nameLocation":"948:13:5","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[837],"body":{"id":1140,"nodeType":"Block","src":"1211:47:5","statements":[{"expression":{"arguments":[{"id":1135,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"1235:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1241:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"1245:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1132,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1142_$","typeString":"type(contract super ERC20Pausable)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":837,"src":"1221:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"1221:30:5"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"987:121:5","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1141,"implemented":true,"kind":"function","modifiers":[{"id":1130,"kind":"modifierInvocation","modifierName":{"id":1129,"name":"whenNotPaused","nameLocations":["1197:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"1197:13:5"},"nodeType":"ModifierInvocation","src":"1197:13:5"}],"name":"_update","nameLocation":"1122:7:5","nodeType":"FunctionDefinition","overrides":{"id":1128,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:5"},"parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"from","nameLocation":"1138:4:5","nodeType":"VariableDeclaration","scope":1141,"src":"1130:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"to","nameLocation":"1152:2:5","nodeType":"VariableDeclaration","scope":1141,"src":"1144:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"1164:5:5","nodeType":"VariableDeclaration","scope":1141,"src":"1156:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"1211:0:5"},"scope":1142,"src":"1113:145:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1143,"src":"930:330:5","usedErrors":[390,395,400,409,414,419,1337,1340],"usedEvents":[1042,1051,1329,1334]}],"src":"124:1137:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1108],"IERC20Metadata":[1168]},"id":1169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1144,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1169,"sourceUnit":1109,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1148,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1108,"src":"306:6:6"},"id":1149,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1168,"linearizedBaseContracts":[1168,1108],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1155,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1152,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":1168,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1161,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1158,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":1168,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1167,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1164,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":1168,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1169,"src":"278:405:6","usedErrors":[],"usedEvents":[1042,1051]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1528],"IERC721":[1285]},"id":1286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1170,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1286,"sourceUnit":1529,"src":"134:62:7","symbolAliases":[{"foreign":{"id":1171,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1174,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"288:7:7"},"id":1175,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1285,"linearizedBaseContracts":[1285,1528],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1184,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":1184,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":1184,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":1184,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1193,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":1193,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":1193,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":1193,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1202,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":1202,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":1202,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":1202,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1199,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1210,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1210,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1210,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":1285,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1218,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":1218,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":1218,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":1285,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1230,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":1230,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":1230,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":1230,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":1230,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":1285,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1240,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":1240,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":1240,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":1285,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1250,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":1250,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":1250,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":1250,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":1285,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1258,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":1258,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":1258,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":1285,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1266,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":1266,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":1266,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":1285,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":1274,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":1274,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":1285,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1284,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":1284,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":1284,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1281,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":1285,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1286,"src":"267:4661:7","usedErrors":[],"usedEvents":[1184,1193,1202]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1315]},"id":1316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1287,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1315,"linearizedBaseContracts":[1315],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1296,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1292,"id":1295,"nodeType":"Return","src":"728:17:8"}]},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1315,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1301,"id":1304,"nodeType":"Return","src":"835:15:8"}]},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1315,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1310,"id":1312,"nodeType":"Return","src":"945:8:8"}]},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1314,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1315,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1316,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1315],"Pausable":[1423]},"id":1424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1424,"sourceUnit":1316,"src":"128:45:9","symbolAliases":[{"foreign":{"id":1318,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"136:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1321,"name":"Context","nameLocations":["645:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1315,"src":"645:7:9"},"id":1322,"nodeType":"InheritanceSpecifier","src":"645:7:9"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"175:439:9","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1423,"linearizedBaseContracts":[1423,1315],"name":"Pausable","nameLocation":"633:8:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1324,"mutability":"mutable","name":"_paused","nameLocation":"672:7:9","nodeType":"VariableDeclaration","scope":1423,"src":"659:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1323,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"686:73:9","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1329,"name":"Paused","nameLocation":"770:6:9","nodeType":"EventDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:9","nodeType":"VariableDeclaration","scope":1329,"src":"777:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:9"},"src":"764:30:9"},{"anonymous":false,"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"800:70:9","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1334,"name":"Unpaused","nameLocation":"881:8:9","nodeType":"EventDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:9","nodeType":"VariableDeclaration","scope":1334,"src":"890:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:9"},"src":"875:32:9"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"913:76:9","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1337,"name":"EnforcedPause","nameLocation":"1000:13:9","nodeType":"ErrorDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"1013:2:9"},"src":"994:22:9"},{"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"1022:80:9","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1340,"name":"ExpectedPause","nameLocation":"1113:13:9","nodeType":"ErrorDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"1126:2:9"},"src":"1107:22:9"},{"body":{"id":1347,"nodeType":"Block","src":"1340:47:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1343,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"1350:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"1350:19:9"},{"id":1346,"nodeType":"PlaceholderStatement","src":"1379:1:9"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"1135:175:9","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1348,"name":"whenNotPaused","nameLocation":"1324:13:9","nodeType":"ModifierDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"1337:2:9"},"src":"1315:72:9","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"1587:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1351,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1597:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"1597:16:9"},{"id":1354,"nodeType":"PlaceholderStatement","src":"1623:1:9"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"1393:167:9","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1356,"name":"whenPaused","nameLocation":"1574:10:9","nodeType":"ModifierDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"1584:2:9"},"src":"1565:66:9","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"1779:31:9","statements":[{"expression":{"id":1362,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1796:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1361,"id":1363,"nodeType":"Return","src":"1789:14:9"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"1637:84:9","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:9","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"1741:2:9"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"1773:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1359,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:9"},"scope":1423,"src":"1726:84:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1376,"nodeType":"Block","src":"1929:77:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1369,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"1943:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"1939:61:9","trueBody":{"id":1374,"nodeType":"Block","src":"1953:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1371,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"1974:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"RevertStatement","src":"1967:22:9"}]}}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"1816:57:9","text":" @dev Throws if the contract is paused."},"id":1377,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"1904:2:9"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[],"src":"1929:0:9"},"scope":1423,"src":"1878:128:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"2126:78:9","statements":[{"condition":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:9","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1381,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"2141:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"2136:62:9","trueBody":{"id":1387,"nodeType":"Block","src":"2151:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2172:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"RevertStatement","src":"2165:22:9"}]}}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"2012:61:9","text":" @dev Throws if the contract is not paused."},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:9","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"2101:2:9"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"2126:0:9"},"scope":1423,"src":"2078:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"2388:66:9","statements":[{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2398:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"ExpressionStatement","src":"2398:14:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1401,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2434:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2427:6:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"EmitStatement","src":"2422:25:9"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"2210:124:9","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1406,"implemented":true,"kind":"function","modifiers":[{"id":1394,"kind":"modifierInvocation","modifierName":{"id":1393,"name":"whenNotPaused","nameLocations":["2374:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"2374:13:9"},"nodeType":"ModifierInvocation","src":"2374:13:9"}],"name":"_pause","nameLocation":"2348:6:9","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"2354:2:9"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"2388:0:9"},"scope":1423,"src":"2339:115:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"2634:69:9","statements":[{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1412,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2644:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"ExpressionStatement","src":"2644:15:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1417,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2683:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1416,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2674:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1420,"nodeType":"EmitStatement","src":"2669:27:9"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"2460:121:9","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1422,"implemented":true,"kind":"function","modifiers":[{"id":1410,"kind":"modifierInvocation","modifierName":{"id":1409,"name":"whenPaused","nameLocations":["2623:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"2623:10:9"},"nodeType":"ModifierInvocation","src":"2623:10:9"}],"name":"_unpause","nameLocation":"2595:8:9","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"2603:2:9"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"2634:0:9"},"scope":1423,"src":"2586:117:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1424,"src":"615:2090:9","usedErrors":[1337,1340],"usedEvents":[1329,1334]}],"src":"102:2604:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1492]},"id":1493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1425,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"135:894:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1492,"linearizedBaseContracts":[1492],"name":"ReentrancyGuard","nameLocation":"1048:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1429,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:10","nodeType":"VariableDeclaration","scope":1492,"src":"1818:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1432,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:10","nodeType":"VariableDeclaration","scope":1492,"src":"1864:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1434,"mutability":"mutable","name":"_status","nameLocation":"1923:7:10","nodeType":"VariableDeclaration","scope":1492,"src":"1907:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1937:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1437,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:10","nodeType":"ErrorDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"2028:2:10"},"src":"1994:37:10"},{"body":{"id":1444,"nodeType":"Block","src":"2051:38:10","statements":[{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1440,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1441,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2071:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1443,"nodeType":"ExpressionStatement","src":"2061:21:10"}]},"id":1445,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"2048:2:10"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"2051:0:10"},"scope":1492,"src":"2037:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"2490:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1448,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2500:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"ExpressionStatement","src":"2500:21:10"},{"id":1451,"nodeType":"PlaceholderStatement","src":"2531:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1452,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2542:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"2542:20:10"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"2095:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1456,"name":"nonReentrant","nameLocation":"2475:12:10","nodeType":"ModifierDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"2487:2:10"},"src":"2466:103:10","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"2614:268:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1460,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1466,"nodeType":"IfStatement","src":"2698:86:10","trueBody":{"id":1465,"nodeType":"Block","src":"2722:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1462,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"2743:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"RevertStatement","src":"2736:37:10"}]}},{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1468,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"2858:17:10"}]},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:10","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"2603:2:10"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"2614:0:10"},"scope":1492,"src":"2575:307:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1479,"nodeType":"Block","src":"2926:170:10","statements":[{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1475,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1476,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"3078:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"3068:21:10"}]},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:10","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"2915:2:10"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[],"src":"2926:0:10"},"scope":1492,"src":"2888:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1490,"nodeType":"Block","src":"3339:42:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1487,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1485,"id":1489,"nodeType":"Return","src":"3349:25:10"}]},"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"3102:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:10","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"3307:2:10"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"3333:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1483,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:10"},"scope":1492,"src":"3275:106:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1493,"src":"1030:2353:10","usedErrors":[1437],"usedEvents":[]}],"src":"109:3275:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1516],"IERC165":[1528]},"id":1517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1494,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1517,"sourceUnit":1529,"src":"140:38:11","symbolAliases":[{"foreign":{"id":1495,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1498,"name":"IERC165","nameLocations":["688:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"688:7:11"},"id":1499,"nodeType":"InheritanceSpecifier","src":"688:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"180:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1516,"linearizedBaseContracts":[1516,1528],"name":"ERC165","nameLocation":"678:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1527],"body":{"id":1514,"nodeType":"Block","src":"845:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"862:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1509,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"882:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1528_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1528_$","typeString":"type(contract IERC165)"}],"id":1508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1528","typeString":"type(contract IERC165)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1506,"id":1513,"nodeType":"Return","src":"855:47:11"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"702:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:11","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:11","nodeType":"VariableDeclaration","scope":1515,"src":"790:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1501,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:11"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"839:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:11"},"scope":1516,"src":"763:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1517,"src":"660:251:11","usedErrors":[],"usedEvents":[]}],"src":"114:798:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1528]},"id":1529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1528,"linearizedBaseContracts":[1528],"name":"IERC165","nameLocation":"432:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1527,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":1527,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1521,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1524,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":1528,"src":"791:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1529,"src":"422:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:755:12"},"id":12},"contracts/GameDinL3Bridge.sol":{"ast":{"absolutePath":"contracts/GameDinL3Bridge.sol","exportedSymbols":{"AccessControl":[295],"Context":[1315],"ERC165":[1516],"GameDinL3Bridge":[2933],"IAccessControl":[378],"IERC165":[1528],"IERC20":[1108],"IERC721":[1285],"Pausable":[1423],"ReentrancyGuard":[1492]},"id":2934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1530,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2934,"sourceUnit":1109,"src":"61:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2934,"sourceUnit":1286,"src":"119:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2934,"sourceUnit":296,"src":"179:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2934,"sourceUnit":1493,"src":"239:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2934,"sourceUnit":1424,"src":"300:52:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1537,"name":"AccessControl","nameLocations":["591:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"591:13:13"},"id":1538,"nodeType":"InheritanceSpecifier","src":"591:13:13"},{"baseName":{"id":1539,"name":"ReentrancyGuard","nameLocations":["606:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"606:15:13"},"id":1540,"nodeType":"InheritanceSpecifier","src":"606:15:13"},{"baseName":{"id":1541,"name":"Pausable","nameLocations":["623:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1423,"src":"623:8:13"},"id":1542,"nodeType":"InheritanceSpecifier","src":"623:8:13"}],"canonicalName":"GameDinL3Bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"356:205:13","text":" @title GameDin L3 Bridge Contract\n @dev Handles cross-chain transfers between L2 settlement layer and L3 gaming network\n Manages asset bridging, validation, and cross-chain communication"},"fullyImplemented":true,"id":2933,"linearizedBaseContracts":[2933,1423,1492,295,1516,1528,378,1315],"name":"GameDinL3Bridge","nameLocation":"572:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"4be40fd1","id":1547,"mutability":"constant","name":"BRIDGE_OPERATOR_ROLE","nameLocation":"867:20:13","nodeType":"VariableDeclaration","scope":2933,"src":"843:80:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"843:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4252494447455f4f50455241544f525f524f4c45","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"900:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7045adfe67d5f94dbfddcdb901e44bef55baacabb398c7cddda1bfd7620b1568","typeString":"literal_string \"BRIDGE_OPERATOR_ROLE\""},"value":"BRIDGE_OPERATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7045adfe67d5f94dbfddcdb901e44bef55baacabb398c7cddda1bfd7620b1568","typeString":"literal_string \"BRIDGE_OPERATOR_ROLE\""}],"id":1544,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"890:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"890:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c49baebe","id":1552,"mutability":"constant","name":"VALIDATOR_ROLE","nameLocation":"954:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"930:68:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"930:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"56414c494441544f525f524f4c45","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"981:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c98926","typeString":"literal_string \"VALIDATOR_ROLE\""},"value":"VALIDATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c98926","typeString":"literal_string \"VALIDATOR_ROLE\""}],"id":1549,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"971:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"20df4359","id":1557,"mutability":"constant","name":"EMERGENCY_ROLE","nameLocation":"1029:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"1005:68:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f524f4c45","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1056:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""},"value":"EMERGENCY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""}],"id":1554,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1046:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1046:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"9a7c91d9","id":1560,"mutability":"constant","name":"BRIDGE_TIMEOUT","nameLocation":"1110:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"1086:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3234","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1127:8:13","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"24"},"visibility":"public"},{"constant":true,"functionSelector":"7fce0002","id":1567,"mutability":"constant","name":"MAX_BRIDGE_AMOUNT","nameLocation":"1166:17:13","nodeType":"VariableDeclaration","scope":2933,"src":"1142:59:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1142:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1186:6:13","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1195:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1199:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1195:6:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1186:15:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"886688c1","id":1574,"mutability":"constant","name":"MIN_BRIDGE_AMOUNT","nameLocation":"1247:17:13","nodeType":"VariableDeclaration","scope":2933,"src":"1223:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1267:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1271:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1275:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1271:6:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1267:10:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"canonicalName":"GameDinL3Bridge.BridgeStatus","id":1580,"members":[{"id":1575,"name":"PENDING","nameLocation":"1532:7:13","nodeType":"EnumValue","src":"1532:7:13"},{"id":1576,"name":"PROCESSING","nameLocation":"1550:10:13","nodeType":"EnumValue","src":"1550:10:13"},{"id":1577,"name":"COMPLETED","nameLocation":"1571:9:13","nodeType":"EnumValue","src":"1571:9:13"},{"id":1578,"name":"FAILED","nameLocation":"1591:6:13","nodeType":"EnumValue","src":"1591:6:13"},{"id":1579,"name":"CANCELLED","nameLocation":"1608:9:13","nodeType":"EnumValue","src":"1608:9:13"}],"name":"BridgeStatus","nameLocation":"1508:12:13","nodeType":"EnumDefinition","src":"1503:121:13"},{"canonicalName":"GameDinL3Bridge.AssetType","id":1584,"members":[{"id":1581,"name":"TOKEN","nameLocation":"1662:5:13","nodeType":"EnumValue","src":"1662:5:13"},{"id":1582,"name":"NFT","nameLocation":"1678:3:13","nodeType":"EnumValue","src":"1678:3:13"},{"id":1583,"name":"ETH","nameLocation":"1692:3:13","nodeType":"EnumValue","src":"1692:3:13"}],"name":"AssetType","nameLocation":"1641:9:13","nodeType":"EnumDefinition","src":"1636:66:13"},{"canonicalName":"GameDinL3Bridge.BridgeRequest","id":1615,"members":[{"constant":false,"id":1586,"mutability":"mutable","name":"requestId","nameLocation":"1754:9:13","nodeType":"VariableDeclaration","scope":1615,"src":"1746:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"sender","nameLocation":"1782:6:13","nodeType":"VariableDeclaration","scope":1615,"src":"1774:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"1774:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"recipient","nameLocation":"1807:9:13","nodeType":"VariableDeclaration","scope":1615,"src":"1799:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"assetType","nameLocation":"1837:9:13","nodeType":"VariableDeclaration","scope":1615,"src":"1827:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"AssetType","nameLocations":["1827:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"1827:9:13"},"referencedDeclaration":1584,"src":"1827:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"assetAddress","nameLocation":"1865:12:13","nodeType":"VariableDeclaration","scope":1615,"src":"1857:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"amount","nameLocation":"1896:6:13","nodeType":"VariableDeclaration","scope":1615,"src":"1888:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"tokenId","nameLocation":"1921:7:13","nodeType":"VariableDeclaration","scope":1615,"src":"1913:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"status","nameLocation":"1952:6:13","nodeType":"VariableDeclaration","scope":1615,"src":"1939:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},"typeName":{"id":1601,"nodeType":"UserDefinedTypeName","pathNode":{"id":1600,"name":"BridgeStatus","nameLocations":["1939:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"1939:12:13"},"referencedDeclaration":1580,"src":"1939:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"timestamp","nameLocation":"1977:9:13","nodeType":"VariableDeclaration","scope":1615,"src":"1969:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"deadline","nameLocation":"2005:8:13","nodeType":"VariableDeclaration","scope":1615,"src":"1997:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"merkleRoot","nameLocation":"2032:10:13","nodeType":"VariableDeclaration","scope":1615,"src":"2024:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2024:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"2060:17:13","nodeType":"VariableDeclaration","scope":1615,"src":"2053:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1609,"name":"string","nodeType":"ElementaryTypeName","src":"2053:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"validator","nameLocation":"2096:9:13","nodeType":"VariableDeclaration","scope":1615,"src":"2088:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"isL3ToL2","nameLocation":"2121:8:13","nodeType":"VariableDeclaration","scope":1615,"src":"2116:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"2116:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BridgeRequest","nameLocation":"1721:13:13","nodeType":"StructDefinition","scope":2933,"src":"1714:423:13","visibility":"public"},{"canonicalName":"GameDinL3Bridge.BridgeConfig","id":1626,"members":[{"constant":false,"id":1617,"mutability":"mutable","name":"isActive","nameLocation":"2185:8:13","nodeType":"VariableDeclaration","scope":1626,"src":"2180:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1616,"name":"bool","nodeType":"ElementaryTypeName","src":"2180:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"minConfirmations","nameLocation":"2212:16:13","nodeType":"VariableDeclaration","scope":1626,"src":"2204:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"maxAmount","nameLocation":"2247:9:13","nodeType":"VariableDeclaration","scope":1626,"src":"2239:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"fee","nameLocation":"2275:3:13","nodeType":"VariableDeclaration","scope":1626,"src":"2267:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"timeout","nameLocation":"2297:7:13","nodeType":"VariableDeclaration","scope":1626,"src":"2289:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2289:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BridgeConfig","nameLocation":"2156:12:13","nodeType":"StructDefinition","scope":2933,"src":"2149:163:13","visibility":"public"},{"canonicalName":"GameDinL3Bridge.ValidatorInfo","id":1637,"members":[{"constant":false,"id":1628,"mutability":"mutable","name":"isActive","nameLocation":"2361:8:13","nodeType":"VariableDeclaration","scope":1637,"src":"2356:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"2356:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"totalProcessed","nameLocation":"2388:14:13","nodeType":"VariableDeclaration","scope":1637,"src":"2380:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"successRate","nameLocation":"2421:11:13","nodeType":"VariableDeclaration","scope":1637,"src":"2413:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"lastActivity","nameLocation":"2451:12:13","nodeType":"VariableDeclaration","scope":1637,"src":"2443:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2443:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"stake","nameLocation":"2482:5:13","nodeType":"VariableDeclaration","scope":1637,"src":"2474:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2474:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidatorInfo","nameLocation":"2331:13:13","nodeType":"StructDefinition","scope":2933,"src":"2324:171:13","visibility":"public"},{"constant":false,"functionSelector":"ea42418b","id":1639,"mutability":"mutable","name":"settlementContract","nameLocation":"2724:18:13","nodeType":"VariableDeclaration","scope":2933,"src":"2709:33:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"2709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"973a814e","id":1641,"mutability":"mutable","name":"requestCounter","nameLocation":"2764:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"2749:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8aea61dc","id":1643,"mutability":"mutable","name":"totalRequests","nameLocation":"2800:13:13","nodeType":"VariableDeclaration","scope":2933,"src":"2785:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5f81a57c","id":1645,"mutability":"mutable","name":"totalVolume","nameLocation":"2835:11:13","nodeType":"VariableDeclaration","scope":2933,"src":"2820:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"82b12dd7","id":1652,"mutability":"mutable","name":"bridgeFee","nameLocation":"2868:9:13","nodeType":"VariableDeclaration","scope":2933,"src":"2853:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2853:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"302e303031","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2880:5:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1000","typeString":"rational_const 1 / 1000"},"value":"0.001"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2888:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2888:6:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2880:14:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"58e312c4","id":1659,"mutability":"mutable","name":"validatorStake","nameLocation":"2932:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"2917:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2956:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2960:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2956:6:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"2949:13:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"9f89c8a2","id":1664,"mutability":"mutable","name":"bridgeRequests","nameLocation":"3031:14:13","nodeType":"VariableDeclaration","scope":2933,"src":"2990:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest)"},"typeName":{"id":1663,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2990:33:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"BridgeRequest","nameLocations":["3009:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"3009:13:13"},"referencedDeclaration":1615,"src":"3009:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"263cb6b6","id":1669,"mutability":"mutable","name":"userRequests","nameLocation":"3089:12:13","nodeType":"VariableDeclaration","scope":2933,"src":"3052:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":1668,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"3060:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3052:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3071:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ArrayTypeName","src":"3071:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"fa52c7d8","id":1674,"mutability":"mutable","name":"validators","nameLocation":"3149:10:13","nodeType":"VariableDeclaration","scope":2933,"src":"3108:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo)"},"typeName":{"id":1673,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"3116:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3108:33:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"ValidatorInfo","nameLocations":["3127:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"3127:13:13"},"referencedDeclaration":1637,"src":"3127:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"ac2e4936","id":1678,"mutability":"mutable","name":"processedTransactions","nameLocation":"3198:21:13","nodeType":"VariableDeclaration","scope":2933,"src":"3166:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1677,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3174:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3166:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1676,"name":"bool","nodeType":"ElementaryTypeName","src":"3185:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"427ac0ca","id":1683,"mutability":"mutable","name":"bridgeConfigs","nameLocation":"3266:13:13","nodeType":"VariableDeclaration","scope":2933,"src":"3226:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$1626_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.BridgeConfig)"},"typeName":{"id":1682,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"3234:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3226:32:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$1626_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.BridgeConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1681,"nodeType":"UserDefinedTypeName","pathNode":{"id":1680,"name":"BridgeConfig","nameLocations":["3245:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1626,"src":"3245:12:13"},"referencedDeclaration":1626,"src":"3245:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$1626_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeConfig"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"324d1b6cc60ec8b0b60854da81f895de35042fc8a80cc1ac5b8c8f90a4740e30","id":1704,"name":"BridgeRequestCreated","nameLocation":"3491:20:13","nodeType":"EventDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"3538:9:13","nodeType":"VariableDeclaration","scope":1704,"src":"3522:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3522:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1687,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3574:6:13","nodeType":"VariableDeclaration","scope":1704,"src":"3558:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3607:9:13","nodeType":"VariableDeclaration","scope":1704,"src":"3591:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3591:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"indexed":false,"mutability":"mutable","name":"assetType","nameLocation":"3637:9:13","nodeType":"VariableDeclaration","scope":1704,"src":"3627:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"typeName":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"AssetType","nameLocations":["3627:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"3627:9:13"},"referencedDeclaration":1584,"src":"3627:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"visibility":"internal"},{"constant":false,"id":1694,"indexed":false,"mutability":"mutable","name":"assetAddress","nameLocation":"3665:12:13","nodeType":"VariableDeclaration","scope":1704,"src":"3657:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"3657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3696:6:13","nodeType":"VariableDeclaration","scope":1704,"src":"3688:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3688:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1698,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"3721:7:13","nodeType":"VariableDeclaration","scope":1704,"src":"3713:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1700,"indexed":false,"mutability":"mutable","name":"isL3ToL2","nameLocation":"3744:8:13","nodeType":"VariableDeclaration","scope":1704,"src":"3739:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1699,"name":"bool","nodeType":"ElementaryTypeName","src":"3739:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1702,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3771:9:13","nodeType":"VariableDeclaration","scope":1704,"src":"3763:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3511:276:13"},"src":"3485:303:13"},{"anonymous":false,"eventSelector":"11e030ca8ba35e719c03c56fa4f16240dcc98aa67832e96db65c3538a92126ec","id":1717,"name":"BridgeRequestProcessed","nameLocation":"3806:22:13","nodeType":"EventDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"3855:9:13","nodeType":"VariableDeclaration","scope":1717,"src":"3839:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"3891:9:13","nodeType":"VariableDeclaration","scope":1717,"src":"3875:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"3875:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"3924:6:13","nodeType":"VariableDeclaration","scope":1717,"src":"3911:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},"typeName":{"id":1710,"nodeType":"UserDefinedTypeName","pathNode":{"id":1709,"name":"BridgeStatus","nameLocations":["3911:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"3911:12:13"},"referencedDeclaration":1580,"src":"3911:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"visibility":"internal"},{"constant":false,"id":1713,"indexed":false,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"3948:17:13","nodeType":"VariableDeclaration","scope":1717,"src":"3941:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1712,"name":"string","nodeType":"ElementaryTypeName","src":"3941:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1715,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3984:9:13","nodeType":"VariableDeclaration","scope":1717,"src":"3976:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3976:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3828:172:13"},"src":"3800:201:13"},{"anonymous":false,"eventSelector":"02b57eecd372ee1f8bd796bedf6d87ea0da0834f5cdf5391efa26398ef2c0bc0","id":1727,"name":"BridgeRequestCompleted","nameLocation":"4019:22:13","nodeType":"EventDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"4068:9:13","nodeType":"VariableDeclaration","scope":1727,"src":"4052:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"4052:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1721,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4104:9:13","nodeType":"VariableDeclaration","scope":1727,"src":"4088:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"4088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4132:6:13","nodeType":"VariableDeclaration","scope":1727,"src":"4124:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4157:9:13","nodeType":"VariableDeclaration","scope":1727,"src":"4149:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4041:132:13"},"src":"4013:161:13"},{"anonymous":false,"eventSelector":"4fedf9289a156b214915bd5c2db58d3ee16acc185e80df66ee404e4573c821e1","id":1735,"name":"ValidatorRegistered","nameLocation":"4192:19:13","nodeType":"EventDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"4238:9:13","nodeType":"VariableDeclaration","scope":1735,"src":"4222:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1731,"indexed":false,"mutability":"mutable","name":"stake","nameLocation":"4266:5:13","nodeType":"VariableDeclaration","scope":1735,"src":"4258:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1733,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4290:9:13","nodeType":"VariableDeclaration","scope":1735,"src":"4282:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4282:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4211:95:13"},"src":"4186:121:13"},{"anonymous":false,"eventSelector":"cdc86a7bd23991b72015ea60a4080fb4ade4360c5536444ba006509fd0f8c98c","id":1743,"name":"ValidatorStakeUpdated","nameLocation":"4325:21:13","nodeType":"EventDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"4373:9:13","nodeType":"VariableDeclaration","scope":1743,"src":"4357:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"4357:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"indexed":false,"mutability":"mutable","name":"oldStake","nameLocation":"4401:8:13","nodeType":"VariableDeclaration","scope":1743,"src":"4393:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4393:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1741,"indexed":false,"mutability":"mutable","name":"newStake","nameLocation":"4428:8:13","nodeType":"VariableDeclaration","scope":1743,"src":"4420:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4420:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4346:97:13"},"src":"4319:125:13"},{"anonymous":false,"eventSelector":"3e7af433b010df0902f945628a14ef63c63e1e5e8306127bde522445a470588f","id":1749,"name":"BridgeFeeUpdated","nameLocation":"4462:16:13","nodeType":"EventDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"4487:6:13","nodeType":"VariableDeclaration","scope":1749,"src":"4479:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4479:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1747,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"4503:6:13","nodeType":"VariableDeclaration","scope":1749,"src":"4495:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4495:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4478:32:13"},"src":"4456:55:13"},{"anonymous":false,"eventSelector":"1093db028025d2405a1aea589a8652d1f919bd517e7c7e858e0af317584d1913","id":1755,"name":"ValidatorStakeUpdated","nameLocation":"4523:21:13","nodeType":"EventDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"indexed":false,"mutability":"mutable","name":"oldStake","nameLocation":"4553:8:13","nodeType":"VariableDeclaration","scope":1755,"src":"4545:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4545:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1753,"indexed":false,"mutability":"mutable","name":"newStake","nameLocation":"4571:8:13","nodeType":"VariableDeclaration","scope":1755,"src":"4563:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4563:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4544:36:13"},"src":"4517:64:13"},{"body":{"id":1798,"nodeType":"Block","src":"4832:359:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"_settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"4851:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4882:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4874:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"4874:7:13","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4874:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4851:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736574746c656d656e7420636f6e7472616374","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4886:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c540066c18d719656830b53c17958707db68bc4bc99353b38e99a39ae29dbd9e","typeString":"literal_string \"Invalid settlement contract\""},"value":"Invalid settlement contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c540066c18d719656830b53c17958707db68bc4bc99353b38e99a39ae29dbd9e","typeString":"literal_string \"Invalid settlement contract\""}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4843:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4843:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"4843:73:13"},{"expression":{"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1770,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4927:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1771,"name":"_settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"4948:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4927:40:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1773,"nodeType":"ExpressionStatement","src":"4927:40:13"},{"expression":{"arguments":[{"id":1775,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4999:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1776,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5019:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5023:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5019:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1774,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4988:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1779,"nodeType":"ExpressionStatement","src":"4988:42:13"},{"expression":{"arguments":[{"id":1781,"name":"BRIDGE_OPERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5052:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5074:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5074:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1780,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5041:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5041:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"ExpressionStatement","src":"5041:44:13"},{"expression":{"arguments":[{"id":1787,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"5107:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5123:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5123:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5096:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"ExpressionStatement","src":"5096:38:13"},{"expression":{"arguments":[{"id":1793,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5156:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1794,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5172:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5172:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1792,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5145:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1797,"nodeType":"ExpressionStatement","src":"5145:38:13"}]},"id":1799,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"_settlementContract","nameLocation":"4811:19:13","nodeType":"VariableDeclaration","scope":1799,"src":"4803:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"4803:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4802:29:13"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"4832:0:13"},"scope":2933,"src":"4791:400:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2019,"nodeType":"Block","src":"5917:1749:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"5936:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5957:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"5949:7:13","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5949:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5936:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5961:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":1818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5928:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5928:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"5928:53:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6000:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1830,"name":"MIN_BRIDGE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6010:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6000:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f20736d616c6c","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6029:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d0f811feb77b15c07823650f43b752da35426dc91a38075abe3ad6ce20ccaf3","typeString":"literal_string \"Amount too small\""},"value":"Amount too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d0f811feb77b15c07823650f43b752da35426dc91a38075abe3ad6ce20ccaf3","typeString":"literal_string \"Amount too small\""}],"id":1828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5992:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"ExpressionStatement","src":"5992:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6067:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1837,"name":"MAX_BRIDGE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6077:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6067:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f206c61726765","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6096:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""},"value":"Amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""}],"id":1835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6059:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6059:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"ExpressionStatement","src":"6059:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6134:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6138:5:13","memberName":"value","nodeType":"MemberAccess","src":"6134:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1845,"name":"bridgeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"6147:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6134:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062726964676520666565","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7808483644bd0161152147c81666c5983cd95b34de5955f65b6c2dfffe085a99","typeString":"literal_string \"Insufficient bridge fee\""},"value":"Insufficient bridge fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7808483644bd0161152147c81666c5983cd95b34de5955f65b6c2dfffe085a99","typeString":"literal_string \"Insufficient bridge fee\""}],"id":1842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6126:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6126:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"6126:58:13"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:16:13","subExpression":{"id":1850,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"6205:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"6205:16:13"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"requestId","nameLocation":"6240:9:13","nodeType":"VariableDeclaration","scope":2019,"src":"6232:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"id":1855,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"6252:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6232:34:13"},{"assignments":[1859],"declarations":[{"constant":false,"id":1859,"mutability":"mutable","name":"request","nameLocation":"6309:7:13","nodeType":"VariableDeclaration","scope":2019,"src":"6287:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"},"typeName":{"id":1858,"nodeType":"UserDefinedTypeName","pathNode":{"id":1857,"name":"BridgeRequest","nameLocations":["6287:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"6287:13:13"},"referencedDeclaration":1615,"src":"6287:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}},"visibility":"internal"}],"id":1863,"initialValue":{"baseExpression":{"id":1860,"name":"bridgeRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6319:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest storage ref)"}},"id":1862,"indexExpression":{"id":1861,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6334:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6319:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage","typeString":"struct GameDinL3Bridge.BridgeRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6287:57:13"},{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1864,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6355:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6363:9:13","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"6355:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1867,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6375:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6355:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"6355:29:13"},{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1870,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6395:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6403:6:13","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"6395:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6412:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6416:6:13","memberName":"sender","nodeType":"MemberAccess","src":"6412:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6395:27:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1876,"nodeType":"ExpressionStatement","src":"6395:27:13"},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1877,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6433:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6441:9:13","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"6433:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1880,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6453:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6433:29:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1882,"nodeType":"ExpressionStatement","src":"6433:29:13"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1883,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6473:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6481:9:13","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":1593,"src":"6473:17:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1886,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"6493:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"6473:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"id":1888,"nodeType":"ExpressionStatement","src":"6473:29:13"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1889,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6513:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6521:12:13","memberName":"assetAddress","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"6513:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1892,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6536:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6513:35:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1894,"nodeType":"ExpressionStatement","src":"6513:35:13"},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1895,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6559:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6567:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"6559:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6576:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6559:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"6559:23:13"},{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1901,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6593:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6601:7:13","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"6593:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1904,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"6611:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6593:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"nodeType":"ExpressionStatement","src":"6593:25:13"},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1907,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6629:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6637:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"6629:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1910,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6646:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6659:7:13","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"6646:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"6629:37:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"id":1913,"nodeType":"ExpressionStatement","src":"6629:37:13"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1914,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6677:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6685:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"6677:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1917,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6697:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6703:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"6697:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6677:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"6677:35:13"},{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1921,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6723:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6731:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"6723:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1924,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6742:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6748:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"6742:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1926,"name":"BRIDGE_TIMEOUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"6760:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6742:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6723:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"6723:51:13"},{"expression":{"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1930,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6785:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":1932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6793:8:13","memberName":"isL3ToL2","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"6785:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6804:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6785:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"ExpressionStatement","src":"6785:24:13"},{"expression":{"arguments":[{"id":1941,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6860:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1936,"name":"userRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"6830:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1939,"indexExpression":{"expression":{"id":1937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6843:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6847:6:13","memberName":"sender","nodeType":"MemberAccess","src":"6843:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6830:24:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6855:4:13","memberName":"push","nodeType":"MemberAccess","src":"6830:29:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"6830:40:13"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6881:15:13","subExpression":{"id":1944,"name":"totalRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6881:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"6881:15:13"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"6907:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6922:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"6907:21:13"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"7000:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1952,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7013:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7023:5:13","memberName":"TOKEN","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"7013:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"7000:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"7135:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1970,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7148:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7158:3:13","memberName":"NFT","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"7148:13:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"7135:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"7270:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1988,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"7283:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7293:3:13","memberName":"ETH","nodeType":"MemberAccess","referencedDeclaration":1583,"src":"7283:13:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"7270:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"nodeType":"IfStatement","src":"7266:119:13","trueBody":{"id":2001,"nodeType":"Block","src":"7298:87:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1992,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7321:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7325:5:13","memberName":"value","nodeType":"MemberAccess","src":"7321:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7334:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1995,"name":"bridgeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7343:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7334:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420455448","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7354:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bdfce708c38b38e49561819ad1e311f4e27ccdb7e08770846f15d78c1e72db1","typeString":"literal_string \"Insufficient ETH\""},"value":"Insufficient ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bdfce708c38b38e49561819ad1e311f4e27ccdb7e08770846f15d78c1e72db1","typeString":"literal_string \"Insufficient ETH\""}],"id":1991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7313:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"7313:60:13"}]}},"id":2003,"nodeType":"IfStatement","src":"7131:254:13","trueBody":{"id":1986,"nodeType":"Block","src":"7163:97:13","statements":[{"expression":{"arguments":[{"expression":{"id":1977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7213:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7217:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7213:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1981,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7233:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7225:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"7225:7:13","typeDescriptions":{}}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7225:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1974,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7186:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1973,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"7178:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1285_$","typeString":"type(contract IERC721)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7178:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1285","typeString":"contract IERC721"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7200:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1250,"src":"7178:34:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7178:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"ExpressionStatement","src":"7178:70:13"}]}},"id":2004,"nodeType":"IfStatement","src":"6996:389:13","trueBody":{"id":1968,"nodeType":"Block","src":"7030:95:13","statements":[{"expression":{"arguments":[{"expression":{"id":1959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7079:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7083:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7079:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1963,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7099:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7091:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"7091:7:13","typeDescriptions":{}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7091:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7106:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1956,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7052:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1955,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7045:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7045:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7066:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1107,"src":"7045:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7045:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"nodeType":"ExpressionStatement","src":"7045:68:13"}]}},{"eventCall":{"arguments":[{"id":2006,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7445:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7469:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7473:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7469:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2009,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7494:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2010,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"7518:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},{"id":2011,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"7542:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"7569:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"7590:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7612:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":2015,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7632:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7638:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"7632:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2005,"name":"BridgeRequestCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"7410:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_enum$_AssetType_$1584_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,enum GameDinL3Bridge.AssetType,address,uint256,uint256,bool,uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7410:248:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"EmitStatement","src":"7405:253:13"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"5406:294:13","text":" @dev Create a bridge request from L2 to L3\n @param recipient Recipient address on L3\n @param assetType Type of asset to bridge\n @param assetAddress Asset contract address\n @param amount Amount to bridge\n @param tokenId Token ID (for NFTs)"},"functionSelector":"3de739e7","id":2020,"implemented":true,"kind":"function","modifiers":[{"id":1814,"kind":"modifierInvocation","modifierName":{"id":1813,"name":"whenNotPaused","nameLocations":["5890:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"5890:13:13"},"nodeType":"ModifierInvocation","src":"5890:13:13"},{"id":1816,"kind":"modifierInvocation","modifierName":{"id":1815,"name":"nonReentrant","nameLocations":["5904:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"5904:12:13"},"nodeType":"ModifierInvocation","src":"5904:12:13"}],"name":"bridgeToL3","nameLocation":"5715:10:13","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"recipient","nameLocation":"5744:9:13","nodeType":"VariableDeclaration","scope":2020,"src":"5736:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"5736:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"assetType","nameLocation":"5774:9:13","nodeType":"VariableDeclaration","scope":2020,"src":"5764:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"AssetType","nameLocations":["5764:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"5764:9:13"},"referencedDeclaration":1584,"src":"5764:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"assetAddress","nameLocation":"5802:12:13","nodeType":"VariableDeclaration","scope":2020,"src":"5794:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1806,"name":"address","nodeType":"ElementaryTypeName","src":"5794:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"amount","nameLocation":"5833:6:13","nodeType":"VariableDeclaration","scope":2020,"src":"5825:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"tokenId","nameLocation":"5858:7:13","nodeType":"VariableDeclaration","scope":2020,"src":"5850:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5850:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5725:147:13"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"5917:0:13"},"scope":2933,"src":"5706:1960:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2132,"nodeType":"Block","src":"8071:973:13","statements":[{"assignments":[2037],"declarations":[{"constant":false,"id":2037,"mutability":"mutable","name":"request","nameLocation":"8104:7:13","nodeType":"VariableDeclaration","scope":2132,"src":"8082:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"BridgeRequest","nameLocations":["8082:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"8082:13:13"},"referencedDeclaration":1615,"src":"8082:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}},"visibility":"internal"}],"id":2041,"initialValue":{"baseExpression":{"id":2038,"name":"bridgeRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"8114:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest storage ref)"}},"id":2040,"indexExpression":{"id":2039,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8129:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8114:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage","typeString":"struct GameDinL3Bridge.BridgeRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8082:57:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2043,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8158:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8166:9:13","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"8158:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8179:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8158:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420646f6573206e6f74206578697374","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8182:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9","typeString":"literal_string \"Request does not exist\""},"value":"Request does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9","typeString":"literal_string \"Request does not exist\""}],"id":2042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8150:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"8150:57:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2051,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8226:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8234:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"8226:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2053,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8244:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8257:7:13","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":1575,"src":"8244:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"8226:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657175657374206e6f742070656e64696e67","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8266:21:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a7cf8c92fa3007b32bc8f053d76eec5174690705bfcad323e689bd02c50aed6","typeString":"literal_string \"Request not pending\""},"value":"Request not pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a7cf8c92fa3007b32bc8f053d76eec5174690705bfcad323e689bd02c50aed6","typeString":"literal_string \"Request not pending\""}],"id":2050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8218:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8218:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2058,"nodeType":"ExpressionStatement","src":"8218:70:13"},{"expression":{"arguments":[{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8307:17:13","subExpression":{"expression":{"id":2060,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8308:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8316:8:13","memberName":"isL3ToL2","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"8308:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265717565737420646972656374696f6e","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8326:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f45414438060e7ea06d4b6a68e0817058535657aab2338cf81dba6146dc52e9b","typeString":"literal_string \"Invalid request direction\""},"value":"Invalid request direction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f45414438060e7ea06d4b6a68e0817058535657aab2338cf81dba6146dc52e9b","typeString":"literal_string \"Invalid request direction\""}],"id":2059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8299:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8299:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"8299:55:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2067,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8373:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8379:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8373:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2069,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8392:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8400:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"8392:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8373:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526571756573742065787069726564","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8410:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1","typeString":"literal_string \"Request expired\""},"value":"Request expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9025c283ecf0e47ba79d56362348df0807a1b8d91051901470410464f6fd80f1","typeString":"literal_string \"Request expired\""}],"id":2066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8365:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8365:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"ExpressionStatement","src":"8365:63:13"},{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2075,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8449:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8457:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"8449:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2078,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8466:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8479:10:13","memberName":"PROCESSING","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"8466:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"8449:40:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"id":2081,"nodeType":"ExpressionStatement","src":"8449:40:13"},{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2082,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8500:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8508:17:13","memberName":"l3TransactionHash","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"8500:25:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2085,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"8528:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8500:45:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2087,"nodeType":"ExpressionStatement","src":"8500:45:13"},{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2088,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8556:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8564:10:13","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"8556:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8577:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8556:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2093,"nodeType":"ExpressionStatement","src":"8556:31:13"},{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2094,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8598:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8606:9:13","memberName":"validator","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"8598:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8618:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8622:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8618:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8598:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2100,"nodeType":"ExpressionStatement","src":"8598:30:13"},{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"validator","nameLocation":"8706:9:13","nodeType":"VariableDeclaration","scope":2132,"src":"8684:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2102,"nodeType":"UserDefinedTypeName","pathNode":{"id":2101,"name":"ValidatorInfo","nameLocations":["8684:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"8684:13:13"},"referencedDeclaration":1637,"src":"8684:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2108,"initialValue":{"baseExpression":{"id":2104,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"8718:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2107,"indexExpression":{"expression":{"id":2105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8729:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8733:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8729:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8718:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8684:56:13"},{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8751:26:13","subExpression":{"expression":{"id":2109,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8751:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8761:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"8751:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"8751:26:13"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2114,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"8788:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8798:12:13","memberName":"lastActivity","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"8788:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2117,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8813:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8819:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8813:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8788:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"8788:40:13"},{"eventCall":{"arguments":[{"id":2122,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8891:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8915:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8919:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8915:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2125,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8940:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8953:10:13","memberName":"PROCESSING","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"8940:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},{"id":2127,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"8978:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2128,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9010:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9016:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9010:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2121,"name":"BridgeRequestProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"8854:22:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_BridgeStatus_$1580_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,enum GameDinL3Bridge.BridgeStatus,string memory,uint256)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8854:182:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2131,"nodeType":"EmitStatement","src":"8849:187:13"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"7678:203:13","text":" @dev Process bridge request (L2 to L3)\n @param requestId Request ID\n @param l3TransactionHash L3 transaction hash\n @param merkleRoot Merkle root for verification"},"functionSelector":"e91a8b08","id":2133,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2030,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8041:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2031,"kind":"modifierInvocation","modifierName":{"id":2029,"name":"onlyRole","nameLocations":["8032:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8032:8:13"},"nodeType":"ModifierInvocation","src":"8032:24:13"},{"id":2033,"kind":"modifierInvocation","modifierName":{"id":2032,"name":"whenNotPaused","nameLocations":["8057:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"8057:13:13"},"nodeType":"ModifierInvocation","src":"8057:13:13"}],"name":"processL2ToL3Request","nameLocation":"7896:20:13","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"requestId","nameLocation":"7935:9:13","nodeType":"VariableDeclaration","scope":2133,"src":"7927:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"7969:17:13","nodeType":"VariableDeclaration","scope":2133,"src":"7955:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2024,"name":"string","nodeType":"ElementaryTypeName","src":"7955:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"merkleRoot","nameLocation":"8005:10:13","nodeType":"VariableDeclaration","scope":2133,"src":"7997:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7997:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7916:106:13"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"8071:0:13"},"scope":2933,"src":"7887:1157:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2219,"nodeType":"Block","src":"9256:767:13","statements":[{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"request","nameLocation":"9289:7:13","nodeType":"VariableDeclaration","scope":2219,"src":"9267:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BridgeRequest","nameLocations":["9267:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"9267:13:13"},"referencedDeclaration":1615,"src":"9267:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}},"visibility":"internal"}],"id":2150,"initialValue":{"baseExpression":{"id":2147,"name":"bridgeRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"9299:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest storage ref)"}},"id":2149,"indexExpression":{"id":2148,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9314:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9299:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage","typeString":"struct GameDinL3Bridge.BridgeRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9267:57:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2152,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9343:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9351:9:13","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"9343:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9364:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9343:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420646f6573206e6f74206578697374","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9367:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9","typeString":"literal_string \"Request does not exist\""},"value":"Request does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8043f8d751ffea18edb30c86e532c51bcf223623793dc609fc0f74124ac73f9","typeString":"literal_string \"Request does not exist\""}],"id":2151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9335:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2158,"nodeType":"ExpressionStatement","src":"9335:57:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2160,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9411:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9419:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"9411:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2162,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9429:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9442:10:13","memberName":"PROCESSING","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"9429:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"9411:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657175657374206e6f742070726f63657373696e67","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9454:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_07ce997988e055eca04d0102a99a2e31af3b24e3f4368b38ce36f632c8790670","typeString":"literal_string \"Request not processing\""},"value":"Request not processing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07ce997988e055eca04d0102a99a2e31af3b24e3f4368b38ce36f632c8790670","typeString":"literal_string \"Request not processing\""}],"id":2159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9403:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9403:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"ExpressionStatement","src":"9403:76:13"},{"expression":{"arguments":[{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9498:17:13","subExpression":{"expression":{"id":2169,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9499:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9507:8:13","memberName":"isL3ToL2","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9499:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265717565737420646972656374696f6e","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9517:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f45414438060e7ea06d4b6a68e0817058535657aab2338cf81dba6146dc52e9b","typeString":"literal_string \"Invalid request direction\""},"value":"Invalid request direction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f45414438060e7ea06d4b6a68e0817058535657aab2338cf81dba6146dc52e9b","typeString":"literal_string \"Invalid request direction\""}],"id":2168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9490:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9490:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"ExpressionStatement","src":"9490:55:13"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2175,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9566:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9574:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"9566:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2178,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9583:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9596:9:13","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":1577,"src":"9583:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"9566:39:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"id":2181,"nodeType":"ExpressionStatement","src":"9566:39:13"},{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"validator","nameLocation":"9683:9:13","nodeType":"VariableDeclaration","scope":2219,"src":"9661:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2183,"nodeType":"UserDefinedTypeName","pathNode":{"id":2182,"name":"ValidatorInfo","nameLocations":["9661:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"9661:13:13"},"referencedDeclaration":1637,"src":"9661:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2189,"initialValue":{"baseExpression":{"id":2185,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"9695:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2188,"indexExpression":{"expression":{"id":2186,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9706:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9710:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9706:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9695:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9661:56:13"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2190,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9728:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9738:11:13","memberName":"successRate","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"9728:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2193,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9753:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9763:11:13","memberName":"successRate","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"9753:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2195,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9778:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9788:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"9778:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9805:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9777:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9753:54:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313030","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9753:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9752:62:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2204,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9817:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9827:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"9817:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9752:89:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9728:113:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"9728:113:13"},{"eventCall":{"arguments":[{"id":2210,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"9904:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2211,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9928:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9936:9:13","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"9928:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2213,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9960:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9968:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"9960:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2215,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9989:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9995:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9989:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2209,"name":"BridgeRequestCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"9867:22:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9867:148:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2218,"nodeType":"EmitStatement","src":"9862:153:13"}]},"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"9056:96:13","text":" @dev Complete bridge request (L2 to L3)\n @param requestId Request ID"},"functionSelector":"0f5093d0","id":2220,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2139,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9226:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2140,"kind":"modifierInvocation","modifierName":{"id":2138,"name":"onlyRole","nameLocations":["9217:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9217:8:13"},"nodeType":"ModifierInvocation","src":"9217:24:13"},{"id":2142,"kind":"modifierInvocation","modifierName":{"id":2141,"name":"whenNotPaused","nameLocations":["9242:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"9242:13:13"},"nodeType":"ModifierInvocation","src":"9242:13:13"}],"name":"completeL2ToL3Request","nameLocation":"9167:21:13","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"requestId","nameLocation":"9197:9:13","nodeType":"VariableDeclaration","scope":2220,"src":"9189:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"9189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9188:19:13"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"9256:0:13"},"scope":2933,"src":"9158:865:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2546,"nodeType":"Block","src":"10796:2655:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"10815:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10833:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10825:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"10825:7:13","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10825:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10815:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656e646572","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10837:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0","typeString":"literal_string \"Invalid sender\""},"value":"Invalid sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_691168f418fc5a4f61166421198b5a4bea266021eef8bf76cd53f1653d7b7ec0","typeString":"literal_string \"Invalid sender\""}],"id":2246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10807:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10807:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2255,"nodeType":"ExpressionStatement","src":"10807:47:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"10873:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10886:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"10886:7:13","typeDescriptions":{}}},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10873:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10898:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":2256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10865:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10865:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2265,"nodeType":"ExpressionStatement","src":"10865:53:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2268,"name":"MIN_BRIDGE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"10947:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10937:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f20736d616c6c","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10966:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d0f811feb77b15c07823650f43b752da35426dc91a38075abe3ad6ce20ccaf3","typeString":"literal_string \"Amount too small\""},"value":"Amount too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d0f811feb77b15c07823650f43b752da35426dc91a38075abe3ad6ce20ccaf3","typeString":"literal_string \"Amount too small\""}],"id":2266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10929:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10929:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2272,"nodeType":"ExpressionStatement","src":"10929:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11004:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2275,"name":"MAX_BRIDGE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"11014:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11004:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f206c61726765","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11033:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""},"value":"Amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""}],"id":2273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10996:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10996:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"10996:56:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2283,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11077:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11071:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"11071:5:13","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11096:6:13","memberName":"length","nodeType":"MemberAccess","src":"11071:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11105:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11071:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204c33207472616e73616374696f6e2068617368","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11108:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6517741a13391a0d77539f999433093510dadb25d98324568f08cad3ee511887","typeString":"literal_string \"Invalid L3 transaction hash\""},"value":"Invalid L3 transaction hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6517741a13391a0d77539f999433093510dadb25d98324568f08cad3ee511887","typeString":"literal_string \"Invalid L3 transaction hash\""}],"id":2280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11063:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11063:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"11063:75:13"},{"expression":{"arguments":[{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11157:70:13","subExpression":{"baseExpression":{"id":2292,"name":"processedTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"11158:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2299,"indexExpression":{"arguments":[{"arguments":[{"id":2296,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11207:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11190:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11194:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"11190:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11190:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2293,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11180:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11180:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11158:69:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e20616c72656164792070726f636573736564","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11229:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8fdf409ad4278fd3318232962c225f021afb952b1286199e1caa18732aead458","typeString":"literal_string \"Transaction already processed\""},"value":"Transaction already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8fdf409ad4278fd3318232962c225f021afb952b1286199e1caa18732aead458","typeString":"literal_string \"Transaction already processed\""}],"id":2291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11149:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11149:112:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"ExpressionStatement","src":"11149:112:13"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11282:16:13","subExpression":{"id":2304,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"11282:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ExpressionStatement","src":"11282:16:13"},{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"requestId","nameLocation":"11317:9:13","nodeType":"VariableDeclaration","scope":2546,"src":"11309:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2310,"initialValue":{"id":2309,"name":"requestCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"11329:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11309:34:13"},{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"request","nameLocation":"11386:7:13","nodeType":"VariableDeclaration","scope":2546,"src":"11364:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"BridgeRequest","nameLocations":["11364:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"11364:13:13"},"referencedDeclaration":1615,"src":"11364:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}},"visibility":"internal"}],"id":2317,"initialValue":{"baseExpression":{"id":2314,"name":"bridgeRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"11396:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest storage ref)"}},"id":2316,"indexExpression":{"id":2315,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11411:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11396:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage","typeString":"struct GameDinL3Bridge.BridgeRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11364:57:13"},{"expression":{"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2318,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11432:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11440:9:13","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"11432:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2321,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"11452:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2323,"nodeType":"ExpressionStatement","src":"11432:29:13"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2324,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11472:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11480:6:13","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"11472:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2327,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11472:23:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2329,"nodeType":"ExpressionStatement","src":"11472:23:13"},{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2330,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11506:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11514:9:13","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"11506:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2333,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"11526:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11506:29:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2335,"nodeType":"ExpressionStatement","src":"11506:29:13"},{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2336,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11546:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11554:9:13","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":1593,"src":"11546:17:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2339,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"11566:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"11546:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"id":2341,"nodeType":"ExpressionStatement","src":"11546:29:13"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2342,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11586:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11594:12:13","memberName":"assetAddress","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"11586:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2345,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11609:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11586:35:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2347,"nodeType":"ExpressionStatement","src":"11586:35:13"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2348,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11632:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11640:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"11632:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11649:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11632:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2353,"nodeType":"ExpressionStatement","src":"11632:23:13"},{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2354,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11666:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11674:7:13","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"11666:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"11684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11666:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ExpressionStatement","src":"11666:25:13"},{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2360,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11702:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11710:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"11702:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2363,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11719:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11732:10:13","memberName":"PROCESSING","nodeType":"MemberAccess","referencedDeclaration":1576,"src":"11719:23:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"11702:40:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"id":2366,"nodeType":"ExpressionStatement","src":"11702:40:13"},{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2367,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11753:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11761:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"11753:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2370,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11773:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11779:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"11773:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11753:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"11753:35:13"},{"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2374,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11799:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11807:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"11799:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2377,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11818:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11824:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"11818:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2379,"name":"BRIDGE_TIMEOUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"11836:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11818:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11799:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"nodeType":"ExpressionStatement","src":"11799:51:13"},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2383,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11861:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11869:17:13","memberName":"l3TransactionHash","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"11861:25:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2386,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11889:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11861:45:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2388,"nodeType":"ExpressionStatement","src":"11861:45:13"},{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2389,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11917:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11925:10:13","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"11917:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2392,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"11938:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11917:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ExpressionStatement","src":"11917:31:13"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2395,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"11959:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11967:9:13","memberName":"validator","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"11959:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11979:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11983:6:13","memberName":"sender","nodeType":"MemberAccess","src":"11979:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11959:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2401,"nodeType":"ExpressionStatement","src":"11959:30:13"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2402,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"12000:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12008:8:13","memberName":"isL3ToL2","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"12000:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12019:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12000:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2407,"nodeType":"ExpressionStatement","src":"12000:23:13"},{"expression":{"arguments":[{"id":2412,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"12073:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2408,"name":"userRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"12044:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2410,"indexExpression":{"id":2409,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12057:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12044:23:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12068:4:13","memberName":"push","nodeType":"MemberAccess","src":"12044:28:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2414,"nodeType":"ExpressionStatement","src":"12044:39:13"},{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12094:15:13","subExpression":{"id":2415,"name":"totalRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"12094:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"12094:15:13"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2418,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12120:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"12135:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"12120:21:13"},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2422,"name":"processedTransactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"12152:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2429,"indexExpression":{"arguments":[{"arguments":[{"id":2426,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12201:17:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2424,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12184:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12188:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"12184:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12184:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2423,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12174:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12174:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12152:69:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12224:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12152:76:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"ExpressionStatement","src":"12152:76:13"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12294:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2434,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12307:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12317:5:13","memberName":"TOKEN","nodeType":"MemberAccess","referencedDeclaration":1581,"src":"12307:15:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"12294:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12409:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2447,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12422:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12432:3:13","memberName":"NFT","nodeType":"MemberAccess","referencedDeclaration":1582,"src":"12422:13:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"12409:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"12543:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2464,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12556:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$1584_$","typeString":"type(enum GameDinL3Bridge.AssetType)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12566:3:13","memberName":"ETH","nodeType":"MemberAccess","referencedDeclaration":1583,"src":"12556:13:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"src":"12543:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"IfStatement","src":"12539:94:13","trueBody":{"id":2475,"nodeType":"Block","src":"12571:62:13","statements":[{"expression":{"arguments":[{"id":2472,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"12614:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2469,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12594:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12586:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"12586:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12586:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12605:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"12586:27:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12586:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"12586:35:13"}]}},"id":2477,"nodeType":"IfStatement","src":"12405:228:13","trueBody":{"id":2462,"nodeType":"Block","src":"12437:96:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12495:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12487:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"12487:7:13","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12487:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2458,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12502:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"12513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2451,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12460:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2450,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"12452:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1285_$","typeString":"type(contract IERC721)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12452:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1285","typeString":"contract IERC721"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12474:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1250,"src":"12452:34:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12452:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"ExpressionStatement","src":"12452:69:13"}]}},"id":2478,"nodeType":"IfStatement","src":"12290:343:13","trueBody":{"id":2445,"nodeType":"Block","src":"12324:75:13","statements":[{"expression":{"arguments":[{"id":2441,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12369:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"12380:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2438,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12346:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2437,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12339:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12339:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12360:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"12339:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12339:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2444,"nodeType":"ExpressionStatement","src":"12339:48:13"}]}},{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2479,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"12653:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12661:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"12653:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2482,"name":"BridgeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"12670:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BridgeStatus_$1580_$","typeString":"type(enum GameDinL3Bridge.BridgeStatus)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12683:9:13","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":1577,"src":"12670:22:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"src":"12653:39:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"id":2485,"nodeType":"ExpressionStatement","src":"12653:39:13"},{"assignments":[2488],"declarations":[{"constant":false,"id":2488,"mutability":"mutable","name":"validator","nameLocation":"12770:9:13","nodeType":"VariableDeclaration","scope":2546,"src":"12748:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2487,"nodeType":"UserDefinedTypeName","pathNode":{"id":2486,"name":"ValidatorInfo","nameLocations":["12748:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"12748:13:13"},"referencedDeclaration":1637,"src":"12748:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2493,"initialValue":{"baseExpression":{"id":2489,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"12782:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2492,"indexExpression":{"expression":{"id":2490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12793:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12797:6:13","memberName":"sender","nodeType":"MemberAccess","src":"12793:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12782:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12748:56:13"},{"expression":{"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12815:26:13","subExpression":{"expression":{"id":2494,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12815:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12825:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"12815:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2498,"nodeType":"ExpressionStatement","src":"12815:26:13"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2499,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12852:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12862:11:13","memberName":"successRate","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"12852:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2502,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12877:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12887:11:13","memberName":"successRate","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"12877:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2504,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12902:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12912:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"12902:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12902:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12901:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12877:54:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313030","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12934:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"12877:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12876:62:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":2513,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12941:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12951:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"12941:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12876:89:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12852:113:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"12852:113:13"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2518,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12976:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12986:12:13","memberName":"lastActivity","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"12976:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2521,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13001:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13007:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"13001:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12976:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"12976:40:13"},{"eventCall":{"arguments":[{"id":2526,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"13077:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"13101:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2528,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"13122:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2529,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13146:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},{"id":2530,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"13170:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13197:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13218:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13240:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":2534,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13259:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13265:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"13259:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"BridgeRequestCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"13042:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_enum$_AssetType_$1584_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,enum GameDinL3Bridge.AssetType,address,uint256,uint256,bool,uint256)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13042:243:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2537,"nodeType":"EmitStatement","src":"13037:248:13"},{"eventCall":{"arguments":[{"id":2539,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"13348:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2540,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"13372:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2541,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13396:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2542,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13417:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13423:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"13417:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"BridgeRequestCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"13311:22:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13311:132:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2545,"nodeType":"EmitStatement","src":"13306:137:13"}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"10035:434:13","text":" @dev Process bridge request from L3 to L2\n @param sender Sender address on L3\n @param recipient Recipient address on L2\n @param assetType Type of asset\n @param assetAddress Asset contract address\n @param amount Amount to bridge\n @param tokenId Token ID (for NFTs)\n @param l3TransactionHash L3 transaction hash\n @param merkleRoot Merkle root for verification"},"functionSelector":"6fa50dc0","id":2547,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2241,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"10766:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2242,"kind":"modifierInvocation","modifierName":{"id":2240,"name":"onlyRole","nameLocations":["10757:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10757:8:13"},"nodeType":"ModifierInvocation","src":"10757:24:13"},{"id":2244,"kind":"modifierInvocation","modifierName":{"id":2243,"name":"whenNotPaused","nameLocations":["10782:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"10782:13:13"},"nodeType":"ModifierInvocation","src":"10782:13:13"}],"name":"processL3ToL2Request","nameLocation":"10484:20:13","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"sender","nameLocation":"10523:6:13","nodeType":"VariableDeclaration","scope":2547,"src":"10515:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"10515:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"recipient","nameLocation":"10548:9:13","nodeType":"VariableDeclaration","scope":2547,"src":"10540:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"10540:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"assetType","nameLocation":"10578:9:13","nodeType":"VariableDeclaration","scope":2547,"src":"10568:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"typeName":{"id":2227,"nodeType":"UserDefinedTypeName","pathNode":{"id":2226,"name":"AssetType","nameLocations":["10568:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"10568:9:13"},"referencedDeclaration":1584,"src":"10568:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"assetAddress","nameLocation":"10606:12:13","nodeType":"VariableDeclaration","scope":2547,"src":"10598:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"10598:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"amount","nameLocation":"10637:6:13","nodeType":"VariableDeclaration","scope":2547,"src":"10629:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"10629:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:13","nodeType":"VariableDeclaration","scope":2547,"src":"10654:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"10694:17:13","nodeType":"VariableDeclaration","scope":2547,"src":"10680:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2235,"name":"string","nodeType":"ElementaryTypeName","src":"10680:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"merkleRoot","nameLocation":"10730:10:13","nodeType":"VariableDeclaration","scope":2547,"src":"10722:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10722:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10504:243:13"},"returnParameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"10796:0:13"},"scope":2933,"src":"10475:2976:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2617,"nodeType":"Block","src":"13776:580:13","statements":[{"expression":{"arguments":[{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13795:32:13","subExpression":{"expression":{"baseExpression":{"id":2554,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"13796:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2557,"indexExpression":{"expression":{"id":2555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13807:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13811:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13807:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13796:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"id":2558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13819:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"13796:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792072656769737465726564","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13829:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""},"value":"Already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2","typeString":"literal_string \"Already registered\""}],"id":2553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13787:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2562,"nodeType":"ExpressionStatement","src":"13787:63:13"},{"expression":{"arguments":[{"expression":{"id":2567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13950:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13954:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13950:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2571,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13970:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13962:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"13962:7:13","typeDescriptions":{}}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13962:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2573,"name":"validatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"13977:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2564,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"13917:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2563,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13910:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13910:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13937:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1107,"src":"13910:39:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13910:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2575,"nodeType":"ExpressionStatement","src":"13910:82:13"},{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"validator","nameLocation":"14035:9:13","nodeType":"VariableDeclaration","scope":2617,"src":"14013:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"ValidatorInfo","nameLocations":["14013:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"14013:13:13"},"referencedDeclaration":1637,"src":"14013:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2583,"initialValue":{"baseExpression":{"id":2579,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14047:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2582,"indexExpression":{"expression":{"id":2580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14058:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14062:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14058:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14047:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14013:56:13"},{"expression":{"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2584,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"14080:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14090:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"14080:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14101:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14080:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2589,"nodeType":"ExpressionStatement","src":"14080:25:13"},{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2590,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"14116:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14126:5:13","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"14116:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2593,"name":"validatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"14134:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14116:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"14116:32:13"},{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2596,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"14159:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14169:12:13","memberName":"lastActivity","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"14159:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2599,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14184:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14190:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"14184:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14159:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2602,"nodeType":"ExpressionStatement","src":"14159:40:13"},{"expression":{"arguments":[{"id":2604,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"14231:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14247:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14251:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14247:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2603,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"14220:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14220:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2608,"nodeType":"ExpressionStatement","src":"14220:38:13"},{"eventCall":{"arguments":[{"expression":{"id":2610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14304:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14308:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14304:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2612,"name":"validatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"14316:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2613,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14332:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14338:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"14332:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"ValidatorRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"14284:19:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14284:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2616,"nodeType":"EmitStatement","src":"14279:69:13"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"13669:49:13","text":" @dev Register as a validator"},"functionSelector":"bcc6587f","id":2618,"implemented":true,"kind":"function","modifiers":[{"id":2551,"kind":"modifierInvocation","modifierName":{"id":2550,"name":"whenNotPaused","nameLocations":["13762:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"13762:13:13"},"nodeType":"ModifierInvocation","src":"13762:13:13"}],"name":"registerValidator","nameLocation":"13733:17:13","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"13750:2:13"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[],"src":"13776:0:13"},"scope":2933,"src":"13724:632:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2668,"nodeType":"Block","src":"14479:440:13","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"validator","nameLocation":"14512:9:13","nodeType":"VariableDeclaration","scope":2668,"src":"14490:31:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2625,"nodeType":"UserDefinedTypeName","pathNode":{"id":2624,"name":"ValidatorInfo","nameLocations":["14490:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"14490:13:13"},"referencedDeclaration":1637,"src":"14490:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2631,"initialValue":{"baseExpression":{"id":2627,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"14524:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2630,"indexExpression":{"expression":{"id":2628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14535:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14539:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14535:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14524:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14490:56:13"},{"expression":{"arguments":[{"expression":{"id":2633,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"14565:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14575:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"14565:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742072656769737465726564","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14585:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5","typeString":"literal_string \"Not registered\""},"value":"Not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1eb9ad53e16416e14d33846438c096000c11083a5bcbbae89aefd174c6489af5","typeString":"literal_string \"Not registered\""}],"id":2632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14557:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14557:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"ExpressionStatement","src":"14557:45:13"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2638,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"14623:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14633:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"14623:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14644:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14623:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2643,"nodeType":"ExpressionStatement","src":"14623:26:13"},{"expression":{"arguments":[{"expression":{"id":2648,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14744:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14748:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14744:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2650,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"14756:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14766:5:13","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"14756:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2645,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"14715:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2644,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"14708:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14708:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14735:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"14708:35:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14708:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2653,"nodeType":"ExpressionStatement","src":"14708:64:13"},{"expression":{"arguments":[{"id":2655,"name":"VALIDATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"14805:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14821:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14825:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14821:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2654,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"14793:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14793:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"ExpressionStatement","src":"14793:39:13"},{"eventCall":{"arguments":[{"expression":{"id":2661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14880:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14884:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14880:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2663,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"14892:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14902:5:13","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"14892:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2660,"name":"ValidatorStakeUpdated","nodeType":"Identifier","overloadedDeclarations":[1743,1755],"referencedDeclaration":1743,"src":"14858:21:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14858:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"EmitStatement","src":"14853:58:13"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"14368:51:13","text":" @dev Unregister as a validator"},"functionSelector":"6ca56267","id":2669,"implemented":true,"kind":"function","modifiers":[{"id":2622,"kind":"modifierInvocation","modifierName":{"id":2621,"name":"whenNotPaused","nameLocations":["14465:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"14465:13:13"},"nodeType":"ModifierInvocation","src":"14465:13:13"}],"name":"unregisterValidator","nameLocation":"14434:19:13","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"14453:2:13"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[],"src":"14479:0:13"},"scope":2933,"src":"14425:494:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2742,"nodeType":"Block","src":"16237:552:13","statements":[{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"request","nameLocation":"16270:7:13","nodeType":"VariableDeclaration","scope":2742,"src":"16248:29:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"},"typeName":{"id":2706,"nodeType":"UserDefinedTypeName","pathNode":{"id":2705,"name":"BridgeRequest","nameLocations":["16248:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"16248:13:13"},"referencedDeclaration":1615,"src":"16248:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest"}},"visibility":"internal"}],"id":2711,"initialValue":{"baseExpression":{"id":2708,"name":"bridgeRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"16280:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BridgeRequest_$1615_storage_$","typeString":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest storage ref)"}},"id":2710,"indexExpression":{"id":2709,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"16295:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16280:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage","typeString":"struct GameDinL3Bridge.BridgeRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16248:57:13"},{"expression":{"components":[{"expression":{"id":2712,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16338:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16346:9:13","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"16338:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2714,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16370:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16378:6:13","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1588,"src":"16370:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2716,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16399:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16407:9:13","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"16399:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2718,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16431:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16439:9:13","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":1593,"src":"16431:17:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},{"expression":{"id":2720,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16463:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16471:12:13","memberName":"assetAddress","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"16463:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2722,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16498:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16506:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"16498:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2724,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16527:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16535:7:13","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"16527:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2726,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16557:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16565:6:13","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1602,"src":"16557:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},{"expression":{"id":2728,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16586:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16594:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"16586:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2730,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16618:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16626:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1606,"src":"16618:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2732,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16649:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16657:10:13","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":1608,"src":"16649:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2734,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16682:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16690:17:13","memberName":"l3TransactionHash","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"16682:25:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":2736,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16722:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16730:9:13","memberName":"validator","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"16722:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2738,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"16754:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeRequest_$1615_storage_ptr","typeString":"struct GameDinL3Bridge.BridgeRequest storage pointer"}},"id":2739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16762:8:13","memberName":"isL3ToL2","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"16754:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16323:458:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_address_$_t_enum$_AssetType_$1584_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_BridgeStatus_$1580_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_string_storage_$_t_address_$_t_bool_$","typeString":"tuple(uint256,address,address,enum GameDinL3Bridge.AssetType,address,uint256,uint256,enum GameDinL3Bridge.BridgeStatus,uint256,uint256,bytes32,string storage ref,address,bool)"}},"functionReturnParameters":2704,"id":2741,"nodeType":"Return","src":"16316:465:13"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"15132:630:13","text":" @dev Get bridge request details\n @param requestId Request ID\n @return id Request ID\n @return sender Sender address\n @return recipient Recipient address\n @return assetType Asset type\n @return assetAddress Asset address\n @return amount Amount\n @return tokenId Token ID\n @return status Request status\n @return timestamp Timestamp\n @return deadline Deadline\n @return merkleRoot Merkle root\n @return l3TransactionHash L3 transaction hash\n @return validator Validator address\n @return isL3ToL2 Whether L3 to L2"},"functionSelector":"3008afed","id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"getBridgeRequest","nameLocation":"15777:16:13","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"requestId","nameLocation":"15802:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"15794:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:19:13"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"id","nameLocation":"15854:2:13","nodeType":"VariableDeclaration","scope":2743,"src":"15846:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"15846:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"sender","nameLocation":"15875:6:13","nodeType":"VariableDeclaration","scope":2743,"src":"15867:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"15867:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"recipient","nameLocation":"15900:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"15892:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"15892:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"assetType","nameLocation":"15930:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"15920:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"},"typeName":{"id":2681,"nodeType":"UserDefinedTypeName","pathNode":{"id":2680,"name":"AssetType","nameLocations":["15920:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1584,"src":"15920:9:13"},"referencedDeclaration":1584,"src":"15920:9:13","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$1584","typeString":"enum GameDinL3Bridge.AssetType"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"assetAddress","nameLocation":"15958:12:13","nodeType":"VariableDeclaration","scope":2743,"src":"15950:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"15950:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"amount","nameLocation":"15989:6:13","nodeType":"VariableDeclaration","scope":2743,"src":"15981:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"15981:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"tokenId","nameLocation":"16014:7:13","nodeType":"VariableDeclaration","scope":2743,"src":"16006:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"16006:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"status","nameLocation":"16045:6:13","nodeType":"VariableDeclaration","scope":2743,"src":"16032:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"},"typeName":{"id":2690,"nodeType":"UserDefinedTypeName","pathNode":{"id":2689,"name":"BridgeStatus","nameLocations":["16032:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"16032:12:13"},"referencedDeclaration":1580,"src":"16032:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_BridgeStatus_$1580","typeString":"enum GameDinL3Bridge.BridgeStatus"}},"visibility":"internal"},{"constant":false,"id":2693,"mutability":"mutable","name":"timestamp","nameLocation":"16070:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"16062:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"16062:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"deadline","nameLocation":"16098:8:13","nodeType":"VariableDeclaration","scope":2743,"src":"16090:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"16090:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"merkleRoot","nameLocation":"16125:10:13","nodeType":"VariableDeclaration","scope":2743,"src":"16117:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16117:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"16160:17:13","nodeType":"VariableDeclaration","scope":2743,"src":"16146:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2698,"name":"string","nodeType":"ElementaryTypeName","src":"16146:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"validator","nameLocation":"16196:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"16188:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"16188:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"isL3ToL2","nameLocation":"16221:8:13","nodeType":"VariableDeclaration","scope":2743,"src":"16216:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2702,"name":"bool","nodeType":"ElementaryTypeName","src":"16216:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15835:401:13"},"scope":2933,"src":"15768:1021:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2778,"nodeType":"Block","src":"17324:248:13","statements":[{"assignments":[2761],"declarations":[{"constant":false,"id":2761,"mutability":"mutable","name":"info","nameLocation":"17357:4:13","nodeType":"VariableDeclaration","scope":2778,"src":"17335:26:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"},"typeName":{"id":2760,"nodeType":"UserDefinedTypeName","pathNode":{"id":2759,"name":"ValidatorInfo","nameLocations":["17335:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1637,"src":"17335:13:13"},"referencedDeclaration":1637,"src":"17335:13:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo"}},"visibility":"internal"}],"id":2765,"initialValue":{"baseExpression":{"id":2762,"name":"validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"17364:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ValidatorInfo_$1637_storage_$","typeString":"mapping(address => struct GameDinL3Bridge.ValidatorInfo storage ref)"}},"id":2764,"indexExpression":{"id":2763,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"17375:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17364:21:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage","typeString":"struct GameDinL3Bridge.ValidatorInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17335:50:13"},{"expression":{"components":[{"expression":{"id":2766,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"17418:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17423:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"17418:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2768,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"17446:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17451:14:13","memberName":"totalProcessed","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"17446:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2770,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"17480:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17485:11:13","memberName":"successRate","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"17480:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2772,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"17511:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17516:12:13","memberName":"lastActivity","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"17511:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2774,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"17543:4:13","typeDescriptions":{"typeIdentifier":"t_struct$_ValidatorInfo_$1637_storage_ptr","typeString":"struct GameDinL3Bridge.ValidatorInfo storage pointer"}},"id":2775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17548:5:13","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"17543:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17403:161:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(bool,uint256,uint256,uint256,uint256)"}},"functionReturnParameters":2758,"id":2777,"nodeType":"Return","src":"17396:168:13"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"16801:300:13","text":" @dev Get validator information\n @param validator Validator address\n @return isActive Whether active\n @return totalProcessed Total processed\n @return successRate Success rate\n @return lastActivity Last activity\n @return stake Stake amount"},"functionSelector":"8a11d7c9","id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"getValidatorInfo","nameLocation":"17116:16:13","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"validator","nameLocation":"17141:9:13","nodeType":"VariableDeclaration","scope":2779,"src":"17133:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"17133:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17132:19:13"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"isActive","nameLocation":"17190:8:13","nodeType":"VariableDeclaration","scope":2779,"src":"17185:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2748,"name":"bool","nodeType":"ElementaryTypeName","src":"17185:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"totalProcessed","nameLocation":"17217:14:13","nodeType":"VariableDeclaration","scope":2779,"src":"17209:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"17209:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"successRate","nameLocation":"17250:11:13","nodeType":"VariableDeclaration","scope":2779,"src":"17242:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"17242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"lastActivity","nameLocation":"17280:12:13","nodeType":"VariableDeclaration","scope":2779,"src":"17272:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"17272:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"stake","nameLocation":"17311:5:13","nodeType":"VariableDeclaration","scope":2779,"src":"17303:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"17303:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17174:149:13"},"scope":2933,"src":"17107:465:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2792,"nodeType":"Block","src":"17794:44:13","statements":[{"expression":{"baseExpression":{"id":2788,"name":"userRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"17812:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2790,"indexExpression":{"id":2789,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"17825:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17812:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":2787,"id":2791,"nodeType":"Return","src":"17805:25:13"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"17584:124:13","text":" @dev Get user requests\n @param user User address\n @return requestIds Array of request IDs"},"functionSelector":"b337cf74","id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"getUserRequests","nameLocation":"17723:15:13","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"user","nameLocation":"17747:4:13","nodeType":"VariableDeclaration","scope":2793,"src":"17739:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"17739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17738:14:13"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"17776:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"17776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2785,"nodeType":"ArrayTypeName","src":"17776:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17775:18:13"},"scope":2933,"src":"17714:124:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2815,"nodeType":"Block","src":"18217:122:13","statements":[{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"oldFee","nameLocation":"18236:6:13","nodeType":"VariableDeclaration","scope":2815,"src":"18228:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"id":2804,"name":"bridgeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"18245:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18228:26:13"},{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"bridgeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"18265:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2807,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"18277:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18265:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"18265:18:13"},{"eventCall":{"arguments":[{"id":2811,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"18316:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2812,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"18324:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2810,"name":"BridgeFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"18299:16:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18299:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2814,"nodeType":"EmitStatement","src":"18294:37:13"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"18052:80:13","text":" @dev Update bridge fee\n @param newFee New fee amount"},"functionSelector":"5a1c0366","id":2816,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2799,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"18197:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2800,"kind":"modifierInvocation","modifierName":{"id":2798,"name":"onlyRole","nameLocations":["18188:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18188:8:13"},"nodeType":"ModifierInvocation","src":"18188:28:13"}],"name":"updateBridgeFee","nameLocation":"18147:15:13","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"newFee","nameLocation":"18171:6:13","nodeType":"VariableDeclaration","scope":2816,"src":"18163:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"18163:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18162:16:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"18217:0:13"},"scope":2933,"src":"18138:201:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2838,"nodeType":"Block","src":"18544:145:13","statements":[{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"oldStake","nameLocation":"18563:8:13","nodeType":"VariableDeclaration","scope":2838,"src":"18555:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"18555:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"id":2827,"name":"validatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"18574:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18555:33:13"},{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2829,"name":"validatorStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"18599:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2830,"name":"newStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"18616:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18599:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ExpressionStatement","src":"18599:25:13"},{"eventCall":{"arguments":[{"id":2834,"name":"oldStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18662:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2835,"name":"newStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"18672:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"ValidatorStakeUpdated","nodeType":"Identifier","overloadedDeclarations":[1743,1755],"referencedDeclaration":1755,"src":"18640:21:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18640:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"EmitStatement","src":"18635:46:13"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"18351:101:13","text":" @dev Update validator stake requirement\n @param newStake New stake amount"},"functionSelector":"c7f18fe5","id":2839,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2822,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"18524:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2823,"kind":"modifierInvocation","modifierName":{"id":2821,"name":"onlyRole","nameLocations":["18515:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18515:8:13"},"nodeType":"ModifierInvocation","src":"18515:28:13"}],"name":"updateValidatorStake","nameLocation":"18467:20:13","nodeType":"FunctionDefinition","parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"newStake","nameLocation":"18496:8:13","nodeType":"VariableDeclaration","scope":2839,"src":"18488:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"18488:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18487:18:13"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"18544:0:13"},"scope":2933,"src":"18458:231:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2862,"nodeType":"Block","src":"18915:131:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"newSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"18934:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18959:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18951:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"18951:7:13","typeDescriptions":{}}},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18951:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18934:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736574746c656d656e7420636f6e7472616374","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18963:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c540066c18d719656830b53c17958707db68bc4bc99353b38e99a39ae29dbd9e","typeString":"literal_string \"Invalid settlement contract\""},"value":"Invalid settlement contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c540066c18d719656830b53c17958707db68bc4bc99353b38e99a39ae29dbd9e","typeString":"literal_string \"Invalid settlement contract\""}],"id":2848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18926:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18926:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"ExpressionStatement","src":"18926:67:13"},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"19004:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2859,"name":"newSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"19025:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19004:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2861,"nodeType":"ExpressionStatement","src":"19004:34:13"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"18701:113:13","text":" @dev Update settlement contract\n @param newSettlement New settlement contract address"},"functionSelector":"c332226e","id":2863,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2845,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"18895:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2846,"kind":"modifierInvocation","modifierName":{"id":2844,"name":"onlyRole","nameLocations":["18886:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18886:8:13"},"nodeType":"ModifierInvocation","src":"18886:28:13"}],"name":"updateSettlementContract","nameLocation":"18829:24:13","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"newSettlement","nameLocation":"18862:13:13","nodeType":"VariableDeclaration","scope":2863,"src":"18854:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"18854:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18853:23:13"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[],"src":"18915:0:13"},"scope":2933,"src":"18820:226:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2873,"nodeType":"Block","src":"19153:27:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2870,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"19164:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19164:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2872,"nodeType":"ExpressionStatement","src":"19164:8:13"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"19058:38:13","text":" @dev Pause bridge"},"functionSelector":"8456cb59","id":2874,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2867,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"19137:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2868,"kind":"modifierInvocation","modifierName":{"id":2866,"name":"onlyRole","nameLocations":["19128:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"19128:8:13"},"nodeType":"ModifierInvocation","src":"19128:24:13"}],"name":"pause","nameLocation":"19111:5:13","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[],"src":"19116:2:13"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[],"src":"19153:0:13"},"scope":2933,"src":"19102:78:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2884,"nodeType":"Block","src":"19291:29:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2881,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"19302:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19302:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2883,"nodeType":"ExpressionStatement","src":"19302:10:13"}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"19192:40:13","text":" @dev Unpause bridge"},"functionSelector":"3f4ba83a","id":2885,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2878,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"19275:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2879,"kind":"modifierInvocation","modifierName":{"id":2877,"name":"onlyRole","nameLocations":["19266:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"19266:8:13"},"nodeType":"ModifierInvocation","src":"19266:24:13"}],"name":"unpause","nameLocation":"19247:7:13","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"19254:2:13"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[],"src":"19291:0:13"},"scope":2933,"src":"19238:82:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2905,"nodeType":"Block","src":"19563:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":2900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19597:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19601:6:13","memberName":"sender","nodeType":"MemberAccess","src":"19597:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"19609:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2897,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19581:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2896,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"19574:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19574:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19588:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"19574:22:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19574:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2904,"nodeType":"ExpressionStatement","src":"19574:42:13"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"19332:127:13","text":" @dev Emergency withdraw tokens\n @param token Token address\n @param amount Amount to withdraw"},"functionSelector":"917bb998","id":2906,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2893,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"19547:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2894,"kind":"modifierInvocation","modifierName":{"id":2892,"name":"onlyRole","nameLocations":["19538:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"19538:8:13"},"nodeType":"ModifierInvocation","src":"19538:24:13"}],"name":"emergencyWithdrawTokens","nameLocation":"19474:23:13","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"token","nameLocation":"19506:5:13","nodeType":"VariableDeclaration","scope":2906,"src":"19498:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"19498:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"amount","nameLocation":"19521:6:13","nodeType":"VariableDeclaration","scope":2906,"src":"19513:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"19513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19497:31:13"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[],"src":"19563:0:13"},"scope":2933,"src":"19465:159:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2926,"nodeType":"Block","src":"19756:70:13","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":2921,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19804:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinL3Bridge_$2933","typeString":"contract GameDinL3Bridge"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19796:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"19796:7:13","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19796:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19810:7:13","memberName":"balance","nodeType":"MemberAccess","src":"19796:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19775:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19779:6:13","memberName":"sender","nodeType":"MemberAccess","src":"19775:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19767:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"19767:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19767:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19787:8:13","memberName":"transfer","nodeType":"MemberAccess","src":"19767:28:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19767:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2925,"nodeType":"ExpressionStatement","src":"19767:51:13"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"19636:48:13","text":" @dev Emergency withdraw ETH"},"functionSelector":"84536017","id":2927,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2910,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"19740:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2911,"kind":"modifierInvocation","modifierName":{"id":2909,"name":"onlyRole","nameLocations":["19731:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"19731:8:13"},"nodeType":"ModifierInvocation","src":"19731:24:13"}],"name":"emergencyWithdrawETH","nameLocation":"19699:20:13","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[],"src":"19719:2:13"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[],"src":"19756:0:13"},"scope":2933,"src":"19690:136:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2931,"nodeType":"Block","src":"20130:2:13","statements":[]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"20041:56:13","text":" @dev Receive function to accept ETH"},"id":2932,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[],"src":"20110:2:13"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"20130:0:13"},"scope":2933,"src":"20103:29:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2934,"src":"563:19572:13","usedErrors":[305,308,1337,1340,1437],"usedEvents":[317,326,335,1329,1334,1704,1717,1727,1735,1743,1749,1755]}],"src":"33:20103:13"},"id":13},"contracts/GameDinSettlement.sol":{"ast":{"absolutePath":"contracts/GameDinSettlement.sol","exportedSymbols":{"AccessControl":[295],"Context":[1315],"ERC165":[1516],"ERC20":[1030],"ERC20Pausable":[1142],"GameDinSettlement":[4128],"IAccessControl":[378],"IERC20":[1108],"IERC20Errors":[420],"IERC20Metadata":[1168],"Pausable":[1423],"ReentrancyGuard":[1492]},"id":4129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4129,"sourceUnit":1031,"src":"61:55:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":2937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4129,"sourceUnit":1143,"src":"118:74:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4129,"sourceUnit":296,"src":"194:58:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4129,"sourceUnit":1493,"src":"254:59:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":2940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4129,"sourceUnit":1424,"src":"315:52:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2942,"name":"ERC20","nameLocations":["594:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"594:5:14"},"id":2943,"nodeType":"InheritanceSpecifier","src":"594:5:14"},{"baseName":{"id":2944,"name":"ERC20Pausable","nameLocations":["601:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1142,"src":"601:13:14"},"id":2945,"nodeType":"InheritanceSpecifier","src":"601:13:14"},{"baseName":{"id":2946,"name":"AccessControl","nameLocations":["616:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"616:13:14"},"id":2947,"nodeType":"InheritanceSpecifier","src":"616:13:14"},{"baseName":{"id":2948,"name":"ReentrancyGuard","nameLocations":["631:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"631:15:14"},"id":2949,"nodeType":"InheritanceSpecifier","src":"631:15:14"}],"canonicalName":"GameDinSettlement","contractDependencies":[],"contractKind":"contract","documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"371:191:14","text":" @title GameDin Settlement Contract\n @dev L2 settlement layer for GameDin L3 gaming blockchain\n Handles cross-chain asset transfers, dispute resolution, and final settlement"},"fullyImplemented":true,"id":4128,"linearizedBaseContracts":[4128,1492,295,1516,1528,378,1142,1423,1030,420,1168,1108,1315],"name":"GameDinSettlement","nameLocation":"573:17:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"ba9cf01d","id":2954,"mutability":"constant","name":"SETTLEMENT_ROLE","nameLocation":"882:15:14","nodeType":"VariableDeclaration","scope":4128,"src":"858:70:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"534554544c454d454e545f524f4c45","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_300f9ae985dc711960f7a4d1dd013f9c19ecf40bff149522ab7523b2187a3846","typeString":"literal_string \"SETTLEMENT_ROLE\""},"value":"SETTLEMENT_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_300f9ae985dc711960f7a4d1dd013f9c19ecf40bff149522ab7523b2187a3846","typeString":"literal_string \"SETTLEMENT_ROLE\""}],"id":2951,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"900:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"b5bfddea","id":2959,"mutability":"constant","name":"BRIDGE_ROLE","nameLocation":"959:11:14","nodeType":"VariableDeclaration","scope":4128,"src":"935:62:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4252494447455f524f4c45","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"983:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_52ba824bfabc2bcfcdf7f0edbb486ebb05e1836c90e78047efeb949990f72e5f","typeString":"literal_string \"BRIDGE_ROLE\""},"value":"BRIDGE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_52ba824bfabc2bcfcdf7f0edbb486ebb05e1836c90e78047efeb949990f72e5f","typeString":"literal_string \"BRIDGE_ROLE\""}],"id":2956,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"973:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"973:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"bfe42a37","id":2964,"mutability":"constant","name":"DISPUTE_RESOLVER_ROLE","nameLocation":"1028:21:14","nodeType":"VariableDeclaration","scope":4128,"src":"1004:82:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1004:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444953505554455f5245534f4c5645525f524f4c45","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1062:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e","typeString":"literal_string \"DISPUTE_RESOLVER_ROLE\""},"value":"DISPUTE_RESOLVER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e","typeString":"literal_string \"DISPUTE_RESOLVER_ROLE\""}],"id":2961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1052:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1052:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"20df4359","id":2969,"mutability":"constant","name":"EMERGENCY_ROLE","nameLocation":"1117:14:14","nodeType":"VariableDeclaration","scope":4128,"src":"1093:68:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f524f4c45","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1144:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""},"value":"EMERGENCY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""}],"id":2966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1134:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1134:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"3c0a6e38","id":2972,"mutability":"constant","name":"SETTLEMENT_TIMEOUT","nameLocation":"1198:18:14","nodeType":"VariableDeclaration","scope":4128,"src":"1174:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1219:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":true,"functionSelector":"f585dc57","id":2975,"mutability":"constant","name":"DISPUTE_WINDOW","nameLocation":"1256:14:14","nodeType":"VariableDeclaration","scope":4128,"src":"1232:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1273:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_259200_by_1","typeString":"int_const 259200"},"value":"3"},"visibility":"public"},{"constant":true,"functionSelector":"933367a8","id":2982,"mutability":"constant","name":"MAX_SETTLEMENT_AMOUNT","nameLocation":"1310:21:14","nodeType":"VariableDeclaration","scope":4128,"src":"1286:64:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:7:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1344:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1344:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1334:16:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"canonicalName":"GameDinSettlement.SettlementStatus","id":2988,"members":[{"id":2983,"name":"PENDING","nameLocation":"1611:7:14","nodeType":"EnumValue","src":"1611:7:14"},{"id":2984,"name":"CONFIRMED","nameLocation":"1629:9:14","nodeType":"EnumValue","src":"1629:9:14"},{"id":2985,"name":"DISPUTED","nameLocation":"1649:8:14","nodeType":"EnumValue","src":"1649:8:14"},{"id":2986,"name":"RESOLVED","nameLocation":"1668:8:14","nodeType":"EnumValue","src":"1668:8:14"},{"id":2987,"name":"CANCELLED","nameLocation":"1687:9:14","nodeType":"EnumValue","src":"1687:9:14"}],"name":"SettlementStatus","nameLocation":"1583:16:14","nodeType":"EnumDefinition","src":"1578:125:14"},{"canonicalName":"GameDinSettlement.DisputeReason","id":2994,"members":[{"id":2989,"name":"INSUFFICIENT_FUNDS","nameLocation":"1745:18:14","nodeType":"EnumValue","src":"1745:18:14"},{"id":2990,"name":"INVALID_TRANSACTION","nameLocation":"1774:19:14","nodeType":"EnumValue","src":"1774:19:14"},{"id":2991,"name":"FRAUD_DETECTED","nameLocation":"1804:14:14","nodeType":"EnumValue","src":"1804:14:14"},{"id":2992,"name":"TECHNICAL_ERROR","nameLocation":"1829:15:14","nodeType":"EnumValue","src":"1829:15:14"},{"id":2993,"name":"OTHER","nameLocation":"1855:5:14","nodeType":"EnumValue","src":"1855:5:14"}],"name":"DisputeReason","nameLocation":"1720:13:14","nodeType":"EnumDefinition","src":"1715:152:14"},{"canonicalName":"GameDinSettlement.Settlement","id":3021,"members":[{"constant":false,"id":2996,"mutability":"mutable","name":"settlementId","nameLocation":"1916:12:14","nodeType":"VariableDeclaration","scope":3021,"src":"1908:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"from","nameLocation":"1947:4:14","nodeType":"VariableDeclaration","scope":3021,"src":"1939:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"to","nameLocation":"1970:2:14","nodeType":"VariableDeclaration","scope":3021,"src":"1962:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"1962:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"amount","nameLocation":"1991:6:14","nodeType":"VariableDeclaration","scope":3021,"src":"1983:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"timestamp","nameLocation":"2016:9:14","nodeType":"VariableDeclaration","scope":3021,"src":"2008:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"status","nameLocation":"2053:6:14","nodeType":"VariableDeclaration","scope":3021,"src":"2036:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"},"typeName":{"id":3006,"nodeType":"UserDefinedTypeName","pathNode":{"id":3005,"name":"SettlementStatus","nameLocations":["2036:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":2988,"src":"2036:16:14"},"referencedDeclaration":2988,"src":"2036:16:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"2077:17:14","nodeType":"VariableDeclaration","scope":3021,"src":"2070:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3008,"name":"string","nodeType":"ElementaryTypeName","src":"2070:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"merkleRoot","nameLocation":"2113:10:14","nodeType":"VariableDeclaration","scope":3021,"src":"2105:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2105:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"disputeDeadline","nameLocation":"2142:15:14","nodeType":"VariableDeclaration","scope":3021,"src":"2134:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"disputeInitiator","nameLocation":"2176:16:14","nodeType":"VariableDeclaration","scope":3021,"src":"2168:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3014,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"disputeReason","nameLocation":"2217:13:14","nodeType":"VariableDeclaration","scope":3021,"src":"2203:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3017,"nodeType":"UserDefinedTypeName","pathNode":{"id":3016,"name":"DisputeReason","nameLocations":["2203:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"2203:13:14"},"referencedDeclaration":2994,"src":"2203:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"disputeDetails","nameLocation":"2248:14:14","nodeType":"VariableDeclaration","scope":3021,"src":"2241:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3019,"name":"string","nodeType":"ElementaryTypeName","src":"2241:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Settlement","nameLocation":"1886:10:14","nodeType":"StructDefinition","scope":4128,"src":"1879:391:14","visibility":"public"},{"canonicalName":"GameDinSettlement.Dispute","id":3039,"members":[{"constant":false,"id":3023,"mutability":"mutable","name":"settlementId","nameLocation":"2316:12:14","nodeType":"VariableDeclaration","scope":3039,"src":"2308:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"initiator","nameLocation":"2347:9:14","nodeType":"VariableDeclaration","scope":3039,"src":"2339:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"2339:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"reason","nameLocation":"2381:6:14","nodeType":"VariableDeclaration","scope":3039,"src":"2367:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3027,"nodeType":"UserDefinedTypeName","pathNode":{"id":3026,"name":"DisputeReason","nameLocations":["2367:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"2367:13:14"},"referencedDeclaration":2994,"src":"2367:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"details","nameLocation":"2405:7:14","nodeType":"VariableDeclaration","scope":3039,"src":"2398:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"2398:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"timestamp","nameLocation":"2431:9:14","nodeType":"VariableDeclaration","scope":3039,"src":"2423:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"resolved","nameLocation":"2456:8:14","nodeType":"VariableDeclaration","scope":3039,"src":"2451:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3033,"name":"bool","nodeType":"ElementaryTypeName","src":"2451:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"resolver","nameLocation":"2483:8:14","nodeType":"VariableDeclaration","scope":3039,"src":"2475:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"2475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"resolution","nameLocation":"2509:10:14","nodeType":"VariableDeclaration","scope":3039,"src":"2502:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3037,"name":"string","nodeType":"ElementaryTypeName","src":"2502:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Dispute","nameLocation":"2289:7:14","nodeType":"StructDefinition","scope":4128,"src":"2282:245:14","visibility":"public"},{"canonicalName":"GameDinSettlement.BridgeConfig","id":3050,"members":[{"constant":false,"id":3041,"mutability":"mutable","name":"bridgeAddress","nameLocation":"2578:13:14","nodeType":"VariableDeclaration","scope":3050,"src":"2570:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"isActive","nameLocation":"2607:8:14","nodeType":"VariableDeclaration","scope":3050,"src":"2602:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3042,"name":"bool","nodeType":"ElementaryTypeName","src":"2602:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"minConfirmations","nameLocation":"2634:16:14","nodeType":"VariableDeclaration","scope":3050,"src":"2626:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"maxAmount","nameLocation":"2669:9:14","nodeType":"VariableDeclaration","scope":3050,"src":"2661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"fee","nameLocation":"2697:3:14","nodeType":"VariableDeclaration","scope":3050,"src":"2689:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2689:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BridgeConfig","nameLocation":"2546:12:14","nodeType":"StructDefinition","scope":4128,"src":"2539:169:14","visibility":"public"},{"constant":false,"functionSelector":"84b971a5","id":3052,"mutability":"mutable","name":"settlementCounter","nameLocation":"2937:17:14","nodeType":"VariableDeclaration","scope":4128,"src":"2922:32:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"88dae6a8","id":3054,"mutability":"mutable","name":"totalSettlements","nameLocation":"2976:16:14","nodeType":"VariableDeclaration","scope":4128,"src":"2961:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c5e4ccc4","id":3056,"mutability":"mutable","name":"totalDisputes","nameLocation":"3014:13:14","nodeType":"VariableDeclaration","scope":4128,"src":"2999:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7d1d7fb8","id":3063,"mutability":"mutable","name":"settlementFee","nameLocation":"3049:13:14","nodeType":"VariableDeclaration","scope":4128,"src":"3034:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"302e303031","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:5:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1000","typeString":"rational_const 1 / 1000"},"value":"0.001"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3073:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3077:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3073:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3065:14:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"b9ce896b","id":3070,"mutability":"mutable","name":"disputeFee","nameLocation":"3117:10:14","nodeType":"VariableDeclaration","scope":4128,"src":"3102:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"302e3031","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_100","typeString":"rational_const 1 / 100"},"value":"0.01"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3137:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3141:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3137:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3130:13:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"08df7dc8","id":3075,"mutability":"mutable","name":"settlements","nameLocation":"3209:11:14","nodeType":"VariableDeclaration","scope":4128,"src":"3171:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement)"},"typeName":{"id":3074,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3171:30:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3073,"nodeType":"UserDefinedTypeName","pathNode":{"id":3072,"name":"Settlement","nameLocations":["3190:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"3190:10:14"},"referencedDeclaration":3021,"src":"3190:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}}},"visibility":"public"},{"constant":false,"functionSelector":"564a565d","id":3080,"mutability":"mutable","name":"disputes","nameLocation":"3262:8:14","nodeType":"VariableDeclaration","scope":4128,"src":"3227:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$3039_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Dispute)"},"typeName":{"id":3079,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3227:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$3039_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Dispute)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3078,"nodeType":"UserDefinedTypeName","pathNode":{"id":3077,"name":"Dispute","nameLocations":["3246:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"3246:7:14"},"referencedDeclaration":3039,"src":"3246:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"}}},"visibility":"public"},{"constant":false,"functionSelector":"76e8a88b","id":3085,"mutability":"mutable","name":"userSettlements","nameLocation":"3314:15:14","nodeType":"VariableDeclaration","scope":4128,"src":"3277:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":3084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3277:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3083,"nodeType":"ArrayTypeName","src":"3296:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"fc1e29b6","id":3089,"mutability":"mutable","name":"processedL3Transactions","nameLocation":"3368:23:14","nodeType":"VariableDeclaration","scope":4128,"src":"3336:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":3088,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3336:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"3355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"427ac0ca","id":3094,"mutability":"mutable","name":"bridgeConfigs","nameLocation":"3438:13:14","nodeType":"VariableDeclaration","scope":4128,"src":"3398:53:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$3050_storage_$","typeString":"mapping(address => struct GameDinSettlement.BridgeConfig)"},"typeName":{"id":3093,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3398:32:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$3050_storage_$","typeString":"mapping(address => struct GameDinSettlement.BridgeConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3092,"nodeType":"UserDefinedTypeName","pathNode":{"id":3091,"name":"BridgeConfig","nameLocations":["3417:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3050,"src":"3417:12:14"},"referencedDeclaration":3050,"src":"3417:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"4c38254f7b8b72b1565c14ad4825e3be334f5cdf32b2bdb7560016407004f051","id":3108,"name":"SettlementCreated","nameLocation":"3663:17:14","nodeType":"EventDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"indexed":true,"mutability":"mutable","name":"settlementId","nameLocation":"3707:12:14","nodeType":"VariableDeclaration","scope":3108,"src":"3691:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3691:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3098,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3746:4:14","nodeType":"VariableDeclaration","scope":3108,"src":"3730:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"3730:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3100,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3777:2:14","nodeType":"VariableDeclaration","scope":3108,"src":"3761:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3798:6:14","nodeType":"VariableDeclaration","scope":3108,"src":"3790:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3790:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"indexed":false,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"3822:17:14","nodeType":"VariableDeclaration","scope":3108,"src":"3815:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3103,"name":"string","nodeType":"ElementaryTypeName","src":"3815:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3106,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3858:9:14","nodeType":"VariableDeclaration","scope":3108,"src":"3850:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3850:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3680:194:14"},"src":"3657:218:14"},{"anonymous":false,"eventSelector":"1a87470a87e2fff176d778a6e7f91d53b96b4cbb4d856f40abc582586d51850a","id":3116,"name":"SettlementConfirmed","nameLocation":"3893:19:14","nodeType":"EventDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"indexed":true,"mutability":"mutable","name":"settlementId","nameLocation":"3939:12:14","nodeType":"VariableDeclaration","scope":3116,"src":"3923:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"3923:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3112,"indexed":true,"mutability":"mutable","name":"confirmer","nameLocation":"3978:9:14","nodeType":"VariableDeclaration","scope":3116,"src":"3962:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"3962:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3114,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4006:9:14","nodeType":"VariableDeclaration","scope":3116,"src":"3998:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3912:110:14"},"src":"3887:136:14"},{"anonymous":false,"eventSelector":"c5a6bd89289814765f8743687ea51d3bb3deb2c8f1cff09b1a479fb94166652c","id":3129,"name":"SettlementDisputed","nameLocation":"4041:18:14","nodeType":"EventDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"indexed":true,"mutability":"mutable","name":"settlementId","nameLocation":"4086:12:14","nodeType":"VariableDeclaration","scope":3129,"src":"4070:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3120,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"4125:9:14","nodeType":"VariableDeclaration","scope":3129,"src":"4109:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"4109:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3123,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"4159:6:14","nodeType":"VariableDeclaration","scope":3129,"src":"4145:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3122,"nodeType":"UserDefinedTypeName","pathNode":{"id":3121,"name":"DisputeReason","nameLocations":["4145:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"4145:13:14"},"referencedDeclaration":2994,"src":"4145:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3125,"indexed":false,"mutability":"mutable","name":"details","nameLocation":"4183:7:14","nodeType":"VariableDeclaration","scope":3129,"src":"4176:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3124,"name":"string","nodeType":"ElementaryTypeName","src":"4176:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3127,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4209:9:14","nodeType":"VariableDeclaration","scope":3129,"src":"4201:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4059:166:14"},"src":"4035:191:14"},{"anonymous":false,"eventSelector":"af22c8b9970a1e934469d4910ba635081d805cf60a06f96c00d501bd87379663","id":3139,"name":"DisputeResolved","nameLocation":"4244:15:14","nodeType":"EventDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"indexed":true,"mutability":"mutable","name":"settlementId","nameLocation":"4286:12:14","nodeType":"VariableDeclaration","scope":3139,"src":"4270:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3133,"indexed":true,"mutability":"mutable","name":"resolver","nameLocation":"4325:8:14","nodeType":"VariableDeclaration","scope":3139,"src":"4309:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"4309:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"indexed":false,"mutability":"mutable","name":"resolution","nameLocation":"4351:10:14","nodeType":"VariableDeclaration","scope":3139,"src":"4344:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3134,"name":"string","nodeType":"ElementaryTypeName","src":"4344:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3137,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4380:9:14","nodeType":"VariableDeclaration","scope":3139,"src":"4372:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4372:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4259:137:14"},"src":"4238:159:14"},{"anonymous":false,"eventSelector":"762b38f99548d8913199a63ae95b09259e584b25129ca98ee5317f088d487bf5","id":3151,"name":"BridgeConfigUpdated","nameLocation":"4415:19:14","nodeType":"EventDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"indexed":true,"mutability":"mutable","name":"bridgeAddress","nameLocation":"4461:13:14","nodeType":"VariableDeclaration","scope":3151,"src":"4445:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"4445:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3143,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"4490:8:14","nodeType":"VariableDeclaration","scope":3151,"src":"4485:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3142,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3145,"indexed":false,"mutability":"mutable","name":"minConfirmations","nameLocation":"4517:16:14","nodeType":"VariableDeclaration","scope":3151,"src":"4509:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3147,"indexed":false,"mutability":"mutable","name":"maxAmount","nameLocation":"4552:9:14","nodeType":"VariableDeclaration","scope":3151,"src":"4544:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3149,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"4580:3:14","nodeType":"VariableDeclaration","scope":3151,"src":"4572:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4572:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4434:156:14"},"src":"4409:182:14"},{"anonymous":false,"eventSelector":"9351be7c0f6091e3a280467d38e8ecfd5a4529968cdfaee0e0dbcceaee6765c7","id":3157,"name":"SettlementFeeUpdated","nameLocation":"4609:20:14","nodeType":"EventDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"4638:6:14","nodeType":"VariableDeclaration","scope":3157,"src":"4630:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3155,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"4654:6:14","nodeType":"VariableDeclaration","scope":3157,"src":"4646:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4629:32:14"},"src":"4603:59:14"},{"anonymous":false,"eventSelector":"e8fc23e21608aa8e92faee11af5686b6aa7531796f68f2f943bb0d893c4312c9","id":3163,"name":"DisputeFeeUpdated","nameLocation":"4674:17:14","nodeType":"EventDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"4700:6:14","nodeType":"VariableDeclaration","scope":3163,"src":"4692:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3161,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"4716:6:14","nodeType":"VariableDeclaration","scope":3163,"src":"4708:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4691:32:14"},"src":"4668:56:14"},{"body":{"id":3204,"nodeType":"Block","src":"5058:327:14","statements":[{"expression":{"arguments":[{"id":3175,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5080:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3176,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5100:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3174,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5069:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"ExpressionStatement","src":"5069:44:14"},{"expression":{"arguments":[{"id":3180,"name":"SETTLEMENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"5135:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3181,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5152:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3179,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5124:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5124:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3183,"nodeType":"ExpressionStatement","src":"5124:41:14"},{"expression":{"arguments":[{"id":3185,"name":"BRIDGE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"5187:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3186,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5200:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5176:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3188,"nodeType":"ExpressionStatement","src":"5176:37:14"},{"expression":{"arguments":[{"id":3190,"name":"DISPUTE_RESOLVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"5235:21:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3191,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5258:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3189,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5224:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"nodeType":"ExpressionStatement","src":"5224:47:14"},{"expression":{"arguments":[{"id":3195,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"5293:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3196,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5309:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3194,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5282:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3198,"nodeType":"ExpressionStatement","src":"5282:40:14"},{"expression":{"arguments":[{"id":3200,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"5349:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3201,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"5363:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3199,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"5343:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5343:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"5343:34:14"}]},"id":3205,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"47616d6544696e20536574746c656d656e7420546f6b656e","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5022:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c70f1d61fee0af884ecbf050617d39e633f483843a0801a74d3d53940501f179","typeString":"literal_string \"GameDin Settlement Token\""},"value":"GameDin Settlement Token"},{"hexValue":"47444953","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5050:6:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ef7da444b2d103697ca904fbba253163f5c14d9b2a970a38bad3f681957e43a","typeString":"literal_string \"GDIS\""},"value":"GDIS"}],"id":3172,"kind":"baseConstructorSpecifier","modifierName":{"id":3169,"name":"ERC20","nameLocations":["5016:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"5016:5:14"},"nodeType":"ModifierInvocation","src":"5016:41:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"initialOwner","nameLocation":"4964:12:14","nodeType":"VariableDeclaration","scope":3205,"src":"4956:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"4956:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"initialSupply","nameLocation":"4995:13:14","nodeType":"VariableDeclaration","scope":3205,"src":"4987:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4945:70:14"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"5058:0:14"},"scope":4128,"src":"4934:451:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3378,"nodeType":"Block","src":"6055:1316:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6074:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6080:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"6080:7:14","typeDescriptions":{}}},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6080:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6074:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6092:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":3224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6066:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"ExpressionStatement","src":"6066:46:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"6131:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6140:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6131:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6143:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":3234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6123:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6123:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"ExpressionStatement","src":"6123:52:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"6194:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3243,"name":"MAX_SETTLEMENT_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"6204:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6194:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e742065786365656473206d6178696d756d","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6227:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_064faf8bb7dc0a8beefe8ba8264132c0722c18281b97f5173e5857910c249dce","typeString":"literal_string \"Amount exceeds maximum\""},"value":"Amount exceeds maximum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_064faf8bb7dc0a8beefe8ba8264132c0722c18281b97f5173e5857910c249dce","typeString":"literal_string \"Amount exceeds maximum\""}],"id":3241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6186:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3247,"nodeType":"ExpressionStatement","src":"6186:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3251,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6277:17:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6271:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3249,"name":"bytes","nodeType":"ElementaryTypeName","src":"6271:5:14","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6271:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6296:6:14","memberName":"length","nodeType":"MemberAccess","src":"6271:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6271:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204c33207472616e73616374696f6e2068617368","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6308:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6517741a13391a0d77539f999433093510dadb25d98324568f08cad3ee511887","typeString":"literal_string \"Invalid L3 transaction hash\""},"value":"Invalid L3 transaction hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6517741a13391a0d77539f999433093510dadb25d98324568f08cad3ee511887","typeString":"literal_string \"Invalid L3 transaction hash\""}],"id":3248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6263:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3258,"nodeType":"ExpressionStatement","src":"6263:75:14"},{"expression":{"arguments":[{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6357:72:14","subExpression":{"baseExpression":{"id":3260,"name":"processedL3Transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"6358:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3267,"indexExpression":{"arguments":[{"arguments":[{"id":3264,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6409:17:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3262,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6392:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6396:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"6392:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3261,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6382:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6382:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6358:71:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c33207472616e73616374696f6e20616c72656164792070726f636573736564","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6431:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9956e5d3cd7fd27b28995de427391d18b5ada57fd2e189339ba8625c36833c7e","typeString":"literal_string \"L3 transaction already processed\""},"value":"L3 transaction already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9956e5d3cd7fd27b28995de427391d18b5ada57fd2e189339ba8625c36833c7e","typeString":"literal_string \"L3 transaction already processed\""}],"id":3259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6349:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6349:117:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"6349:117:14"},{"expression":{"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6487:19:14","subExpression":{"id":3272,"name":"settlementCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"6487:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"nodeType":"ExpressionStatement","src":"6487:19:14"},{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"settlementId","nameLocation":"6525:12:14","nodeType":"VariableDeclaration","scope":3378,"src":"6517:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"6517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3278,"initialValue":{"id":3277,"name":"settlementCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"6540:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6517:40:14"},{"assignments":[3281],"declarations":[{"constant":false,"id":3281,"mutability":"mutable","name":"settlement","nameLocation":"6597:10:14","nodeType":"VariableDeclaration","scope":3378,"src":"6578:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"},"typeName":{"id":3280,"nodeType":"UserDefinedTypeName","pathNode":{"id":3279,"name":"Settlement","nameLocations":["6578:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"6578:10:14"},"referencedDeclaration":3021,"src":"6578:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}},"visibility":"internal"}],"id":3285,"initialValue":{"baseExpression":{"id":3282,"name":"settlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"6610:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement storage ref)"}},"id":3284,"indexExpression":{"id":3283,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"6622:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6610:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage","typeString":"struct GameDinSettlement.Settlement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6578:57:14"},{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3286,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6646:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6657:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"6646:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3289,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"6672:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6646:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"6646:38:14"},{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3292,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6695:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6706:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"6695:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3295,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6713:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6717:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6713:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6695:28:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3298,"nodeType":"ExpressionStatement","src":"6695:28:14"},{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3299,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6734:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6745:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"6734:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6750:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6734:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3304,"nodeType":"ExpressionStatement","src":"6734:18:14"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3305,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6763:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6774:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"6763:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"6783:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6763:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"6763:26:14"},{"expression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3311,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6800:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6811:9:14","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"6800:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3314,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6823:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6829:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"6823:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6800:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3317,"nodeType":"ExpressionStatement","src":"6800:38:14"},{"expression":{"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3318,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6849:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6860:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"6849:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3321,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"6869:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6886:7:14","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"6869:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"6849:44:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"id":3324,"nodeType":"ExpressionStatement","src":"6849:44:14"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3325,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6904:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6915:17:14","memberName":"l3TransactionHash","nodeType":"MemberAccess","referencedDeclaration":3009,"src":"6904:28:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3328,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"6935:17:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6904:48:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3330,"nodeType":"ExpressionStatement","src":"6904:48:14"},{"expression":{"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3331,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"6963:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6974:10:14","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"6963:21:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3334,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"6987:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6963:34:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3336,"nodeType":"ExpressionStatement","src":"6963:34:14"},{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3337,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"7008:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7019:15:14","memberName":"disputeDeadline","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"7008:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3340,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7037:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7043:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7037:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3342,"name":"DISPUTE_WINDOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"7055:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7037:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7008:61:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3345,"nodeType":"ExpressionStatement","src":"7008:61:14"},{"expression":{"arguments":[{"id":3350,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"7115:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3346,"name":"userSettlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"7090:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3348,"indexExpression":{"id":3347,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"7106:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7090:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7110:4:14","memberName":"push","nodeType":"MemberAccess","src":"7090:24:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7090:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"ExpressionStatement","src":"7090:38:14"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3353,"name":"processedL3Transactions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"7139:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3360,"indexExpression":{"arguments":[{"arguments":[{"id":3357,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"7190:17:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3355,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7173:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7177:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"7173:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7173:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3354,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7163:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7163:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7139:71:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7213:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7139:78:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"ExpressionStatement","src":"7139:78:14"},{"expression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7228:18:14","subExpression":{"id":3364,"name":"totalSettlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"7228:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3366,"nodeType":"ExpressionStatement","src":"7228:18:14"},{"eventCall":{"arguments":[{"id":3368,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"7290:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7304:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7308:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7304:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3371,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"7316:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3372,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"7320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3373,"name":"l3TransactionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"7328:17:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3374,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7347:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7353:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7347:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3367,"name":"SettlementCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"7272:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256,string memory,uint256)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7272:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3377,"nodeType":"EmitStatement","src":"7267:96:14"}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"5604:233:14","text":" @dev Create a new settlement\n @param to Recipient address\n @param amount Settlement amount\n @param l3TransactionHash L3 transaction hash\n @param merkleRoot Merkle root for verification"},"functionSelector":"d1d50fe6","id":3379,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3217,"name":"SETTLEMENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"6011:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3218,"kind":"modifierInvocation","modifierName":{"id":3216,"name":"onlyRole","nameLocations":["6002:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6002:8:14"},"nodeType":"ModifierInvocation","src":"6002:25:14"},{"id":3220,"kind":"modifierInvocation","modifierName":{"id":3219,"name":"whenNotPaused","nameLocations":["6028:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"6028:13:14"},"nodeType":"ModifierInvocation","src":"6028:13:14"},{"id":3222,"kind":"modifierInvocation","modifierName":{"id":3221,"name":"nonReentrant","nameLocations":["6042:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"6042:12:14"},"nodeType":"ModifierInvocation","src":"6042:12:14"}],"name":"createSettlement","nameLocation":"5852:16:14","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"to","nameLocation":"5887:2:14","nodeType":"VariableDeclaration","scope":3379,"src":"5879:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"5879:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"amount","nameLocation":"5908:6:14","nodeType":"VariableDeclaration","scope":3379,"src":"5900:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"5900:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"5939:17:14","nodeType":"VariableDeclaration","scope":3379,"src":"5925:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3211,"name":"string","nodeType":"ElementaryTypeName","src":"5925:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"merkleRoot","nameLocation":"5975:10:14","nodeType":"VariableDeclaration","scope":3379,"src":"5967:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5868:124:14"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[],"src":"6055:0:14"},"scope":4128,"src":"5843:1528:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3447,"nodeType":"Block","src":"7575:612:14","statements":[{"assignments":[3392],"declarations":[{"constant":false,"id":3392,"mutability":"mutable","name":"settlement","nameLocation":"7605:10:14","nodeType":"VariableDeclaration","scope":3447,"src":"7586:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"Settlement","nameLocations":["7586:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"7586:10:14"},"referencedDeclaration":3021,"src":"7586:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}},"visibility":"internal"}],"id":3396,"initialValue":{"baseExpression":{"id":3393,"name":"settlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7618:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement storage ref)"}},"id":3395,"indexExpression":{"id":3394,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"7630:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7618:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage","typeString":"struct GameDinSettlement.Settlement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7586:57:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3398,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7662:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7673:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"7662:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7689:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7662:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e7420646f6573206e6f74206578697374","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7692:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""},"value":"Settlement does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""}],"id":3397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7654:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7654:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3404,"nodeType":"ExpressionStatement","src":"7654:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3406,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7739:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7750:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"7739:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3408,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"7760:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7777:7:14","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"7760:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"7739:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e74206e6f742070656e64696e67","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7786:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1325f4fa230839a5b58e55a5d2d34653df83bb5092d4392c9df4fe8d984af9d","typeString":"literal_string \"Settlement not pending\""},"value":"Settlement not pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1325f4fa230839a5b58e55a5d2d34653df83bb5092d4392c9df4fe8d984af9d","typeString":"literal_string \"Settlement not pending\""}],"id":3405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7731:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7731:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3413,"nodeType":"ExpressionStatement","src":"7731:80:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3415,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7830:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7836:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7830:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3417,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7849:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7860:15:14","memberName":"disputeDeadline","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"7849:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7830:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973707574652077696e646f772065787069726564","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7877:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1939dd0270ac39d78bc9e8feadd087e65b38e4063d43496dae6cc0b0bf3e35b4","typeString":"literal_string \"Dispute window expired\""},"value":"Dispute window expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1939dd0270ac39d78bc9e8feadd087e65b38e4063d43496dae6cc0b0bf3e35b4","typeString":"literal_string \"Dispute window expired\""}],"id":3414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7822:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7822:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3422,"nodeType":"ExpressionStatement","src":"7822:80:14"},{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3423,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7923:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7934:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"7923:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3426,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"7943:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7960:9:14","memberName":"CONFIRMED","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"7943:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"7923:46:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"id":3429,"nodeType":"ExpressionStatement","src":"7923:46:14"},{"expression":{"arguments":[{"expression":{"id":3431,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"8041:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8052:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"8041:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3433,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"8058:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8069:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"8058:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3435,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"8073:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8084:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"8073:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3430,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8031:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8031:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"ExpressionStatement","src":"8031:60:14"},{"eventCall":{"arguments":[{"id":3440,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"8137:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8151:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8155:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8151:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3443,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8163:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8169:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"8163:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3439,"name":"SettlementConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"8117:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3446,"nodeType":"EmitStatement","src":"8112:67:14"}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"7383:88:14","text":" @dev Confirm a settlement\n @param settlementId Settlement ID"},"functionSelector":"9e924eb5","id":3448,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3385,"name":"SETTLEMENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"7544:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3386,"kind":"modifierInvocation","modifierName":{"id":3384,"name":"onlyRole","nameLocations":["7535:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7535:8:14"},"nodeType":"ModifierInvocation","src":"7535:25:14"},{"id":3388,"kind":"modifierInvocation","modifierName":{"id":3387,"name":"whenNotPaused","nameLocations":["7561:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"7561:13:14"},"nodeType":"ModifierInvocation","src":"7561:13:14"}],"name":"confirmSettlement","nameLocation":"7486:17:14","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"settlementId","nameLocation":"7512:12:14","nodeType":"VariableDeclaration","scope":3448,"src":"7504:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"7504:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7503:22:14"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[],"src":"7575:0:14"},"scope":4128,"src":"7477:710:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3595,"nodeType":"Block","src":"8541:1157:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8560:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8564:5:14","memberName":"value","nodeType":"MemberAccess","src":"8560:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3464,"name":"disputeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"8573:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8560:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206469737075746520666565","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8585:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a26339f459248b11e5e0b42fc8993a06ddcd4c38cee81dd51ba5d24b19b0c85","typeString":"literal_string \"Insufficient dispute fee\""},"value":"Insufficient dispute fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a26339f459248b11e5e0b42fc8993a06ddcd4c38cee81dd51ba5d24b19b0c85","typeString":"literal_string \"Insufficient dispute fee\""}],"id":3461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8552:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8552:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"8552:60:14"},{"assignments":[3471],"declarations":[{"constant":false,"id":3471,"mutability":"mutable","name":"settlement","nameLocation":"8652:10:14","nodeType":"VariableDeclaration","scope":3595,"src":"8633:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"},"typeName":{"id":3470,"nodeType":"UserDefinedTypeName","pathNode":{"id":3469,"name":"Settlement","nameLocations":["8633:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"8633:10:14"},"referencedDeclaration":3021,"src":"8633:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}},"visibility":"internal"}],"id":3475,"initialValue":{"baseExpression":{"id":3472,"name":"settlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8665:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement storage ref)"}},"id":3474,"indexExpression":{"id":3473,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"8677:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8665:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage","typeString":"struct GameDinSettlement.Settlement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8633:57:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3477,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"8709:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8720:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"8709:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8736:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8709:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e7420646f6573206e6f74206578697374","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8739:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""},"value":"Settlement does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""}],"id":3476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8701:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8701:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"ExpressionStatement","src":"8701:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3485,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"8786:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8797:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"8786:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3487,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"8807:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8824:7:14","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"8807:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"8786:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e74206e6f742070656e64696e67","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8833:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1325f4fa230839a5b58e55a5d2d34653df83bb5092d4392c9df4fe8d984af9d","typeString":"literal_string \"Settlement not pending\""},"value":"Settlement not pending"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1325f4fa230839a5b58e55a5d2d34653df83bb5092d4392c9df4fe8d984af9d","typeString":"literal_string \"Settlement not pending\""}],"id":3484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8778:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8778:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"ExpressionStatement","src":"8778:80:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3494,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8877:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8883:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"8877:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3496,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"8896:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8907:15:14","memberName":"disputeDeadline","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"8896:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8877:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973707574652077696e646f772065787069726564","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8924:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1939dd0270ac39d78bc9e8feadd087e65b38e4063d43496dae6cc0b0bf3e35b4","typeString":"literal_string \"Dispute window expired\""},"value":"Dispute window expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1939dd0270ac39d78bc9e8feadd087e65b38e4063d43496dae6cc0b0bf3e35b4","typeString":"literal_string \"Dispute window expired\""}],"id":3493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8869:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"8869:80:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8968:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8972:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8968:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3505,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"8982:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8993:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"8982:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8968:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3509,"name":"DISPUTE_RESOLVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9007:21:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9030:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9034:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9030:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3508,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"8999:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8968:73:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f2064697370757465","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9043:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_237b59f0d1aa5ad3221f2d3190a7c220d0306db3d3a233b6f93c419ee4b38b62","typeString":"literal_string \"Not authorized to dispute\""},"value":"Not authorized to dispute"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_237b59f0d1aa5ad3221f2d3190a7c220d0306db3d3a233b6f93c419ee4b38b62","typeString":"literal_string \"Not authorized to dispute\""}],"id":3502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8960:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:111:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3516,"nodeType":"ExpressionStatement","src":"8960:111:14"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3517,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9092:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9103:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"9092:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3520,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"9112:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9129:8:14","memberName":"DISPUTED","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"9112:25:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"9092:45:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"id":3523,"nodeType":"ExpressionStatement","src":"9092:45:14"},{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3524,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9148:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9159:16:14","memberName":"disputeInitiator","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"9148:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9178:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9182:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9178:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9148:40:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3530,"nodeType":"ExpressionStatement","src":"9148:40:14"},{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3531,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9199:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9210:13:14","memberName":"disputeReason","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"9199:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3534,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"9226:6:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"src":"9199:33:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"id":3536,"nodeType":"ExpressionStatement","src":"9199:33:14"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3537,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"9243:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9254:14:14","memberName":"disputeDetails","nodeType":"MemberAccess","referencedDeclaration":3020,"src":"9243:25:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3540,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"9271:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9243:35:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3542,"nodeType":"ExpressionStatement","src":"9243:35:14"},{"expression":{"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9299:15:14","subExpression":{"id":3543,"name":"totalDisputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"9299:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3545,"nodeType":"ExpressionStatement","src":"9299:15:14"},{"assignments":[3548],"declarations":[{"constant":false,"id":3548,"mutability":"mutable","name":"dispute","nameLocation":"9351:7:14","nodeType":"VariableDeclaration","scope":3595,"src":"9335:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"},"typeName":{"id":3547,"nodeType":"UserDefinedTypeName","pathNode":{"id":3546,"name":"Dispute","nameLocations":["9335:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"9335:7:14"},"referencedDeclaration":3039,"src":"9335:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"}},"visibility":"internal"}],"id":3552,"initialValue":{"baseExpression":{"id":3549,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"9361:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$3039_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Dispute storage ref)"}},"id":3551,"indexExpression":{"id":3550,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9370:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9361:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage","typeString":"struct GameDinSettlement.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9335:48:14"},{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3553,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9394:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9402:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"9394:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3556,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9417:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9394:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"9394:35:14"},{"expression":{"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3559,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9440:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9448:9:14","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"9440:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3562,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9460:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9464:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9460:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9440:30:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3565,"nodeType":"ExpressionStatement","src":"9440:30:14"},{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3566,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9481:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9489:6:14","memberName":"reason","nodeType":"MemberAccess","referencedDeclaration":3028,"src":"9481:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3569,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"9498:6:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"src":"9481:23:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"id":3571,"nodeType":"ExpressionStatement","src":"9481:23:14"},{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3572,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9515:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9523:7:14","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"9515:15:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3575,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"9533:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9515:25:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3577,"nodeType":"ExpressionStatement","src":"9515:25:14"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3578,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"9551:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9559:9:14","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3032,"src":"9551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3581,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9571:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"9571:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9551:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"9551:35:14"},{"eventCall":{"arguments":[{"id":3586,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"9631:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9645:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9649:6:14","memberName":"sender","nodeType":"MemberAccess","src":"9645:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3589,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"9657:6:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},{"id":3590,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"9665:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3591,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9674:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9680:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"9674:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"SettlementDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"9612:18:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_DisputeReason_$2994_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,enum GameDinSettlement.DisputeReason,string memory,uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9612:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3594,"nodeType":"EmitStatement","src":"9607:83:14"}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"8199:179:14","text":" @dev Initiate a dispute for a settlement\n @param settlementId Settlement ID\n @param reason Dispute reason\n @param details Dispute details"},"functionSelector":"d0b1149c","id":3596,"implemented":true,"kind":"function","modifiers":[{"id":3459,"kind":"modifierInvocation","modifierName":{"id":3458,"name":"whenNotPaused","nameLocations":["8527:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"8527:13:14"},"nodeType":"ModifierInvocation","src":"8527:13:14"}],"name":"initiateDispute","nameLocation":"8393:15:14","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"settlementId","nameLocation":"8427:12:14","nodeType":"VariableDeclaration","scope":3596,"src":"8419:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"8419:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"reason","nameLocation":"8464:6:14","nodeType":"VariableDeclaration","scope":3596,"src":"8450:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"DisputeReason","nameLocations":["8450:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"8450:13:14"},"referencedDeclaration":2994,"src":"8450:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"details","nameLocation":"8495:7:14","nodeType":"VariableDeclaration","scope":3596,"src":"8481:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3455,"name":"string","nodeType":"ElementaryTypeName","src":"8481:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8408:101:14"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[],"src":"8541:0:14"},"scope":4128,"src":"8384:1314:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3704,"nodeType":"Block","src":"10098:871:14","statements":[{"assignments":[3613],"declarations":[{"constant":false,"id":3613,"mutability":"mutable","name":"settlement","nameLocation":"10128:10:14","nodeType":"VariableDeclaration","scope":3704,"src":"10109:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"},"typeName":{"id":3612,"nodeType":"UserDefinedTypeName","pathNode":{"id":3611,"name":"Settlement","nameLocations":["10109:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"10109:10:14"},"referencedDeclaration":3021,"src":"10109:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}},"visibility":"internal"}],"id":3617,"initialValue":{"baseExpression":{"id":3614,"name":"settlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"10141:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement storage ref)"}},"id":3616,"indexExpression":{"id":3615,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"10153:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10141:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage","typeString":"struct GameDinSettlement.Settlement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10109:57:14"},{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"dispute","nameLocation":"10193:7:14","nodeType":"VariableDeclaration","scope":3704,"src":"10177:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"},"typeName":{"id":3619,"nodeType":"UserDefinedTypeName","pathNode":{"id":3618,"name":"Dispute","nameLocations":["10177:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"10177:7:14"},"referencedDeclaration":3039,"src":"10177:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"}},"visibility":"internal"}],"id":3624,"initialValue":{"baseExpression":{"id":3621,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"10203:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$3039_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Dispute storage ref)"}},"id":3623,"indexExpression":{"id":3622,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"10212:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10203:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage","typeString":"struct GameDinSettlement.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10177:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3626,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10254:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10265:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"10254:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10281:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10254:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e7420646f6573206e6f74206578697374","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10284:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""},"value":"Settlement does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5553490165473d38746c67e2b41be9b6f007a124e20df6cfb0a2b12476183fb4","typeString":"literal_string \"Settlement does not exist\""}],"id":3625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10246:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3632,"nodeType":"ExpressionStatement","src":"10246:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3634,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10331:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10342:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"10331:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3636,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10352:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10369:8:14","memberName":"DISPUTED","nodeType":"MemberAccess","referencedDeclaration":2985,"src":"10352:25:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"10331:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536574746c656d656e74206e6f74206469737075746564","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10379:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_29edbd8cd9834a30d8297980cfdc755793064e70f8c94d3931f3cdc6b09d9f45","typeString":"literal_string \"Settlement not disputed\""},"value":"Settlement not disputed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29edbd8cd9834a30d8297980cfdc755793064e70f8c94d3931f3cdc6b09d9f45","typeString":"literal_string \"Settlement not disputed\""}],"id":3633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10323:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10323:82:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3641,"nodeType":"ExpressionStatement","src":"10323:82:14"},{"expression":{"arguments":[{"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10424:17:14","subExpression":{"expression":{"id":3643,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10425:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10433:8:14","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"10425:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4469737075746520616c7265616479207265736f6c766564","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10443:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_25966b6c450f3b3f185438262f77d82c01d4bfd1dd892ef61c3386dce1163260","typeString":"literal_string \"Dispute already resolved\""},"value":"Dispute already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25966b6c450f3b3f185438262f77d82c01d4bfd1dd892ef61c3386dce1163260","typeString":"literal_string \"Dispute already resolved\""}],"id":3642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10416:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10416:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3648,"nodeType":"ExpressionStatement","src":"10416:54:14"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3649,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10491:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10499:8:14","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"10491:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10510:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10491:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"ExpressionStatement","src":"10491:23:14"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3655,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10525:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10533:8:14","memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"10525:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10544:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10548:6:14","memberName":"sender","nodeType":"MemberAccess","src":"10544:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10525:29:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3661,"nodeType":"ExpressionStatement","src":"10525:29:14"},{"expression":{"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3662,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"10565:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10573:10:14","memberName":"resolution","nodeType":"MemberAccess","referencedDeclaration":3038,"src":"10565:18:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3665,"name":"resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"10586:10:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10565:31:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3667,"nodeType":"ExpressionStatement","src":"10565:31:14"},{"condition":{"id":3668,"name":"approveSettlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"10621:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3693,"nodeType":"Block","src":"10793:73:14","statements":[{"expression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3686,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10808:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10819:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"10808:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3689,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10828:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10845:9:14","memberName":"CANCELLED","nodeType":"MemberAccess","referencedDeclaration":2987,"src":"10828:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"10808:46:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"id":3692,"nodeType":"ExpressionStatement","src":"10808:46:14"}]},"id":3694,"nodeType":"IfStatement","src":"10617:249:14","trueBody":{"id":3685,"nodeType":"Block","src":"10640:147:14","statements":[{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3669,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10655:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10666:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"10655:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3672,"name":"SettlementStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"10675:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SettlementStatus_$2988_$","typeString":"type(enum GameDinSettlement.SettlementStatus)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10692:8:14","memberName":"RESOLVED","nodeType":"MemberAccess","referencedDeclaration":2986,"src":"10675:25:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"src":"10655:45:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"id":3675,"nodeType":"ExpressionStatement","src":"10655:45:14"},{"expression":{"arguments":[{"expression":{"id":3677,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10725:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10736:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"10725:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3679,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10742:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10753:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"10742:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3681,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"10757:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10768:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"10757:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"10715:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10715:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"ExpressionStatement","src":"10715:60:14"}]}},{"eventCall":{"arguments":[{"id":3696,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"10907:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10921:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10925:6:14","memberName":"sender","nodeType":"MemberAccess","src":"10921:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3699,"name":"resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"10933:10:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3700,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10945:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10951:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"10945:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3695,"name":"DisputeResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"10891:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10891:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3703,"nodeType":"EmitStatement","src":"10886:75:14"}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"9710:197:14","text":" @dev Resolve a dispute\n @param settlementId Settlement ID\n @param resolution Resolution details\n @param approveSettlement Whether to approve the settlement"},"functionSelector":"267f2098","id":3705,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3606,"name":"DISPUTE_RESOLVER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10061:21:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3607,"kind":"modifierInvocation","modifierName":{"id":3605,"name":"onlyRole","nameLocations":["10052:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10052:8:14"},"nodeType":"ModifierInvocation","src":"10052:31:14"},{"id":3609,"kind":"modifierInvocation","modifierName":{"id":3608,"name":"whenNotPaused","nameLocations":["10084:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"10084:13:14"},"nodeType":"ModifierInvocation","src":"10084:13:14"}],"name":"resolveDispute","nameLocation":"9922:14:14","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"settlementId","nameLocation":"9955:12:14","nodeType":"VariableDeclaration","scope":3705,"src":"9947:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"resolution","nameLocation":"9992:10:14","nodeType":"VariableDeclaration","scope":3705,"src":"9978:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3600,"name":"string","nodeType":"ElementaryTypeName","src":"9978:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"approveSettlement","nameLocation":"10018:17:14","nodeType":"VariableDeclaration","scope":3705,"src":"10013:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3602,"name":"bool","nodeType":"ElementaryTypeName","src":"10013:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9936:106:14"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[],"src":"10098:0:14"},"scope":4128,"src":"9913:1056:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3777,"nodeType":"Block","src":"11689:467:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"11708:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11725:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"11725:7:14","typeDescriptions":{}}},"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11725:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11708:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206272696467652061646472657373","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11737:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b093aa17e25aee537f13dcb593dbe4a529c4e47525d84d97e7aac2542f9326c","typeString":"literal_string \"Invalid bridge address\""},"value":"Invalid bridge address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b093aa17e25aee537f13dcb593dbe4a529c4e47525d84d97e7aac2542f9326c","typeString":"literal_string \"Invalid bridge address\""}],"id":3722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11700:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11700:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"ExpressionStatement","src":"11700:62:14"},{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"config","nameLocation":"11804:6:14","nodeType":"VariableDeclaration","scope":3777,"src":"11783:27:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"},"typeName":{"id":3733,"nodeType":"UserDefinedTypeName","pathNode":{"id":3732,"name":"BridgeConfig","nameLocations":["11783:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3050,"src":"11783:12:14"},"referencedDeclaration":3050,"src":"11783:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"}},"visibility":"internal"}],"id":3738,"initialValue":{"baseExpression":{"id":3735,"name":"bridgeConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"11813:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$3050_storage_$","typeString":"mapping(address => struct GameDinSettlement.BridgeConfig storage ref)"}},"id":3737,"indexExpression":{"id":3736,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"11827:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11813:28:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage","typeString":"struct GameDinSettlement.BridgeConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11783:58:14"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3739,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11852:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11859:13:14","memberName":"bridgeAddress","nodeType":"MemberAccess","referencedDeclaration":3041,"src":"11852:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3742,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"11875:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11852:36:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3744,"nodeType":"ExpressionStatement","src":"11852:36:14"},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3745,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11899:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11906:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"11899:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3748,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"11917:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11899:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"ExpressionStatement","src":"11899:26:14"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3751,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11936:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11943:16:14","memberName":"minConfirmations","nodeType":"MemberAccess","referencedDeclaration":3045,"src":"11936:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3754,"name":"minConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11962:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11936:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"11936:42:14"},{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3757,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11989:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11996:9:14","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3047,"src":"11989:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3760,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11989:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ExpressionStatement","src":"11989:28:14"},{"expression":{"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3763,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"12028:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12035:3:14","memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3049,"src":"12028:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3766,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"12041:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12028:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3768,"nodeType":"ExpressionStatement","src":"12028:16:14"},{"eventCall":{"arguments":[{"id":3770,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"12090:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3771,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"12105:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3772,"name":"minConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"12115:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3773,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12133:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3774,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"12144:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"name":"BridgeConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"12070:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256,uint256,uint256)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12070:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3776,"nodeType":"EmitStatement","src":"12065:83:14"}]},"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"11184:295:14","text":" @dev Configure a bridge\n @param bridgeAddress Bridge contract address\n @param isActive Whether bridge is active\n @param minConfirmations Minimum confirmations required\n @param maxAmount Maximum amount per transaction\n @param fee Bridge fee"},"functionSelector":"43b255ac","id":3778,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3719,"name":"BRIDGE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"11676:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3720,"kind":"modifierInvocation","modifierName":{"id":3718,"name":"onlyRole","nameLocations":["11667:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"11667:8:14"},"nodeType":"ModifierInvocation","src":"11667:21:14"}],"name":"configureBridge","nameLocation":"11494:15:14","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"bridgeAddress","nameLocation":"11528:13:14","nodeType":"VariableDeclaration","scope":3778,"src":"11520:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"11520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"isActive","nameLocation":"11557:8:14","nodeType":"VariableDeclaration","scope":3778,"src":"11552:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3709,"name":"bool","nodeType":"ElementaryTypeName","src":"11552:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"minConfirmations","nameLocation":"11584:16:14","nodeType":"VariableDeclaration","scope":3778,"src":"11576:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"11576:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"maxAmount","nameLocation":"11619:9:14","nodeType":"VariableDeclaration","scope":3778,"src":"11611:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3716,"mutability":"mutable","name":"fee","nameLocation":"11647:3:14","nodeType":"VariableDeclaration","scope":3778,"src":"11639:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"11639:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11509:148:14"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[],"src":"11689:0:14"},"scope":4128,"src":"11485:671:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3822,"nodeType":"Block","src":"12571:258:14","statements":[{"assignments":[3797],"declarations":[{"constant":false,"id":3797,"mutability":"mutable","name":"config","nameLocation":"12603:6:14","nodeType":"VariableDeclaration","scope":3822,"src":"12582:27:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"},"typeName":{"id":3796,"nodeType":"UserDefinedTypeName","pathNode":{"id":3795,"name":"BridgeConfig","nameLocations":["12582:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3050,"src":"12582:12:14"},"referencedDeclaration":3050,"src":"12582:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"}},"visibility":"internal"}],"id":3801,"initialValue":{"baseExpression":{"id":3798,"name":"bridgeConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"12612:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$3050_storage_$","typeString":"mapping(address => struct GameDinSettlement.BridgeConfig storage ref)"}},"id":3800,"indexExpression":{"id":3799,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"12626:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12612:28:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage","typeString":"struct GameDinSettlement.BridgeConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12582:58:14"},{"expression":{"arguments":[{"expression":{"id":3803,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12659:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12666:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"12659:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"427269646765206e6f7420616374697665","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12676:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa84523ca64582b7a4e587d42e79811a84a105d27a4e49975daae935e75b7c3b","typeString":"literal_string \"Bridge not active\""},"value":"Bridge not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa84523ca64582b7a4e587d42e79811a84a105d27a4e49975daae935e75b7c3b","typeString":"literal_string \"Bridge not active\""}],"id":3802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12651:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12651:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3807,"nodeType":"ExpressionStatement","src":"12651:45:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"12715:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3810,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"12725:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12732:9:14","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3047,"src":"12725:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12715:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206578636565647320627269646765206c696d6974","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12743:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fdce2d63adb9a74e53d71deb9d2e9c776c566e44ef4f51f958bd343ef86b7c1","typeString":"literal_string \"Amount exceeds bridge limit\""},"value":"Amount exceeds bridge limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fdce2d63adb9a74e53d71deb9d2e9c776c566e44ef4f51f958bd343ef86b7c1","typeString":"literal_string \"Amount exceeds bridge limit\""}],"id":3808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12707:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12707:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"12707:66:14"},{"expression":{"arguments":[{"id":3817,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"12804:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"12810:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"12814:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3816,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"12794:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12794:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3821,"nodeType":"ExpressionStatement","src":"12794:27:14"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"12168:210:14","text":" @dev Process bridge transaction\n @param from Source address\n @param to Destination address\n @param amount Amount to transfer\n @param bridgeAddress Bridge address"},"functionSelector":"068d04d0","id":3823,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3790,"name":"BRIDGE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"12544:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3791,"kind":"modifierInvocation","modifierName":{"id":3789,"name":"onlyRole","nameLocations":["12535:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"12535:8:14"},"nodeType":"ModifierInvocation","src":"12535:21:14"},{"id":3793,"kind":"modifierInvocation","modifierName":{"id":3792,"name":"whenNotPaused","nameLocations":["12557:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"12557:13:14"},"nodeType":"ModifierInvocation","src":"12557:13:14"}],"name":"processBridgeTransaction","nameLocation":"12393:24:14","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"from","nameLocation":"12436:4:14","nodeType":"VariableDeclaration","scope":3823,"src":"12428:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"12428:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"to","nameLocation":"12459:2:14","nodeType":"VariableDeclaration","scope":3823,"src":"12451:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3782,"name":"address","nodeType":"ElementaryTypeName","src":"12451:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"amount","nameLocation":"12480:6:14","nodeType":"VariableDeclaration","scope":3823,"src":"12472:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"12472:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"bridgeAddress","nameLocation":"12505:13:14","nodeType":"VariableDeclaration","scope":3823,"src":"12497:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3786,"name":"address","nodeType":"ElementaryTypeName","src":"12497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12417:108:14"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"12571:0:14"},"scope":4128,"src":"12384:445:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3888,"nodeType":"Block","src":"14080:541:14","statements":[{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"settlement","nameLocation":"14110:10:14","nodeType":"VariableDeclaration","scope":3888,"src":"14091:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"},"typeName":{"id":3856,"nodeType":"UserDefinedTypeName","pathNode":{"id":3855,"name":"Settlement","nameLocations":["14091:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"14091:10:14"},"referencedDeclaration":3021,"src":"14091:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement"}},"visibility":"internal"}],"id":3861,"initialValue":{"baseExpression":{"id":3858,"name":"settlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"14123:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Settlement_$3021_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Settlement storage ref)"}},"id":3860,"indexExpression":{"id":3859,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"14135:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14123:25:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage","typeString":"struct GameDinSettlement.Settlement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14091:57:14"},{"expression":{"components":[{"expression":{"id":3862,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14181:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14192:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":2996,"src":"14181:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3864,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14219:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14230:4:14","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"14219:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3866,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14249:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14260:2:14","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3000,"src":"14249:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3868,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14277:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14288:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3002,"src":"14277:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3870,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14309:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14320:9:14","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"14309:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3872,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14344:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14355:6:14","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"14344:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},{"expression":{"id":3874,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14376:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14387:17:14","memberName":"l3TransactionHash","nodeType":"MemberAccess","referencedDeclaration":3009,"src":"14376:28:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":3876,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14419:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14430:10:14","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"14419:21:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3878,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14455:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14466:15:14","memberName":"disputeDeadline","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"14455:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3880,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14496:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14507:16:14","memberName":"disputeInitiator","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"14496:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3882,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14538:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14549:13:14","memberName":"disputeReason","nodeType":"MemberAccess","referencedDeclaration":3018,"src":"14538:24:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},{"expression":{"id":3884,"name":"settlement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"14577:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Settlement_$3021_storage_ptr","typeString":"struct GameDinSettlement.Settlement storage pointer"}},"id":3885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14588:14:14","memberName":"disputeDetails","nodeType":"MemberAccess","referencedDeclaration":3020,"src":"14577:25:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":3886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14166:447:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_SettlementStatus_$2988_$_t_string_storage_$_t_bytes32_$_t_uint256_$_t_address_$_t_enum$_DisputeReason_$2994_$_t_string_storage_$","typeString":"tuple(uint256,address,address,uint256,uint256,enum GameDinSettlement.SettlementStatus,string storage ref,bytes32,uint256,address,enum GameDinSettlement.DisputeReason,string storage ref)"}},"functionReturnParameters":3854,"id":3887,"nodeType":"Return","src":"14159:454:14"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"13042:588:14","text":" @dev Get settlement details\n @param settlementId Settlement ID\n @return id Settlement ID\n @return from Sender address\n @return to Recipient address\n @return amount Amount\n @return timestamp Timestamp\n @return status Settlement status\n @return l3TransactionHash L3 transaction hash\n @return merkleRoot Merkle root\n @return disputeDeadline Dispute deadline\n @return disputeInitiator Dispute initiator\n @return disputeReason Dispute reason\n @return disputeDetails Dispute details"},"functionSelector":"4c582380","id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"getSettlement","nameLocation":"13645:13:14","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"settlementId","nameLocation":"13667:12:14","nodeType":"VariableDeclaration","scope":3889,"src":"13659:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"13659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13658:22:14"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"id","nameLocation":"13722:2:14","nodeType":"VariableDeclaration","scope":3889,"src":"13714:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"13714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"from","nameLocation":"13743:4:14","nodeType":"VariableDeclaration","scope":3889,"src":"13735:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"13735:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"to","nameLocation":"13766:2:14","nodeType":"VariableDeclaration","scope":3889,"src":"13758:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3832,"name":"address","nodeType":"ElementaryTypeName","src":"13758:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"amount","nameLocation":"13787:6:14","nodeType":"VariableDeclaration","scope":3889,"src":"13779:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"13779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"timestamp","nameLocation":"13812:9:14","nodeType":"VariableDeclaration","scope":3889,"src":"13804:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"13804:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"status","nameLocation":"13849:6:14","nodeType":"VariableDeclaration","scope":3889,"src":"13832:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"},"typeName":{"id":3839,"nodeType":"UserDefinedTypeName","pathNode":{"id":3838,"name":"SettlementStatus","nameLocations":["13832:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":2988,"src":"13832:16:14"},"referencedDeclaration":2988,"src":"13832:16:14","typeDescriptions":{"typeIdentifier":"t_enum$_SettlementStatus_$2988","typeString":"enum GameDinSettlement.SettlementStatus"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"l3TransactionHash","nameLocation":"13880:17:14","nodeType":"VariableDeclaration","scope":3889,"src":"13866:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3841,"name":"string","nodeType":"ElementaryTypeName","src":"13866:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"merkleRoot","nameLocation":"13916:10:14","nodeType":"VariableDeclaration","scope":3889,"src":"13908:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13908:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"disputeDeadline","nameLocation":"13945:15:14","nodeType":"VariableDeclaration","scope":3889,"src":"13937:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"13937:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"disputeInitiator","nameLocation":"13979:16:14","nodeType":"VariableDeclaration","scope":3889,"src":"13971:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"13971:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"disputeReason","nameLocation":"14020:13:14","nodeType":"VariableDeclaration","scope":3889,"src":"14006:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3850,"nodeType":"UserDefinedTypeName","pathNode":{"id":3849,"name":"DisputeReason","nameLocations":["14006:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"14006:13:14"},"referencedDeclaration":2994,"src":"14006:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"disputeDetails","nameLocation":"14058:14:14","nodeType":"VariableDeclaration","scope":3889,"src":"14044:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3852,"name":"string","nodeType":"ElementaryTypeName","src":"14044:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13703:376:14"},"scope":4128,"src":"13636:985:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3937,"nodeType":"Block","src":"15345:349:14","statements":[{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"dispute","nameLocation":"15372:7:14","nodeType":"VariableDeclaration","scope":3937,"src":"15356:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"},"typeName":{"id":3913,"nodeType":"UserDefinedTypeName","pathNode":{"id":3912,"name":"Dispute","nameLocations":["15356:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3039,"src":"15356:7:14"},"referencedDeclaration":3039,"src":"15356:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute"}},"visibility":"internal"}],"id":3918,"initialValue":{"baseExpression":{"id":3915,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"15382:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$3039_storage_$","typeString":"mapping(uint256 => struct GameDinSettlement.Dispute storage ref)"}},"id":3917,"indexExpression":{"id":3916,"name":"settlementId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"15391:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15382:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage","typeString":"struct GameDinSettlement.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15356:48:14"},{"expression":{"components":[{"expression":{"id":3919,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15437:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15445:12:14","memberName":"settlementId","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"15437:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3921,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15472:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15480:9:14","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"15472:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3923,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15504:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15512:6:14","memberName":"reason","nodeType":"MemberAccess","referencedDeclaration":3028,"src":"15504:14:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},{"expression":{"id":3925,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15533:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15541:7:14","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":3030,"src":"15533:15:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":3927,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15563:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15571:9:14","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":3032,"src":"15563:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3929,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15595:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15603:8:14","memberName":"resolved","nodeType":"MemberAccess","referencedDeclaration":3034,"src":"15595:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3931,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15626:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15634:8:14","memberName":"resolver","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"15626:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3933,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"15657:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$3039_storage_ptr","typeString":"struct GameDinSettlement.Dispute storage pointer"}},"id":3934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15665:10:14","memberName":"resolution","nodeType":"MemberAccess","referencedDeclaration":3038,"src":"15657:18:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15422:264:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_enum$_DisputeReason_$2994_$_t_string_storage_$_t_uint256_$_t_bool_$_t_address_$_t_string_storage_$","typeString":"tuple(uint256,address,enum GameDinSettlement.DisputeReason,string storage ref,uint256,bool,address,string storage ref)"}},"functionReturnParameters":3911,"id":3936,"nodeType":"Return","src":"15415:271:14"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"14633:408:14","text":" @dev Get dispute details\n @param settlementId Settlement ID\n @return id Settlement ID\n @return initiator Dispute initiator\n @return reason Dispute reason\n @return details Dispute details\n @return timestamp Timestamp\n @return resolved Whether resolved\n @return resolver Resolver address\n @return resolution Resolution details"},"functionSelector":"e3a96cbd","id":3938,"implemented":true,"kind":"function","modifiers":[],"name":"getDispute","nameLocation":"15056:10:14","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"settlementId","nameLocation":"15075:12:14","nodeType":"VariableDeclaration","scope":3938,"src":"15067:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"15067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15066:22:14"},"returnParameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"id","nameLocation":"15130:2:14","nodeType":"VariableDeclaration","scope":3938,"src":"15122:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"15122:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"initiator","nameLocation":"15151:9:14","nodeType":"VariableDeclaration","scope":3938,"src":"15143:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"15143:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"reason","nameLocation":"15185:6:14","nodeType":"VariableDeclaration","scope":3938,"src":"15171:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"},"typeName":{"id":3899,"nodeType":"UserDefinedTypeName","pathNode":{"id":3898,"name":"DisputeReason","nameLocations":["15171:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"15171:13:14"},"referencedDeclaration":2994,"src":"15171:13:14","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeReason_$2994","typeString":"enum GameDinSettlement.DisputeReason"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"details","nameLocation":"15216:7:14","nodeType":"VariableDeclaration","scope":3938,"src":"15202:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3901,"name":"string","nodeType":"ElementaryTypeName","src":"15202:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"timestamp","nameLocation":"15242:9:14","nodeType":"VariableDeclaration","scope":3938,"src":"15234:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"15234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"resolved","nameLocation":"15267:8:14","nodeType":"VariableDeclaration","scope":3938,"src":"15262:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3905,"name":"bool","nodeType":"ElementaryTypeName","src":"15262:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"resolver","nameLocation":"15294:8:14","nodeType":"VariableDeclaration","scope":3938,"src":"15286:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"15286:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"resolution","nameLocation":"15327:10:14","nodeType":"VariableDeclaration","scope":3938,"src":"15313:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3909,"name":"string","nodeType":"ElementaryTypeName","src":"15313:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15111:233:14"},"scope":4128,"src":"15047:647:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3951,"nodeType":"Block","src":"15928:47:14","statements":[{"expression":{"baseExpression":{"id":3947,"name":"userSettlements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"15946:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3949,"indexExpression":{"id":3948,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"15962:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15946:21:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3946,"id":3950,"nodeType":"Return","src":"15939:28:14"}]},"documentation":{"id":3939,"nodeType":"StructuredDocumentation","src":"15706:133:14","text":" @dev Get user settlements\n @param user User address\n @return settlementIds Array of settlement IDs"},"functionSelector":"bfcb7040","id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"getUserSettlements","nameLocation":"15854:18:14","nodeType":"FunctionDefinition","parameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"user","nameLocation":"15881:4:14","nodeType":"VariableDeclaration","scope":3952,"src":"15873:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"15873:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15872:14:14"},"returnParameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3952,"src":"15910:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"15910:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ArrayTypeName","src":"15910:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15909:18:14"},"scope":4128,"src":"15845:130:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3987,"nodeType":"Block","src":"16504:265:14","statements":[{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"config","nameLocation":"16536:6:14","nodeType":"VariableDeclaration","scope":3987,"src":"16515:27:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"},"typeName":{"id":3969,"nodeType":"UserDefinedTypeName","pathNode":{"id":3968,"name":"BridgeConfig","nameLocations":["16515:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":3050,"src":"16515:12:14"},"referencedDeclaration":3050,"src":"16515:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig"}},"visibility":"internal"}],"id":3974,"initialValue":{"baseExpression":{"id":3971,"name":"bridgeConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"16545:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BridgeConfig_$3050_storage_$","typeString":"mapping(address => struct GameDinSettlement.BridgeConfig storage ref)"}},"id":3973,"indexExpression":{"id":3972,"name":"bridgeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"16559:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16545:28:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage","typeString":"struct GameDinSettlement.BridgeConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16515:58:14"},{"expression":{"components":[{"expression":{"id":3975,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16606:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16613:13:14","memberName":"bridgeAddress","nodeType":"MemberAccess","referencedDeclaration":3041,"src":"16606:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3977,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16641:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16648:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"16641:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3979,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16671:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16678:16:14","memberName":"minConfirmations","nodeType":"MemberAccess","referencedDeclaration":3045,"src":"16671:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3981,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16709:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16716:9:14","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":3047,"src":"16709:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3983,"name":"config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16740:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeConfig_$3050_storage_ptr","typeString":"struct GameDinSettlement.BridgeConfig storage pointer"}},"id":3984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16747:3:14","memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3049,"src":"16740:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16591:170:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,bool,uint256,uint256,uint256)"}},"functionReturnParameters":3967,"id":3986,"nodeType":"Return","src":"16584:177:14"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"15987:299:14","text":" @dev Get bridge configuration\n @param bridgeAddress Bridge address\n @return bridge Bridge address\n @return isActive Whether active\n @return minConfirmations Minimum confirmations\n @return maxAmount Maximum amount\n @return fee Bridge fee"},"functionSelector":"c4fc45a8","id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"getBridgeConfig","nameLocation":"16301:15:14","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"bridgeAddress","nameLocation":"16325:13:14","nodeType":"VariableDeclaration","scope":3988,"src":"16317:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3954,"name":"address","nodeType":"ElementaryTypeName","src":"16317:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16316:23:14"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"bridge","nameLocation":"16381:6:14","nodeType":"VariableDeclaration","scope":3988,"src":"16373:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3957,"name":"address","nodeType":"ElementaryTypeName","src":"16373:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"isActive","nameLocation":"16403:8:14","nodeType":"VariableDeclaration","scope":3988,"src":"16398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3959,"name":"bool","nodeType":"ElementaryTypeName","src":"16398:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"minConfirmations","nameLocation":"16430:16:14","nodeType":"VariableDeclaration","scope":3988,"src":"16422:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"16422:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"maxAmount","nameLocation":"16465:9:14","nodeType":"VariableDeclaration","scope":3988,"src":"16457:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"16457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"fee","nameLocation":"16493:3:14","nodeType":"VariableDeclaration","scope":3988,"src":"16485:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"16485:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16362:141:14"},"scope":4128,"src":"16292:477:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4010,"nodeType":"Block","src":"17156:134:14","statements":[{"assignments":[3998],"declarations":[{"constant":false,"id":3998,"mutability":"mutable","name":"oldFee","nameLocation":"17175:6:14","nodeType":"VariableDeclaration","scope":4010,"src":"17167:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"17167:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4000,"initialValue":{"id":3999,"name":"settlementFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17184:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17167:30:14"},{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"settlementFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"17208:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4002,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"17224:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17208:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"17208:22:14"},{"eventCall":{"arguments":[{"id":4006,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"17267:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4007,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"17275:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4005,"name":"SettlementFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"17246:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17246:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4009,"nodeType":"EmitStatement","src":"17241:41:14"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"16983:84:14","text":" @dev Update settlement fee\n @param newFee New fee amount"},"functionSelector":"899c45da","id":4011,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3994,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"17136:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3995,"kind":"modifierInvocation","modifierName":{"id":3993,"name":"onlyRole","nameLocations":["17127:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17127:8:14"},"nodeType":"ModifierInvocation","src":"17127:28:14"}],"name":"updateSettlementFee","nameLocation":"17082:19:14","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"newFee","nameLocation":"17110:6:14","nodeType":"VariableDeclaration","scope":4011,"src":"17102:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"17102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17101:16:14"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"17156:0:14"},"scope":4128,"src":"17073:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4033,"nodeType":"Block","src":"17469:125:14","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"oldFee","nameLocation":"17488:6:14","nodeType":"VariableDeclaration","scope":4033,"src":"17480:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"17480:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"id":4022,"name":"disputeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17497:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17480:27:14"},{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"disputeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"17518:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4025,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"17531:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17518:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"17518:19:14"},{"eventCall":{"arguments":[{"id":4029,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"17571:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4030,"name":"newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"17579:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4028,"name":"DisputeFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"17553:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17553:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"EmitStatement","src":"17548:38:14"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"17302:81:14","text":" @dev Update dispute fee\n @param newFee New fee amount"},"functionSelector":"9de2e9d7","id":4034,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4017,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"17449:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4018,"kind":"modifierInvocation","modifierName":{"id":4016,"name":"onlyRole","nameLocations":["17440:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17440:8:14"},"nodeType":"ModifierInvocation","src":"17440:28:14"}],"name":"updateDisputeFee","nameLocation":"17398:16:14","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"newFee","nameLocation":"17423:6:14","nodeType":"VariableDeclaration","scope":4034,"src":"17415:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"17415:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17414:16:14"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[],"src":"17469:0:14"},"scope":4128,"src":"17389:205:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4044,"nodeType":"Block","src":"17703:27:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4041,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"17714:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17714:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"ExpressionStatement","src":"17714:8:14"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"17606:40:14","text":" @dev Pause contract"},"functionSelector":"8456cb59","id":4045,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4038,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"17687:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4039,"kind":"modifierInvocation","modifierName":{"id":4037,"name":"onlyRole","nameLocations":["17678:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17678:8:14"},"nodeType":"ModifierInvocation","src":"17678:24:14"}],"name":"pause","nameLocation":"17661:5:14","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[],"src":"17666:2:14"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[],"src":"17703:0:14"},"scope":4128,"src":"17652:78:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4055,"nodeType":"Block","src":"17843:29:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4052,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"17854:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17854:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"ExpressionStatement","src":"17854:10:14"}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"17742:42:14","text":" @dev Unpause contract"},"functionSelector":"3f4ba83a","id":4056,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4049,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"17827:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4050,"kind":"modifierInvocation","modifierName":{"id":4048,"name":"onlyRole","nameLocations":["17818:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17818:8:14"},"nodeType":"ModifierInvocation","src":"17818:24:14"}],"name":"unpause","nameLocation":"17799:7:14","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"17806:2:14"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[],"src":"17843:0:14"},"scope":4128,"src":"17790:82:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4076,"nodeType":"Block","src":"18004:70:14","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":4071,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18052:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_GameDinSettlement_$4128","typeString":"contract GameDinSettlement"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameDinSettlement_$4128","typeString":"contract GameDinSettlement"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18044:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"18044:7:14","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18044:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18058:7:14","memberName":"balance","nodeType":"MemberAccess","src":"18044:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18023:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18027:6:14","memberName":"sender","nodeType":"MemberAccess","src":"18023:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18015:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"18015:8:14","stateMutability":"payable","typeDescriptions":{}}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18015:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18035:8:14","memberName":"transfer","nodeType":"MemberAccess","src":"18015:28:14","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18015:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"18015:51:14"}]},"documentation":{"id":4057,"nodeType":"StructuredDocumentation","src":"17884:48:14","text":" @dev Emergency withdraw ETH"},"functionSelector":"84536017","id":4077,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4060,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"17988:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4061,"kind":"modifierInvocation","modifierName":{"id":4059,"name":"onlyRole","nameLocations":["17979:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"17979:8:14"},"nodeType":"ModifierInvocation","src":"17979:24:14"}],"name":"emergencyWithdrawETH","nameLocation":"17947:20:14","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[],"src":"17967:2:14"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[],"src":"18004:0:14"},"scope":4128,"src":"17938:136:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4097,"nodeType":"Block","src":"18317:61:14","statements":[{"expression":{"arguments":[{"expression":{"id":4092,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18351:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18355:6:14","memberName":"sender","nodeType":"MemberAccess","src":"18351:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"18363:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4089,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"18335:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4088,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"18328:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1108_$","typeString":"type(contract IERC20)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18328:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1108","typeString":"contract IERC20"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18342:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1075,"src":"18328:22:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18328:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"ExpressionStatement","src":"18328:42:14"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"18086:127:14","text":" @dev Emergency withdraw tokens\n @param token Token address\n @param amount Amount to withdraw"},"functionSelector":"917bb998","id":4098,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4085,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"18301:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4086,"kind":"modifierInvocation","modifierName":{"id":4084,"name":"onlyRole","nameLocations":["18292:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"18292:8:14"},"nodeType":"ModifierInvocation","src":"18292:24:14"}],"name":"emergencyWithdrawTokens","nameLocation":"18228:23:14","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"token","nameLocation":"18260:5:14","nodeType":"VariableDeclaration","scope":4098,"src":"18252:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"18252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"amount","nameLocation":"18275:6:14","nodeType":"VariableDeclaration","scope":4098,"src":"18267:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"18267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18251:31:14"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[],"src":"18317:0:14"},"scope":4128,"src":"18219:159:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[837,1141],"body":{"id":4121,"nodeType":"Block","src":"18823:50:14","statements":[{"expression":{"arguments":[{"id":4116,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"18848:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4117,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"18854:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4118,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"18858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4113,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"18834:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GameDinSettlement_$4128_$","typeString":"type(contract super GameDinSettlement)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18840:7:14","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1141,"src":"18834:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18834:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"18834:31:14"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"18595:67:14","text":" @dev Override transfer function to check pause"},"id":4122,"implemented":true,"kind":"function","modifiers":[{"id":4111,"kind":"modifierInvocation","modifierName":{"id":4110,"name":"whenNotPaused","nameLocations":["18809:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"18809:13:14"},"nodeType":"ModifierInvocation","src":"18809:13:14"}],"name":"_update","nameLocation":"18677:7:14","nodeType":"FunctionDefinition","overrides":{"id":4109,"nodeType":"OverrideSpecifier","overrides":[{"id":4107,"name":"ERC20","nameLocations":["18787:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":1030,"src":"18787:5:14"},{"id":4108,"name":"ERC20Pausable","nameLocations":["18794:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1142,"src":"18794:13:14"}],"src":"18778:30:14"},"parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"from","nameLocation":"18703:4:14","nodeType":"VariableDeclaration","scope":4122,"src":"18695:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"18695:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"to","nameLocation":"18726:2:14","nodeType":"VariableDeclaration","scope":4122,"src":"18718:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4102,"name":"address","nodeType":"ElementaryTypeName","src":"18718:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"amount","nameLocation":"18747:6:14","nodeType":"VariableDeclaration","scope":4122,"src":"18739:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"18739:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18684:76:14"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[],"src":"18823:0:14"},"scope":4128,"src":"18668:205:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4126,"nodeType":"Block","src":"18974:2:14","statements":[]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"18885:56:14","text":" @dev Receive function to accept ETH"},"id":4127,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[],"src":"18954:2:14"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[],"src":"18974:0:14"},"scope":4128,"src":"18947:29:14","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4129,"src":"564:18415:14","usedErrors":[305,308,390,395,400,409,414,419,1337,1340,1437],"usedEvents":[317,326,335,1042,1051,1329,1334,3108,3116,3129,3139,3151,3157,3163]}],"src":"33:18947:14"},"id":14}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}]},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC-165 detection.","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}]},"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":538,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":544,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":546,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":548,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":550,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Pausable} from \\\"../../../utils/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC-20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_update}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":538,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":544,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":546,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":548,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":550,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1324,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_paused","offset":0,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1434,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GameDinL3Bridge.sol":{"GameDinL3Bridge":{"abi":[{"inputs":[{"internalType":"address","name":"_settlementContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"BridgeFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BridgeRequestCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"enum GameDinL3Bridge.AssetType","name":"assetType","type":"uint8"},{"indexed":false,"internalType":"address","name":"assetAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isL3ToL2","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BridgeRequestCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"enum GameDinL3Bridge.BridgeStatus","name":"status","type":"uint8"},{"indexed":false,"internalType":"string","name":"l3TransactionHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BridgeRequestProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"stake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ValidatorRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldStake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newStake","type":"uint256"}],"name":"ValidatorStakeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldStake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newStake","type":"uint256"}],"name":"ValidatorStakeUpdated","type":"event"},{"inputs":[],"name":"BRIDGE_OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BRIDGE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BRIDGE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALIDATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bridgeConfigs","outputs":[{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"minConfirmations","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"timeout","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bridgeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bridgeRequests","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"enum GameDinL3Bridge.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"enum GameDinL3Bridge.BridgeStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"address","name":"validator","type":"address"},{"internalType":"bool","name":"isL3ToL2","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"enum GameDinL3Bridge.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"bridgeToL3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"completeL2ToL3Request","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyWithdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getBridgeRequest","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"enum GameDinL3Bridge.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"enum GameDinL3Bridge.BridgeStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"address","name":"validator","type":"address"},{"internalType":"bool","name":"isL3ToL2","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserRequests","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"getValidatorInfo","outputs":[{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"totalProcessed","type":"uint256"},{"internalType":"uint256","name":"successRate","type":"uint256"},{"internalType":"uint256","name":"lastActivity","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"processL2ToL3Request","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"enum GameDinL3Bridge.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"processL3ToL2Request","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processedTransactions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registerValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"settlementContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRequests","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unregisterValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"updateBridgeFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newSettlement","type":"address"}],"name":"updateSettlementContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newStake","type":"uint256"}],"name":"updateValidatorStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userRequests","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"validators","outputs":[{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"totalProcessed","type":"uint256"},{"internalType":"uint256","name":"successRate","type":"uint256"},{"internalType":"uint256","name":"lastActivity","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Handles cross-chain transfers between L2 settlement layer and L3 gaming network Manages asset bridging, validation, and cross-chain communication","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"bridgeToL3(address,uint8,address,uint256,uint256)":{"details":"Create a bridge request from L2 to L3","params":{"amount":"Amount to bridge","assetAddress":"Asset contract address","assetType":"Type of asset to bridge","recipient":"Recipient address on L3","tokenId":"Token ID (for NFTs)"}},"completeL2ToL3Request(uint256)":{"details":"Complete bridge request (L2 to L3)","params":{"requestId":"Request ID"}},"emergencyWithdrawETH()":{"details":"Emergency withdraw ETH"},"emergencyWithdrawTokens(address,uint256)":{"details":"Emergency withdraw tokens","params":{"amount":"Amount to withdraw","token":"Token address"}},"getBridgeRequest(uint256)":{"details":"Get bridge request details","params":{"requestId":"Request ID"},"returns":{"amount":"Amount","assetAddress":"Asset address","assetType":"Asset type","deadline":"Deadline","id":"Request ID","isL3ToL2":"Whether L3 to L2","l3TransactionHash":"L3 transaction hash","merkleRoot":"Merkle root","recipient":"Recipient address","sender":"Sender address","status":"Request status","timestamp":"Timestamp","tokenId":"Token ID","validator":"Validator address"}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getUserRequests(address)":{"details":"Get user requests","params":{"user":"User address"},"returns":{"_0":"requestIds Array of request IDs"}},"getValidatorInfo(address)":{"details":"Get validator information","params":{"validator":"Validator address"},"returns":{"isActive":"Whether active","lastActivity":"Last activity","stake":"Stake amount","successRate":"Success rate","totalProcessed":"Total processed"}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"pause()":{"details":"Pause bridge"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"processL2ToL3Request(uint256,string,bytes32)":{"details":"Process bridge request (L2 to L3)","params":{"l3TransactionHash":"L3 transaction hash","merkleRoot":"Merkle root for verification","requestId":"Request ID"}},"processL3ToL2Request(address,address,uint8,address,uint256,uint256,string,bytes32)":{"details":"Process bridge request from L3 to L2","params":{"amount":"Amount to bridge","assetAddress":"Asset contract address","assetType":"Type of asset","l3TransactionHash":"L3 transaction hash","merkleRoot":"Merkle root for verification","recipient":"Recipient address on L2","sender":"Sender address on L3","tokenId":"Token ID (for NFTs)"}},"registerValidator()":{"details":"Register as a validator"},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"unpause()":{"details":"Unpause bridge"},"unregisterValidator()":{"details":"Unregister as a validator"},"updateBridgeFee(uint256)":{"details":"Update bridge fee","params":{"newFee":"New fee amount"}},"updateSettlementContract(address)":{"details":"Update settlement contract","params":{"newSettlement":"New settlement contract address"}},"updateValidatorStake(uint256)":{"details":"Update validator stake requirement","params":{"newStake":"New stake amount"}}},"title":"GameDin L3 Bridge Contract","version":1},"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":763,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_995":{"entryPoint":316,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_996":{"entryPoint":444,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_997":{"entryPoint":606,"id":256,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200012157601f6200381538819003918201601f19168301916001600160401b0383118484101762000126578084926020946040528339810103126200012157516001600160a01b03811680820362000121576001805566038d7ea4c68000600655683635c9adc5dea0000060075515620000dc5760028054610100600160a81b03191660089290921b610100600160a81b0316919091179055620000a7336200013c565b50620000b333620001bc565b50620000bf336200025e565b50620000cb33620002fb565b5060405161345c9081620003998239f35b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420736574746c656d656e7420636f6e747261637400000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620001b857818052816020526040822081835260205260408220600160ff198254161790553391600080516020620037f58339815191528180a4600190565b5090565b6001600160a01b031660008181527f0d4654aaffc87c2c9a3fd6a99770bc308fad799420104834ddcca8973d00903960205260408120549091907f7045adfe67d5f94dbfddcdb901e44bef55baacabb398c7cddda1bfd7620b15689060ff166200025957808352826020526040832082845260205260408320600160ff19825416179055600080516020620037f5833981519152339380a4600190565b505090565b6001600160a01b031660008181527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260408120549091907f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff166200025957808352826020526040832082845260205260408320600160ff19825416179055600080516020620037f5833981519152339380a4600190565b6001600160a01b031660008181527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd4660205260408120549091907fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff166200025957808352826020526040832082845260205260408320600160ff19825416179055600080516020620037f5833981519152339380a460019056fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816301ffc9a7146127a0575080630f5093d01461255257806320df4359146124f9578063248a9ca3146124af578063263cb6b61461242e5780632f2ff15d146123d35780633008afed1461230b57806336568abe146122805780633de739e714611e595780633f4ba83a14611d9a578063427ac0ca14611cf55780634be40fd114611c9c57806358e312c414611c605780635a1c036614611bec5780635c975abb14611bab5780635f81a57c14611b6f5780636ca56267146119ce5780636fa50dc01461113b5780637fce0002146110f857806382b12dd7146110bc57806384536017146110585780638456cb5914610fc1578063886688c114610f805780638a11d7c914610f305780638aea61dc14610ef4578063917bb99814610e2b57806391d1485414610db4578063973a814e14610d785780639a7c91d914610d3c5780639f89c8a214610c73578063a217fddf14610c39578063ac2e493614610bec578063b337cf7414610b0f578063bcc6587f14610934578063c332226e14610832578063c49baebe146107d9578063c7f18fe514610765578063d547741f14610706578063e91a8b08146102e9578063ea42418b146102945763fa52c7d80361000f57346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff61023861285e565b168152600a6020522060ff81541661028d6001830154926002810154906004600382015491015491604051958695869192608093969594919660a0840197151584526020840152604083015260608201520152565b0390f35b80fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602073ffffffffffffffffffffffffffffffffffffffff60025460081c16604051908152f35b50346102915760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915767ffffffffffffffff906004356024358381116107025761033e903690600401612aaf565b610346612c3c565b61034e6132da565b8183526020600881526040842061036781541515613310565b600681019081549660ff881660058110156106d55761067757600b82019261039660ff855460a01c1615613375565b60088301544211610619577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009798600198899116179055600a82019085519081116105ec576103e58254612b24565b601f81116105a5575b5084601f82116001146104de57926104c39592827f11e030ca8ba35e719c03c56fa4f16240dcc98aa67832e96db65c3538a92126ec9896936060968d916104d3575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828d1b9260031b1c19161790555b6009604435910155337fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055338852600a8152604088208781016104a881546131b3565b9055600342910155604051968752860152606085019061294a565b924260408201528033940390a380f35b905087015138610430565b828a52858a208992917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083168c5b81811061058e5750926104c39895927f11e030ca8ba35e719c03c56fa4f16240dcc98aa67832e96db65c3538a92126ec9a989592826060999610610557575b5050811b019055610460565b8901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388061054b565b8a83015184558c959093019291890191890161050c565b828a52858a20601f830160051c8101918784106105e2575b601f0160051c019089905b8281106105d65750506103ee565b600081550189906105c8565b90915081906105bd565b6024897f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600f60248201527f52657175657374206578706972656400000000000000000000000000000000006044820152fd5b606484604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601360248201527f52657175657374206e6f742070656e64696e67000000000000000000000000006044820152fd5b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b8280fd5b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610761600435610744612881565b908084528360205261075c6001604086200154612d65565b612fe3565b5080f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291577f1093db028025d2405a1aea589a8652d1f919bd517e7c7e858e0af317584d191360406004356107c3612d2b565b600754908060075582519182526020820152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989268152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761086a61285e565b610872612d2b565b73ffffffffffffffffffffffffffffffffffffffff8116156108d6577fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff006002549260081b1691161760025580f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420736574746c656d656e7420636f6e747261637400000000006044820152fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761096b6132da565b3381526020600a815260ff604083205416610ab1576002546007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810191909152908290829060081c73ffffffffffffffffffffffffffffffffffffffff168186816064810103925af18015610aa657610a79575b50338252600a81526040822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161781556007546004820155600342910155610a4033612d8b565b506007549060405191825242908201527f4fedf9289a156b214915bd5c2db58d3ee16acc185e80df66ee404e4573c821e160403392a280f35b610a9890823d8411610a9f575b610a908183612a6e565b8101906132c2565b50386109f4565b503d610a86565b6040513d85823e3d90fd5b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601260248201527f416c7265616479207265676973746572656400000000000000000000000000006044820152fd5b5034610291576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610be85773ffffffffffffffffffffffffffffffffffffffff610b5d61285e565b168252600981526040822060405192838383549182815201908193835284832090835b818110610bd45750505084610b96910385612a6e565b60405193838594850191818652518092526040850193925b828110610bbd57505050500390f35b835185528695509381019392810192600101610bae565b825484529286019260019283019201610b80565b5080fd5b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760ff60406020926004358152600b84522054166040519015158152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602090604051908152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576004358152600860205260409020805473ffffffffffffffffffffffffffffffffffffffff918260018201541690600281015493806003830154169160048101546005820154600683015460ff16600784015490600885015492600986015494600a8701610d1090612b77565b96600b0154986040519c8d9c8d9c8b8d60a01c60ff169d169b8360a01c60ff1693169161028d9e61298d565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020604051620151808152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600354604051908152f35b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915773ffffffffffffffffffffffffffffffffffffffff6040610e03612881565b92600435815280602052209116600052602052602060ff604060002054166040519015158152f35b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610e6361285e565b610e6b612ccf565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248035908201529060209082906044908290869073ffffffffffffffffffffffffffffffffffffffff165af18015610ee957610ed2575080f35b6107619060203d8111610a9f57610a908183612a6e565b6040513d84823e3d90fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600454604051908152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff61023861285e565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020604051670de0b6b3a76400008152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610ff8612ccf565b6110006132da565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761108f612ccf565b80808080478181156110b3575b3390f1156110a75780f35b604051903d90823e3d90fd5b506108fc61109c565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600654604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602060405169152d02c7e14af68000008152f35b5034610291576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761117461285e565b61117c612881565b9060036044351015610702576064359073ffffffffffffffffffffffffffffffffffffffff9081831683036119c95767ffffffffffffffff9260c43584811161175d576111cd903690600401612aaf565b936111d6612c3c565b6111de6132da565b8383161561196b576111f38487161515613084565b611209670de0b6b3a764000060843510156130e9565b61122169152d02c7e14af6800000608435111561314e565b84511561190d576040516020810190611254602082816112478b87815193849201612927565b8101038084520182612a6e565b5190208752600b60205260ff6040882054166118af576112756003546131b3565b948560035585885260086020526040882091868355600183017fffffffffffffffffffffffff000000000000000000000000000000000000000090878716828254161790556112d460028501888b16838254161781556044359061320f565b600384019087861690825416179055608435600484015560a435600584015560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060068501541617600684015542600784015562015180420180421161164257600884015581519081116105ec57611350600a840154612b24565b601f811161186a575b50806020601f82116001146117a6578a9161179b575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600a8301555b60e4356009830155600b82017401000000000000000000000000000000000000000081547fffffffffffffffffffffff0000000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff3316911617179055848716885260096020526114288660408a2061326b565b6114336004546131b3565b60045561144460843560055461325e565b600555604051611464602082816112478183019687815193849201612927565b5190208752600b6020526040872080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556044356116c6576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716600482015260843560248201526020816044818b878a165af180156116bb5761169c575b505b60060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055338652600a6020526040862060018101805461154c906131b3565b809155600282019081547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019082821161166f579061158b916133da565b6064810180911161164257916115c860409694927f02b57eecd372ee1f8bd796bedf6d87ea0da0834f5cdf5391efa26398ef2c0bc09896946133ed565b9055600342910155828451916115e0836044356128eb565b1660208201526084358482015260a4356060820152600160808201524260a0820152857f324d1b6cc60ec8b0b60854da81f895de35042fc8a80cc1ac5b8c8f90a4740e3060c085808b16951693a481519460843586524260208701521693a380f35b60248a7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b60248b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6116b49060203d602011610a9f57610a908183612a6e565b5038611503565b6040513d8a823e3d90fd5b604435600103611761578382163b1561175d576040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716602482015260a43560448201528790818160648183888b165af18015610ee957611749575b50505b611505565b61175290612a2b565b61175d578638611741565b8680fd5b60026044350361150557868060843515611792575b8180809260843590898c1690f1611744576040513d88823e3d90fd5b506108fc611776565b90508201513861136f565b9150600a84018a5260208a208a925b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0831684106118525760019350827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081161061181b575b5050811b01600a8301556113a3565b8401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388061180c565b848101518255602093840193600190920191016117b5565b600a84018a5260208a20601f830160051c8101602084106118a8575b601f830160051c8201811061189c575050611359565b60008155600101611886565b5080611886565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5472616e73616374696f6e20616c72656164792070726f6365737365640000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964204c33207472616e73616374696f6e206861736800000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c69642073656e6465720000000000000000000000000000000000006044820152fd5b600080fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611a056132da565b3381526020600a815260408220805460ff811615611b11577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168155600254600491820180546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233948101949094526024840152849290918490829060081c73ffffffffffffffffffffffffffffffffffffffff168186816044810103925af18015610aa657611af4575b50611abf33612f0d565b5054916040519283528201527fcdc86a7bd23991b72015ea60a4080fb4ade4360c5536444ba006509fd0f8c98c60403392a280f35b611b0a90843d8611610a9f57610a908183612a6e565b5038611ab5565b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600e60248201527f4e6f7420726567697374657265640000000000000000000000000000000000006044820152fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600554604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602060ff600254166040519015158152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291577f3e7af433b010df0902f945628a14ef63c63e1e5e8306127bde522445a470588f6040600435611c4a612d2b565b600654908060065582519182526020820152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600754604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517f7045adfe67d5f94dbfddcdb901e44bef55baacabb398c7cddda1bfd7620b15688152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff611d4561285e565b168152600c6020522060ff81541661028d6001830154926002810154906004600382015491015491604051958695869192608093969594919660a0840197151584526020840152604083015260608201520152565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611dd1612ccf565b60025460ff811615611e2f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60046040517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611e8c61285e565b6024356003811015610702576044359073ffffffffffffffffffffffffffffffffffffffff9182811680910361227c576064359260843590611ecc6132da565b600195600287541461225257600287551693611ee9851515613084565b611efd670de0b6b3a76400008210156130e9565b611f1369152d02c7e14af680000082111561314e565b60065434106121f457611f276003546131b3565b9283600355838852602060088152604089208581558881017fffffffffffffffffffffffff0000000000000000000000000000000000000000903382825416179055611f7e88600284018b8482541617815561320f565b836003830191825416179055836004820155846005820155600681017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905542600782015562015180420180421161166f5790600b916008820155017fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8154169055338952600981526120178560408b2061326b565b6120226004546131b3565b6004556120318360055461325e565b60055585612102576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905281816064818d875af180156120f7576120da575b505b61209560405180976128eb565b85015260408401526060830152600060808301524260a08301527f324d1b6cc60ec8b0b60854da81f895de35042fc8a80cc1ac5b8c8f90a4740e3060c03393a4805580f35b6120f090823d8411610a9f57610a908183612a6e565b5038612086565b6040513d8c823e3d90fd5b85880361217b57813b15612177576040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052898160648183875af180156120f757612164575b505b612088565b61217090999199612a2b565b973861215d565b8880fd5b600286036120885761218f6006548461325e565b34101561215f57606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601060248201527f496e73756666696369656e7420455448000000000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e73756666696369656e7420627269646765206665650000000000000000006044820152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576122b8612881565b3373ffffffffffffffffffffffffffffffffffffffff8216036122e15761076190600435612fe3565b60046040517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576004358152600860205260409020805473ffffffffffffffffffffffffffffffffffffffff9182600182015416906002810154938060038301541660048301546005840154600685015460ff16600786015490600887015492600988015494600b89015498600a016123ac90612b77565b966040519c8d9c8d9c8b8d60a01c60ff169d169b8360a01c60ff1693169161028d9e61298d565b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610761600435612411612881565b90808452836020526124296001604086200154612d65565b612e68565b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761246661285e565b73ffffffffffffffffffffffffffffffffffffffff168152600960205260408120805460243592908310156102915760206124a184846128a4565b90546040519160031b1c8152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157600160406020926004358152808452200154604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760043561258d612c3c565b6125956132da565b808252600860205260408220906125ae82541515613310565b60068201805460ff8116600581101561277357600103612715577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060029161260060ff600b88015460a01c1615613375565b16179055338352600a60205260408320600281019060018254910154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201908282116126e85790612652916133da565b606481018091116126bb5790612667916133ed565b90557f02b57eecd372ee1f8bd796bedf6d87ea0da0834f5cdf5391efa26398ef2c0bc06040600473ffffffffffffffffffffffffffffffffffffffff6002860154169401548151908152426020820152a380f35b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f52657175657374206e6f742070726f63657373696e67000000000000000000006044820152fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b905034610be85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610be8576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361070257602092507f7965db0b000000000000000000000000000000000000000000000000000000008114908115612834575b5015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150143861282d565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036119c957565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036119c957565b80548210156128bc5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060038210156128f85752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b83811061293a5750506000910152565b818101518382015260200161292a565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361298681518092818752878088019101612927565b0116010190565b9c9e9d9a9694919299959360608e6129d2939e9a9b9e815273ffffffffffffffffffffffffffffffffffffffff809d81809816602084015216604082015201906128eb565b1660808b015260a08a015260c089015260058410156128f8576101a096612a1c9460e08a01526101008901526101208801526101408701526101c08061016088015286019061294a565b95166101808401521515910152565b67ffffffffffffffff8111612a3f57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612a3f57604052565b81601f820112156119c95780359067ffffffffffffffff8211612a3f5760405192612b0260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185612a6e565b828452602083830101116119c957816000926020809301838601378301015290565b90600182811c92168015612b6d575b6020831014612b3e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691612b33565b9060405191826000825492612b8b84612b24565b908184526001948581169081600014612bfa5750600114612bb7575b5050612bb592500383612a6e565b565b9093915060005260209081600020936000915b818310612be2575050612bb593508201013880612ba7565b85548884018501529485019487945091830191612bca565b9050612bb59550602093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880612ba7565b3360009081527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260409020547f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff1615612c985750565b604490604051907fe2517d3f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b3360009081527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd4660205260409020547fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff1615612c985750565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615612c985750565b80600052600060205260406000203360005260205260ff6040600020541615612c985750565b73ffffffffffffffffffffffffffffffffffffffff1660008181527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260408120549091907f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff16612e635780835282602052604083208284526020526040832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083528260205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff60408420541615600014612e635780835282602052604083208284526020526040832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b73ffffffffffffffffffffffffffffffffffffffff1660008181527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260408120549091907f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff1615612e63578083528260205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b906000918083528260205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff604084205416600014612e63578083528260205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561308b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152fd5b156130f057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416d6f756e7420746f6f20736d616c6c000000000000000000000000000000006044820152fd5b1561315557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416d6f756e7420746f6f206c61726765000000000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146131e05760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060038110156128f8577fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff74ff000000000000000000000000000000000000000083549260a01b169116179055565b919082018092116131e057565b805468010000000000000000811015612a3f5761328d916001820181556128a4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff829392549160031b92831b921b1916179055565b908160209103126119c9575180151581036119c95790565b60ff600254166132e657565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fd5b1561331757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5265717565737420646f6573206e6f74206578697374000000000000000000006044820152fd5b1561337c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207265717565737420646972656374696f6e000000000000006044820152fd5b818102929181159184041417156131e057565b81156133f7570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122073c49787b276b02aabdf2f70305ebfd6414ffc9a24284a46e7e2d446147f43cd64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x121 JUMPI PUSH1 0x1F PUSH3 0x3815 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x126 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x121 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH3 0x121 JUMPI PUSH1 0x1 DUP1 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x6 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x7 SSTORE ISZERO PUSH3 0xDC JUMPI PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0xA7 CALLER PUSH3 0x13C JUMP JUMPDEST POP PUSH3 0xB3 CALLER PUSH3 0x1BC JUMP JUMPDEST POP PUSH3 0xBF CALLER PUSH3 0x25E JUMP JUMPDEST POP PUSH3 0xCB CALLER PUSH3 0x2FB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x345C SWAP1 DUP2 PUSH3 0x399 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736574746C656D656E7420636F6E74726163740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x1B8 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x37F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD4654AAFFC87C2C9A3FD6A99770BC308FAD799420104834DDCCA8973D009039 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7045ADFE67D5F94DBFDDCDB901E44BEF55BAACABB398C7CDDDA1BFD7620B1568 SWAP1 PUSH1 0xFF AND PUSH3 0x259 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x37F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND PUSH3 0x259 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x37F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND PUSH3 0x259 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x37F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x27A0 JUMPI POP DUP1 PUSH4 0xF5093D0 EQ PUSH2 0x2552 JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x24F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x24AF JUMPI DUP1 PUSH4 0x263CB6B6 EQ PUSH2 0x242E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23D3 JUMPI DUP1 PUSH4 0x3008AFED EQ PUSH2 0x230B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2280 JUMPI DUP1 PUSH4 0x3DE739E7 EQ PUSH2 0x1E59 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D9A JUMPI DUP1 PUSH4 0x427AC0CA EQ PUSH2 0x1CF5 JUMPI DUP1 PUSH4 0x4BE40FD1 EQ PUSH2 0x1C9C JUMPI DUP1 PUSH4 0x58E312C4 EQ PUSH2 0x1C60 JUMPI DUP1 PUSH4 0x5A1C0366 EQ PUSH2 0x1BEC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1BAB JUMPI DUP1 PUSH4 0x5F81A57C EQ PUSH2 0x1B6F JUMPI DUP1 PUSH4 0x6CA56267 EQ PUSH2 0x19CE JUMPI DUP1 PUSH4 0x6FA50DC0 EQ PUSH2 0x113B JUMPI DUP1 PUSH4 0x7FCE0002 EQ PUSH2 0x10F8 JUMPI DUP1 PUSH4 0x82B12DD7 EQ PUSH2 0x10BC JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0x1058 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x886688C1 EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x8A11D7C9 EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x8AEA61DC EQ PUSH2 0xEF4 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xDB4 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0x9A7C91D9 EQ PUSH2 0xD3C JUMPI DUP1 PUSH4 0x9F89C8A2 EQ PUSH2 0xC73 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0xAC2E4936 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0xB337CF74 EQ PUSH2 0xB0F JUMPI DUP1 PUSH4 0xBCC6587F EQ PUSH2 0x934 JUMPI DUP1 PUSH4 0xC332226E EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xC49BAEBE EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xC7F18FE5 EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0xE91A8B08 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xEA42418B EQ PUSH2 0x294 JUMPI PUSH4 0xFA52C7D8 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x238 PUSH2 0x285E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x28D PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x702 JUMPI PUSH2 0x33E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x346 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x34E PUSH2 0x32DA JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x367 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP7 PUSH1 0xFF DUP9 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x677 JUMPI PUSH1 0xB DUP3 ADD SWAP3 PUSH2 0x396 PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3375 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x619 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP8 SWAP9 PUSH1 0x1 SWAP9 DUP10 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 DUP6 MLOAD SWAP1 DUP2 GT PUSH2 0x5EC JUMPI PUSH2 0x3E5 DUP3 SLOAD PUSH2 0x2B24 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5A5 JUMPI JUMPDEST POP DUP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4DE JUMPI SWAP3 PUSH2 0x4C3 SWAP6 SWAP3 DUP3 PUSH32 0x11E030CA8BA35E719C03C56FA4F16240DCC98AA67832E96DB65C3538A92126EC SWAP9 SWAP7 SWAP4 PUSH1 0x60 SWAP7 DUP14 SWAP2 PUSH2 0x4D3 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP14 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP9 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP8 DUP2 ADD PUSH2 0x4A8 DUP2 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP8 ADD MLOAD CODESIZE PUSH2 0x430 JUMP JUMPDEST DUP3 DUP11 MSTORE DUP6 DUP11 KECCAK256 DUP10 SWAP3 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP13 JUMPDEST DUP2 DUP2 LT PUSH2 0x58E JUMPI POP SWAP3 PUSH2 0x4C3 SWAP9 SWAP6 SWAP3 PUSH32 0x11E030CA8BA35E719C03C56FA4F16240DCC98AA67832E96DB65C3538A92126EC SWAP11 SWAP9 SWAP6 SWAP3 DUP3 PUSH1 0x60 SWAP10 SWAP7 LT PUSH2 0x557 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x460 JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x54B JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP6 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST DUP3 DUP11 MSTORE DUP6 DUP11 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP5 LT PUSH2 0x5E2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP10 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5D6 JUMPI POP POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP10 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420657870697265640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F742070656E64696E6700000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x761 PUSH1 0x4 CALLDATALOAD PUSH2 0x744 PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0x75C PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x2D65 JUMP JUMPDEST PUSH2 0x2FE3 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH32 0x1093DB028025D2405A1AEA589A8652D1F919BD517E7C7E858E0AF317584D1913 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x7C3 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x7 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x86A PUSH2 0x285E JUMP JUMPDEST PUSH2 0x872 PUSH2 0x2D2B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x8D6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736574746C656D656E7420636F6E74726163740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x96B PUSH2 0x32DA JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0xAB1 JUMPI PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP7 DUP2 PUSH1 0x64 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xA79 JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xA40 CALLER PUSH2 0x2D8B JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH32 0x4FEDF9289A156B214915BD5C2DB58D3EE16ACC185E80DF66EE404E4573C821E1 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xA98 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xA9F JUMPI JUMPDEST PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x32C2 JUMP JUMPDEST POP CODESIZE PUSH2 0x9F4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xBE8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB5D PUSH2 0x285E JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xBD4 JUMPI POP POP POP DUP5 PUSH2 0xB96 SWAP2 SUB DUP6 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xBBD JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xBAE JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB80 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD SWAP5 PUSH1 0xA DUP8 ADD PUSH2 0xD10 SWAP1 PUSH2 0x2B77 JUMP JUMPDEST SWAP7 PUSH1 0xB ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP12 DUP14 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP14 AND SWAP12 DUP4 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP4 AND SWAP2 PUSH2 0x28D SWAP15 PUSH2 0x298D JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0xE03 PUSH2 0x2881 JUMP JUMPDEST SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0xE63 PUSH2 0x285E JUMP JUMPDEST PUSH2 0xE6B PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL DUP1 ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xED2 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x761 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x238 PUSH2 0x285E JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0xFF8 PUSH2 0x2CCF JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x108F PUSH2 0x2CCF JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0x10B3 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x10A7 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x109C JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x152D02C7E14AF6800000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1174 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x117C PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH1 0x3 PUSH1 0x44 CALLDATALOAD LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP4 SUB PUSH2 0x19C9 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0xC4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x175D JUMPI PUSH2 0x11CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2AAF JUMP JUMPDEST SWAP4 PUSH2 0x11D6 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x11DE PUSH2 0x32DA JUMP JUMPDEST DUP4 DUP4 AND ISZERO PUSH2 0x196B JUMPI PUSH2 0x11F3 DUP5 DUP8 AND ISZERO ISZERO PUSH2 0x3084 JUMP JUMPDEST PUSH2 0x1209 PUSH8 0xDE0B6B3A7640000 PUSH1 0x84 CALLDATALOAD LT ISZERO PUSH2 0x30E9 JUMP JUMPDEST PUSH2 0x1221 PUSH10 0x152D02C7E14AF6800000 PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0x314E JUMP JUMPDEST DUP5 MLOAD ISZERO PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1254 PUSH1 0x20 DUP3 DUP2 PUSH2 0x1247 DUP12 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2927 JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x2A6E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND PUSH2 0x18AF JUMPI PUSH2 0x1275 PUSH1 0x3 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x3 SSTORE DUP6 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP2 DUP7 DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP8 DUP8 AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x12D4 PUSH1 0x2 DUP6 ADD DUP9 DUP12 AND DUP4 DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SWAP1 DUP8 DUP7 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x6 DUP6 ADD SLOAD AND OR PUSH1 0x6 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x7 DUP5 ADD SSTORE PUSH3 0x15180 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x1642 JUMPI PUSH1 0x8 DUP5 ADD SSTORE DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0x5EC JUMPI PUSH2 0x1350 PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x2B24 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x186A JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A6 JUMPI DUP11 SWAP2 PUSH2 0x179B JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP4 ADD SSTORE JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0xB DUP3 ADD PUSH21 0x10000000000000000000000000000000000000000 DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER AND SWAP2 AND OR OR SWAP1 SSTORE DUP5 DUP8 AND DUP9 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1428 DUP7 PUSH1 0x40 DUP11 KECCAK256 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x1433 PUSH1 0x4 SLOAD PUSH2 0x31B3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x1444 PUSH1 0x84 CALLDATALOAD PUSH1 0x5 SLOAD PUSH2 0x325E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1464 PUSH1 0x20 DUP3 DUP2 PUSH2 0x1247 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2927 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 DUP8 DUP11 AND GAS CALL DUP1 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x169C JUMPI JUMPDEST POP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x2 OR SWAP1 SSTORE CALLER DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0x154C SWAP1 PUSH2 0x31B3 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP1 DUP3 DUP3 GT PUSH2 0x166F JUMPI SWAP1 PUSH2 0x158B SWAP2 PUSH2 0x33DA JUMP JUMPDEST PUSH1 0x64 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1642 JUMPI SWAP2 PUSH2 0x15C8 PUSH1 0x40 SWAP7 SWAP5 SWAP3 PUSH32 0x2B57EECD372EE1F8BD796BEDF6D87EA0DA0834F5CDF5391EFA26398EF2C0BC0 SWAP9 SWAP7 SWAP5 PUSH2 0x33ED JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE DUP3 DUP5 MLOAD SWAP2 PUSH2 0x15E0 DUP4 PUSH1 0x44 CALLDATALOAD PUSH2 0x28EB JUMP JUMPDEST AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD DUP5 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP6 PUSH32 0x324D1B6CC60EC8B0B60854DA81F895DE35042FC8A80CC1AC5B8C8F90A4740E30 PUSH1 0xC0 DUP6 DUP1 DUP12 AND SWAP6 AND SWAP4 LOG4 DUP2 MLOAD SWAP5 PUSH1 0x84 CALLDATALOAD DUP7 MSTORE TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE AND SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x16B4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 SUB PUSH2 0x1761 JUMPI DUP4 DUP3 AND EXTCODESIZE ISZERO PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE DUP8 SWAP1 DUP2 DUP2 PUSH1 0x64 DUP2 DUP4 DUP9 DUP12 AND GAS CALL DUP1 ISZERO PUSH2 0xEE9 JUMPI PUSH2 0x1749 JUMPI JUMPDEST POP POP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1752 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH2 0x175D JUMPI DUP7 CODESIZE PUSH2 0x1741 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x1505 JUMPI DUP7 DUP1 PUSH1 0x84 CALLDATALOAD ISZERO PUSH2 0x1792 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP10 DUP13 AND SWAP1 CALL PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP DUP3 ADD MLOAD CODESIZE PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP5 ADD DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 DUP11 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP5 LT PUSH2 0x1852 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 AND LT PUSH2 0x181B JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA DUP4 ADD SSTORE PUSH2 0x13A3 JUMP JUMPDEST DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x180C JUMP JUMPDEST DUP5 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0xA DUP5 ADD DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x18A8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x189C JUMPI POP POP PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1886 JUMP JUMPDEST POP DUP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C72656164792070726F636573736564000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204C33207472616E73616374696F6E20686173680000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1A05 PUSH2 0x32DA JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B11 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP5 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP7 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH2 0x1AF4 JUMPI JUMPDEST POP PUSH2 0x1ABF CALLER PUSH2 0x2F0D JUMP JUMPDEST POP SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0xCDC86A7BD23991B72015EA60A4080FB4ADE4360C5536444BA006509FD0F8C98C PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1B0A SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742072656769737465726564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH32 0x3E7AF433B010DF0902F945628A14EF63C63E1E5E8306127BDE522445A470588F PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C4A PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7045ADFE67D5F94DBFDDCDB901E44BEF55BAACABB398C7CDDDA1BFD7620B1568 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D45 PUSH2 0x285E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x28D PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1DD1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1E2F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1E8C PUSH2 0x285E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x227C JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x1ECC PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 SWAP6 PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x2252 JUMPI PUSH1 0x2 DUP8 SSTORE AND SWAP4 PUSH2 0x1EE9 DUP6 ISZERO ISZERO PUSH2 0x3084 JUMP JUMPDEST PUSH2 0x1EFD PUSH8 0xDE0B6B3A7640000 DUP3 LT ISZERO PUSH2 0x30E9 JUMP JUMPDEST PUSH2 0x1F13 PUSH10 0x152D02C7E14AF6800000 DUP3 GT ISZERO PUSH2 0x314E JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT PUSH2 0x21F4 JUMPI PUSH2 0x1F27 PUSH1 0x3 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0x3 SSTORE DUP4 DUP9 MSTORE PUSH1 0x20 PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP6 DUP2 SSTORE DUP9 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1F7E DUP9 PUSH1 0x2 DUP5 ADD DUP12 DUP5 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x320F JUMP JUMPDEST DUP4 PUSH1 0x3 DUP4 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x4 DUP3 ADD SSTORE DUP5 PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE TIMESTAMP PUSH1 0x7 DUP3 ADD SSTORE PUSH3 0x15180 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x166F JUMPI SWAP1 PUSH1 0xB SWAP2 PUSH1 0x8 DUP3 ADD SSTORE ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP10 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x2017 DUP6 PUSH1 0x40 DUP12 KECCAK256 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2022 PUSH1 0x4 SLOAD PUSH2 0x31B3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x2031 DUP4 PUSH1 0x5 SLOAD PUSH2 0x325E JUMP JUMPDEST PUSH1 0x5 SSTORE DUP6 PUSH2 0x2102 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 DUP14 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20DA JUMPI JUMPDEST POP JUMPDEST PUSH2 0x2095 PUSH1 0x40 MLOAD DUP1 SWAP8 PUSH2 0x28EB JUMP JUMPDEST DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE PUSH32 0x324D1B6CC60EC8B0B60854DA81F895DE35042FC8A80CC1AC5B8C8F90A4740E30 PUSH1 0xC0 CALLER SWAP4 LOG4 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x20F0 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x2086 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP9 SUB PUSH2 0x217B JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE DUP10 DUP2 PUSH1 0x64 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x2164 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x2170 SWAP1 SWAP10 SWAP2 SWAP10 PUSH2 0x2A2B JUMP JUMPDEST SWAP8 CODESIZE PUSH2 0x215D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP7 SUB PUSH2 0x2088 JUMPI PUSH2 0x218F PUSH1 0x6 SLOAD DUP5 PUSH2 0x325E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x215F JUMPI PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062726964676520666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x22B8 PUSH2 0x2881 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x22E1 JUMPI PUSH2 0x761 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP7 ADD SLOAD SWAP1 PUSH1 0x8 DUP8 ADD SLOAD SWAP3 PUSH1 0x9 DUP9 ADD SLOAD SWAP5 PUSH1 0xB DUP10 ADD SLOAD SWAP9 PUSH1 0xA ADD PUSH2 0x23AC SWAP1 PUSH2 0x2B77 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP12 DUP14 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP14 AND SWAP12 DUP4 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP4 AND SWAP2 PUSH2 0x28D SWAP15 PUSH2 0x298D JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x761 PUSH1 0x4 CALLDATALOAD PUSH2 0x2411 PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0x2429 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x2D65 JUMP JUMPDEST PUSH2 0x2E68 JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x2466 PUSH2 0x285E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x20 PUSH2 0x24A1 DUP5 DUP5 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x258D PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x2595 PUSH2 0x32DA JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH2 0x25AE DUP3 SLOAD ISZERO ISZERO PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2773 JUMPI PUSH1 0x1 SUB PUSH2 0x2715 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SWAP2 PUSH2 0x2600 PUSH1 0xFF PUSH1 0xB DUP9 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3375 JUMP JUMPDEST AND OR SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 PUSH1 0x1 DUP3 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP1 DUP3 DUP3 GT PUSH2 0x26E8 JUMPI SWAP1 PUSH2 0x2652 SWAP2 PUSH2 0x33DA JUMP JUMPDEST PUSH1 0x64 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x26BB JUMPI SWAP1 PUSH2 0x2667 SWAP2 PUSH2 0x33ED JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x2B57EECD372EE1F8BD796BEDF6D87EA0DA0834F5CDF5391EFA26398EF2C0BC0 PUSH1 0x40 PUSH1 0x4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 DUP7 ADD SLOAD AND SWAP5 ADD SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F742070726F63657373696E6700000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xBE8 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xBE8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x702 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2834 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x282D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x19C9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x19C9 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x28BC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x28F8 JUMPI MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x293A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x292A JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2986 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x2927 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP13 SWAP15 SWAP14 SWAP11 SWAP7 SWAP5 SWAP2 SWAP3 SWAP10 SWAP6 SWAP4 PUSH1 0x60 DUP15 PUSH2 0x29D2 SWAP4 SWAP15 SWAP11 SWAP12 SWAP15 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP14 DUP2 DUP1 SWAP9 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x28EB JUMP JUMPDEST AND PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x5 DUP5 LT ISZERO PUSH2 0x28F8 JUMPI PUSH2 0x1A0 SWAP7 PUSH2 0x2A1C SWAP5 PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x160 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST SWAP6 AND PUSH2 0x180 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2A3F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2B02 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x2A6E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C9 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2B6D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2B3E JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B33 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B8B DUP5 PUSH2 0x2B24 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2BFA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2BB7 JUMPI JUMPDEST POP POP PUSH2 0x2BB5 SWAP3 POP SUB DUP4 PUSH2 0x2A6E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2BE2 JUMPI POP POP PUSH2 0x2BB5 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2BA7 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2BCA JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB5 SWAP6 POP PUSH1 0x20 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2BA7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x308B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x30F0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F6F20736D616C6C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3155 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F6F206C6172676500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x31E0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x28F8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH21 0xFF0000000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31E0 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH2 0x328D SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x28A4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SWAP4 SWAP3 SLOAD SWAP2 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x19C9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x32E6 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3317 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420646F6573206E6F7420657869737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x337C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265717565737420646972656374696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x31E0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x33F7 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC49787B276B02AABDF2F70305EBFD6414FFC9A24 0x28 0x4A CHAINID 0xE7 0xE2 0xD4 CHAINID EQ PUSH32 0x43CD64736F6C634300081400332F8788117E7EFF1D82E926EC794901D17C7802 0x4A POP 0x27 MULMOD BLOCKHASH ADDRESS GASLIMIT BLOCKHASH 0xA7 CALLER PUSH6 0x6F0D00000000 ","sourceMap":"563:19572:13:-:0;;;;;;;;;;;;;-1:-1:-1;;563:19572:13;;;;-1:-1:-1;;;;;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;563:19572:13;;;;;;;;;;2880:14;;563:19572;2949:13;;563:19572;4851:33;563:19572;;4927:40;563:19572;;-1:-1:-1;;;;;;563:19572:13;;;;;;-1:-1:-1;;;;;563:19572:13;;;;;;;4988:42;5019:10;4988:42;:::i;:::-;;5041:44;5019:10;5041:44;:::i;:::-;;5096:38;5019:10;5096:38;:::i;:::-;;5145;5019:10;5145:38;:::i;:::-;;563:19572;;;;;;;;;;;;-1:-1:-1;;;563:19572:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;-1:-1:-1;563:19572:13;;;;;-1:-1:-1;563:19572:13;6179:316:0;-1:-1:-1;;;;;563:19572:13;4882:1;563:19572;;;;;;;;;;4882:1;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:8;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;563:19572:13;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;563:19572:13;2954:6:0;563:19572:13;;;;;;;;;;2954:6:0;;563:19572:13;890:33;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;563:19572:13;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;563:19572:13;2954:6:0;563:19572:13;;;;;;;;;;2954:6:0;;563:19572:13;971:27;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;563:19572:13;6424:11:0;:::o;6179:316::-;-1:-1:-1;;;;;563:19572:13;2954:6:0;563:19572:13;;;;;;;;;;2954:6:0;;563:19572:13;1046:27;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;563:19572:13;6424:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10369,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_32374":{"entryPoint":10334,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":12994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":10927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bool_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_enum_AssetType":{"entryPoint":10475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":10570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address_address_enum_AssetType_address_uint256_uint256_enum_BridgeStatus_uint256_uint256_bytes32_string_address_bool":{"entryPoint":10637,"id":null,"parameterSlots":15,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":12907,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":12894,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":13293,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":13274,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":11127,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10535,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11044,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10862,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_32380":{"entryPoint":10795,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkRole":{"entryPoint":11621,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_32372":{"entryPoint":11324,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_32382":{"entryPoint":11471,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_32384":{"entryPoint":11563,"id":93,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":11880,"id":256,"parameterSlots":2,"returnSlots":1},"fun_grantRole_32402":{"entryPoint":11659,"id":256,"parameterSlots":1,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":13018,"id":1377,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":12259,"id":294,"parameterSlots":2,"returnSlots":1},"fun_revokeRole_32385":{"entryPoint":12045,"id":294,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":12723,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12622,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1d0f":{"entryPoint":12521,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a666":{"entryPoint":12420,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b804":{"entryPoint":13072,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f454":{"entryPoint":13173,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":10404,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_enum_AssetType_to_enum_AssetType":{"entryPoint":12815,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816301ffc9a7146127a0575080630f5093d01461255257806320df4359146124f9578063248a9ca3146124af578063263cb6b61461242e5780632f2ff15d146123d35780633008afed1461230b57806336568abe146122805780633de739e714611e595780633f4ba83a14611d9a578063427ac0ca14611cf55780634be40fd114611c9c57806358e312c414611c605780635a1c036614611bec5780635c975abb14611bab5780635f81a57c14611b6f5780636ca56267146119ce5780636fa50dc01461113b5780637fce0002146110f857806382b12dd7146110bc57806384536017146110585780638456cb5914610fc1578063886688c114610f805780638a11d7c914610f305780638aea61dc14610ef4578063917bb99814610e2b57806391d1485414610db4578063973a814e14610d785780639a7c91d914610d3c5780639f89c8a214610c73578063a217fddf14610c39578063ac2e493614610bec578063b337cf7414610b0f578063bcc6587f14610934578063c332226e14610832578063c49baebe146107d9578063c7f18fe514610765578063d547741f14610706578063e91a8b08146102e9578063ea42418b146102945763fa52c7d80361000f57346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff61023861285e565b168152600a6020522060ff81541661028d6001830154926002810154906004600382015491015491604051958695869192608093969594919660a0840197151584526020840152604083015260608201520152565b0390f35b80fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602073ffffffffffffffffffffffffffffffffffffffff60025460081c16604051908152f35b50346102915760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915767ffffffffffffffff906004356024358381116107025761033e903690600401612aaf565b610346612c3c565b61034e6132da565b8183526020600881526040842061036781541515613310565b600681019081549660ff881660058110156106d55761067757600b82019261039660ff855460a01c1615613375565b60088301544211610619577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009798600198899116179055600a82019085519081116105ec576103e58254612b24565b601f81116105a5575b5084601f82116001146104de57926104c39592827f11e030ca8ba35e719c03c56fa4f16240dcc98aa67832e96db65c3538a92126ec9896936060968d916104d3575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828d1b9260031b1c19161790555b6009604435910155337fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055338852600a8152604088208781016104a881546131b3565b9055600342910155604051968752860152606085019061294a565b924260408201528033940390a380f35b905087015138610430565b828a52858a208992917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe083168c5b81811061058e5750926104c39895927f11e030ca8ba35e719c03c56fa4f16240dcc98aa67832e96db65c3538a92126ec9a989592826060999610610557575b5050811b019055610460565b8901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388061054b565b8a83015184558c959093019291890191890161050c565b828a52858a20601f830160051c8101918784106105e2575b601f0160051c019089905b8281106105d65750506103ee565b600081550189906105c8565b90915081906105bd565b6024897f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600f60248201527f52657175657374206578706972656400000000000000000000000000000000006044820152fd5b606484604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601360248201527f52657175657374206e6f742070656e64696e67000000000000000000000000006044820152fd5b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b8280fd5b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610761600435610744612881565b908084528360205261075c6001604086200154612d65565b612fe3565b5080f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291577f1093db028025d2405a1aea589a8652d1f919bd517e7c7e858e0af317584d191360406004356107c3612d2b565b600754908060075582519182526020820152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989268152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761086a61285e565b610872612d2b565b73ffffffffffffffffffffffffffffffffffffffff8116156108d6577fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff006002549260081b1691161760025580f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420736574746c656d656e7420636f6e747261637400000000006044820152fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761096b6132da565b3381526020600a815260ff604083205416610ab1576002546007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810191909152908290829060081c73ffffffffffffffffffffffffffffffffffffffff168186816064810103925af18015610aa657610a79575b50338252600a81526040822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161781556007546004820155600342910155610a4033612d8b565b506007549060405191825242908201527f4fedf9289a156b214915bd5c2db58d3ee16acc185e80df66ee404e4573c821e160403392a280f35b610a9890823d8411610a9f575b610a908183612a6e565b8101906132c2565b50386109f4565b503d610a86565b6040513d85823e3d90fd5b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601260248201527f416c7265616479207265676973746572656400000000000000000000000000006044820152fd5b5034610291576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610be85773ffffffffffffffffffffffffffffffffffffffff610b5d61285e565b168252600981526040822060405192838383549182815201908193835284832090835b818110610bd45750505084610b96910385612a6e565b60405193838594850191818652518092526040850193925b828110610bbd57505050500390f35b835185528695509381019392810192600101610bae565b825484529286019260019283019201610b80565b5080fd5b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760ff60406020926004358152600b84522054166040519015158152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602090604051908152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576004358152600860205260409020805473ffffffffffffffffffffffffffffffffffffffff918260018201541690600281015493806003830154169160048101546005820154600683015460ff16600784015490600885015492600986015494600a8701610d1090612b77565b96600b0154986040519c8d9c8d9c8b8d60a01c60ff169d169b8360a01c60ff1693169161028d9e61298d565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020604051620151808152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600354604051908152f35b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915773ffffffffffffffffffffffffffffffffffffffff6040610e03612881565b92600435815280602052209116600052602052602060ff604060002054166040519015158152f35b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610e6361285e565b610e6b612ccf565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248035908201529060209082906044908290869073ffffffffffffffffffffffffffffffffffffffff165af18015610ee957610ed2575080f35b6107619060203d8111610a9f57610a908183612a6e565b6040513d84823e3d90fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600454604051908152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff61023861285e565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020604051670de0b6b3a76400008152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610ff8612ccf565b6110006132da565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761108f612ccf565b80808080478181156110b3575b3390f1156110a75780f35b604051903d90823e3d90fd5b506108fc61109c565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600654604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602060405169152d02c7e14af68000008152f35b5034610291576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761117461285e565b61117c612881565b9060036044351015610702576064359073ffffffffffffffffffffffffffffffffffffffff9081831683036119c95767ffffffffffffffff9260c43584811161175d576111cd903690600401612aaf565b936111d6612c3c565b6111de6132da565b8383161561196b576111f38487161515613084565b611209670de0b6b3a764000060843510156130e9565b61122169152d02c7e14af6800000608435111561314e565b84511561190d576040516020810190611254602082816112478b87815193849201612927565b8101038084520182612a6e565b5190208752600b60205260ff6040882054166118af576112756003546131b3565b948560035585885260086020526040882091868355600183017fffffffffffffffffffffffff000000000000000000000000000000000000000090878716828254161790556112d460028501888b16838254161781556044359061320f565b600384019087861690825416179055608435600484015560a435600584015560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060068501541617600684015542600784015562015180420180421161164257600884015581519081116105ec57611350600a840154612b24565b601f811161186a575b50806020601f82116001146117a6578a9161179b575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600a8301555b60e4356009830155600b82017401000000000000000000000000000000000000000081547fffffffffffffffffffffff0000000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff3316911617179055848716885260096020526114288660408a2061326b565b6114336004546131b3565b60045561144460843560055461325e565b600555604051611464602082816112478183019687815193849201612927565b5190208752600b6020526040872080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556044356116c6576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716600482015260843560248201526020816044818b878a165af180156116bb5761169c575b505b60060180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055338652600a6020526040862060018101805461154c906131b3565b809155600282019081547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019082821161166f579061158b916133da565b6064810180911161164257916115c860409694927f02b57eecd372ee1f8bd796bedf6d87ea0da0834f5cdf5391efa26398ef2c0bc09896946133ed565b9055600342910155828451916115e0836044356128eb565b1660208201526084358482015260a4356060820152600160808201524260a0820152857f324d1b6cc60ec8b0b60854da81f895de35042fc8a80cc1ac5b8c8f90a4740e3060c085808b16951693a481519460843586524260208701521693a380f35b60248a7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b60248b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6116b49060203d602011610a9f57610a908183612a6e565b5038611503565b6040513d8a823e3d90fd5b604435600103611761578382163b1561175d576040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716602482015260a43560448201528790818160648183888b165af18015610ee957611749575b50505b611505565b61175290612a2b565b61175d578638611741565b8680fd5b60026044350361150557868060843515611792575b8180809260843590898c1690f1611744576040513d88823e3d90fd5b506108fc611776565b90508201513861136f565b9150600a84018a5260208a208a925b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0831684106118525760019350827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081161061181b575b5050811b01600a8301556113a3565b8401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388061180c565b848101518255602093840193600190920191016117b5565b600a84018a5260208a20601f830160051c8101602084106118a8575b601f830160051c8201811061189c575050611359565b60008155600101611886565b5080611886565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f5472616e73616374696f6e20616c72656164792070726f6365737365640000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c6964204c33207472616e73616374696f6e206861736800000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f496e76616c69642073656e6465720000000000000000000000000000000000006044820152fd5b600080fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611a056132da565b3381526020600a815260408220805460ff811615611b11577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168155600254600491820180546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233948101949094526024840152849290918490829060081c73ffffffffffffffffffffffffffffffffffffffff168186816044810103925af18015610aa657611af4575b50611abf33612f0d565b5054916040519283528201527fcdc86a7bd23991b72015ea60a4080fb4ade4360c5536444ba006509fd0f8c98c60403392a280f35b611b0a90843d8611610a9f57610a908183612a6e565b5038611ab5565b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600e60248201527f4e6f7420726567697374657265640000000000000000000000000000000000006044820152fd5b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600554604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157602060ff600254166040519015158152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291577f3e7af433b010df0902f945628a14ef63c63e1e5e8306127bde522445a470588f6040600435611c4a612d2b565b600654908060065582519182526020820152a180f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576020600754604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517f7045adfe67d5f94dbfddcdb901e44bef55baacabb398c7cddda1bfd7620b15688152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760409073ffffffffffffffffffffffffffffffffffffffff611d4561285e565b168152600c6020522060ff81541661028d6001830154926002810154906004600382015491015491604051958695869192608093969594919660a0840197151584526020840152604083015260608201520152565b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611dd1612ccf565b60025460ff811615611e2f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60046040517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b5060a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157611e8c61285e565b6024356003811015610702576044359073ffffffffffffffffffffffffffffffffffffffff9182811680910361227c576064359260843590611ecc6132da565b600195600287541461225257600287551693611ee9851515613084565b611efd670de0b6b3a76400008210156130e9565b611f1369152d02c7e14af680000082111561314e565b60065434106121f457611f276003546131b3565b9283600355838852602060088152604089208581558881017fffffffffffffffffffffffff0000000000000000000000000000000000000000903382825416179055611f7e88600284018b8482541617815561320f565b836003830191825416179055836004820155846005820155600681017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905542600782015562015180420180421161166f5790600b916008820155017fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8154169055338952600981526120178560408b2061326b565b6120226004546131b3565b6004556120318360055461325e565b60055585612102576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905281816064818d875af180156120f7576120da575b505b61209560405180976128eb565b85015260408401526060830152600060808301524260a08301527f324d1b6cc60ec8b0b60854da81f895de35042fc8a80cc1ac5b8c8f90a4740e3060c03393a4805580f35b6120f090823d8411610a9f57610a908183612a6e565b5038612086565b6040513d8c823e3d90fd5b85880361217b57813b15612177576040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052898160648183875af180156120f757612164575b505b612088565b61217090999199612a2b565b973861215d565b8880fd5b600286036120885761218f6006548461325e565b34101561215f57606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601060248201527f496e73756666696369656e7420455448000000000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e73756666696369656e7420627269646765206665650000000000000000006044820152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576122b8612881565b3373ffffffffffffffffffffffffffffffffffffffff8216036122e15761076190600435612fe3565b60046040517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610291576004358152600860205260409020805473ffffffffffffffffffffffffffffffffffffffff9182600182015416906002810154938060038301541660048301546005840154600685015460ff16600786015490600887015492600988015494600b89015498600a016123ac90612b77565b966040519c8d9c8d9c8b8d60a01c60ff169d169b8360a01c60ff1693169161028d9e61298d565b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157610761600435612411612881565b90808452836020526124296001604086200154612d65565b612e68565b50346102915760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761246661285e565b73ffffffffffffffffffffffffffffffffffffffff168152600960205260408120805460243592908310156102915760206124a184846128a4565b90546040519160031b1c8152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029157600160406020926004358152808452200154604051908152f35b503461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b50346102915760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915760043561258d612c3c565b6125956132da565b808252600860205260408220906125ae82541515613310565b60068201805460ff8116600581101561277357600103612715577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060029161260060ff600b88015460a01c1615613375565b16179055338352600a60205260408320600281019060018254910154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201908282116126e85790612652916133da565b606481018091116126bb5790612667916133ed565b90557f02b57eecd372ee1f8bd796bedf6d87ea0da0834f5cdf5391efa26398ef2c0bc06040600473ffffffffffffffffffffffffffffffffffffffff6002860154169401548151908152426020820152a380f35b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f52657175657374206e6f742070726f63657373696e67000000000000000000006044820152fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b905034610be85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610be8576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361070257602092507f7965db0b000000000000000000000000000000000000000000000000000000008114908115612834575b5015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150143861282d565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036119c957565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036119c957565b80548210156128bc5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060038210156128f85752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b83811061293a5750506000910152565b818101518382015260200161292a565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361298681518092818752878088019101612927565b0116010190565b9c9e9d9a9694919299959360608e6129d2939e9a9b9e815273ffffffffffffffffffffffffffffffffffffffff809d81809816602084015216604082015201906128eb565b1660808b015260a08a015260c089015260058410156128f8576101a096612a1c9460e08a01526101008901526101208801526101408701526101c08061016088015286019061294a565b95166101808401521515910152565b67ffffffffffffffff8111612a3f57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612a3f57604052565b81601f820112156119c95780359067ffffffffffffffff8211612a3f5760405192612b0260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185612a6e565b828452602083830101116119c957816000926020809301838601378301015290565b90600182811c92168015612b6d575b6020831014612b3e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691612b33565b9060405191826000825492612b8b84612b24565b908184526001948581169081600014612bfa5750600114612bb7575b5050612bb592500383612a6e565b565b9093915060005260209081600020936000915b818310612be2575050612bb593508201013880612ba7565b85548884018501529485019487945091830191612bca565b9050612bb59550602093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880612ba7565b3360009081527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260409020547f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff1615612c985750565b604490604051907fe2517d3f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b3360009081527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd4660205260409020547fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff1615612c985750565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615612c985750565b80600052600060205260406000203360005260205260ff6040600020541615612c985750565b73ffffffffffffffffffffffffffffffffffffffff1660008181527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260408120549091907f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff16612e635780835282602052604083208284526020526040832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083528260205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff60408420541615600014612e635780835282602052604083208284526020526040832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b73ffffffffffffffffffffffffffffffffffffffff1660008181527f5111aeae4aa79889928e72f88b5872109754de9d419ea9a4e3df5fba21d4d46f60205260408120549091907f21702c8af46127c7fa207f89d0b0a8441bb32959a0ac7df790e9ab1a25c989269060ff1615612e63578083528260205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b906000918083528260205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff604084205416600014612e63578083528260205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561308b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152fd5b156130f057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416d6f756e7420746f6f20736d616c6c000000000000000000000000000000006044820152fd5b1561315557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416d6f756e7420746f6f206c61726765000000000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146131e05760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060038110156128f8577fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff74ff000000000000000000000000000000000000000083549260a01b169116179055565b919082018092116131e057565b805468010000000000000000811015612a3f5761328d916001820181556128a4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff829392549160031b92831b921b1916179055565b908160209103126119c9575180151581036119c95790565b60ff600254166132e657565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fd5b1561331757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5265717565737420646f6573206e6f74206578697374000000000000000000006044820152fd5b1561337c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c6964207265717565737420646972656374696f6e000000000000006044820152fd5b818102929181159184041417156131e057565b81156133f7570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122073c49787b276b02aabdf2f70305ebfd6414ffc9a24284a46e7e2d446147f43cd64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x27A0 JUMPI POP DUP1 PUSH4 0xF5093D0 EQ PUSH2 0x2552 JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x24F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x24AF JUMPI DUP1 PUSH4 0x263CB6B6 EQ PUSH2 0x242E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23D3 JUMPI DUP1 PUSH4 0x3008AFED EQ PUSH2 0x230B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2280 JUMPI DUP1 PUSH4 0x3DE739E7 EQ PUSH2 0x1E59 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1D9A JUMPI DUP1 PUSH4 0x427AC0CA EQ PUSH2 0x1CF5 JUMPI DUP1 PUSH4 0x4BE40FD1 EQ PUSH2 0x1C9C JUMPI DUP1 PUSH4 0x58E312C4 EQ PUSH2 0x1C60 JUMPI DUP1 PUSH4 0x5A1C0366 EQ PUSH2 0x1BEC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1BAB JUMPI DUP1 PUSH4 0x5F81A57C EQ PUSH2 0x1B6F JUMPI DUP1 PUSH4 0x6CA56267 EQ PUSH2 0x19CE JUMPI DUP1 PUSH4 0x6FA50DC0 EQ PUSH2 0x113B JUMPI DUP1 PUSH4 0x7FCE0002 EQ PUSH2 0x10F8 JUMPI DUP1 PUSH4 0x82B12DD7 EQ PUSH2 0x10BC JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0x1058 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x886688C1 EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x8A11D7C9 EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x8AEA61DC EQ PUSH2 0xEF4 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xDB4 JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0xD78 JUMPI DUP1 PUSH4 0x9A7C91D9 EQ PUSH2 0xD3C JUMPI DUP1 PUSH4 0x9F89C8A2 EQ PUSH2 0xC73 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0xAC2E4936 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0xB337CF74 EQ PUSH2 0xB0F JUMPI DUP1 PUSH4 0xBCC6587F EQ PUSH2 0x934 JUMPI DUP1 PUSH4 0xC332226E EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0xC49BAEBE EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xC7F18FE5 EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x706 JUMPI DUP1 PUSH4 0xE91A8B08 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xEA42418B EQ PUSH2 0x294 JUMPI PUSH4 0xFA52C7D8 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x238 PUSH2 0x285E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x28D PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x702 JUMPI PUSH2 0x33E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2AAF JUMP JUMPDEST PUSH2 0x346 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x34E PUSH2 0x32DA JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x367 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP7 PUSH1 0xFF DUP9 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x677 JUMPI PUSH1 0xB DUP3 ADD SWAP3 PUSH2 0x396 PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3375 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x619 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP8 SWAP9 PUSH1 0x1 SWAP9 DUP10 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 DUP6 MLOAD SWAP1 DUP2 GT PUSH2 0x5EC JUMPI PUSH2 0x3E5 DUP3 SLOAD PUSH2 0x2B24 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5A5 JUMPI JUMPDEST POP DUP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4DE JUMPI SWAP3 PUSH2 0x4C3 SWAP6 SWAP3 DUP3 PUSH32 0x11E030CA8BA35E719C03C56FA4F16240DCC98AA67832E96DB65C3538A92126EC SWAP9 SWAP7 SWAP4 PUSH1 0x60 SWAP7 DUP14 SWAP2 PUSH2 0x4D3 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP14 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP9 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP8 DUP2 ADD PUSH2 0x4A8 DUP2 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP8 ADD MLOAD CODESIZE PUSH2 0x430 JUMP JUMPDEST DUP3 DUP11 MSTORE DUP6 DUP11 KECCAK256 DUP10 SWAP3 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP13 JUMPDEST DUP2 DUP2 LT PUSH2 0x58E JUMPI POP SWAP3 PUSH2 0x4C3 SWAP9 SWAP6 SWAP3 PUSH32 0x11E030CA8BA35E719C03C56FA4F16240DCC98AA67832E96DB65C3538A92126EC SWAP11 SWAP9 SWAP6 SWAP3 DUP3 PUSH1 0x60 SWAP10 SWAP7 LT PUSH2 0x557 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x460 JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x54B JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP6 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 DUP10 ADD PUSH2 0x50C JUMP JUMPDEST DUP3 DUP11 MSTORE DUP6 DUP11 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP5 LT PUSH2 0x5E2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP10 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5D6 JUMPI POP POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP10 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420657870697265640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F742070656E64696E6700000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x761 PUSH1 0x4 CALLDATALOAD PUSH2 0x744 PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0x75C PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x2D65 JUMP JUMPDEST PUSH2 0x2FE3 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH32 0x1093DB028025D2405A1AEA589A8652D1F919BD517E7C7E858E0AF317584D1913 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x7C3 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x7 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x86A PUSH2 0x285E JUMP JUMPDEST PUSH2 0x872 PUSH2 0x2D2B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x8D6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736574746C656D656E7420636F6E74726163740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x96B PUSH2 0x32DA JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0xAB1 JUMPI PUSH1 0x2 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP7 DUP2 PUSH1 0x64 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xA79 JUMPI JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH2 0xA40 CALLER PUSH2 0x2D8B JUMP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH32 0x4FEDF9289A156B214915BD5C2DB58D3EE16ACC185E80DF66EE404E4573C821E1 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xA98 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xA9F JUMPI JUMPDEST PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x32C2 JUMP JUMPDEST POP CODESIZE PUSH2 0x9F4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920726567697374657265640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xBE8 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB5D PUSH2 0x285E JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xBD4 JUMPI POP POP POP DUP5 PUSH2 0xB96 SWAP2 SUB DUP6 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xBBD JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xBAE JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB80 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xB DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD SWAP5 PUSH1 0xA DUP8 ADD PUSH2 0xD10 SWAP1 PUSH2 0x2B77 JUMP JUMPDEST SWAP7 PUSH1 0xB ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP12 DUP14 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP14 AND SWAP12 DUP4 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP4 AND SWAP2 PUSH2 0x28D SWAP15 PUSH2 0x298D JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0xE03 PUSH2 0x2881 JUMP JUMPDEST SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0xE63 PUSH2 0x285E JUMP JUMPDEST PUSH2 0xE6B PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS CALL DUP1 ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xED2 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x761 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x238 PUSH2 0x285E JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0xFF8 PUSH2 0x2CCF JUMP JUMPDEST PUSH2 0x1000 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x108F PUSH2 0x2CCF JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0x10B3 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x10A7 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x109C JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x152D02C7E14AF6800000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1174 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x117C PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH1 0x3 PUSH1 0x44 CALLDATALOAD LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP4 SUB PUSH2 0x19C9 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0xC4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x175D JUMPI PUSH2 0x11CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2AAF JUMP JUMPDEST SWAP4 PUSH2 0x11D6 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x11DE PUSH2 0x32DA JUMP JUMPDEST DUP4 DUP4 AND ISZERO PUSH2 0x196B JUMPI PUSH2 0x11F3 DUP5 DUP8 AND ISZERO ISZERO PUSH2 0x3084 JUMP JUMPDEST PUSH2 0x1209 PUSH8 0xDE0B6B3A7640000 PUSH1 0x84 CALLDATALOAD LT ISZERO PUSH2 0x30E9 JUMP JUMPDEST PUSH2 0x1221 PUSH10 0x152D02C7E14AF6800000 PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0x314E JUMP JUMPDEST DUP5 MLOAD ISZERO PUSH2 0x190D JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1254 PUSH1 0x20 DUP3 DUP2 PUSH2 0x1247 DUP12 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2927 JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x2A6E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND PUSH2 0x18AF JUMPI PUSH2 0x1275 PUSH1 0x3 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x3 SSTORE DUP6 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP2 DUP7 DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP8 DUP8 AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x12D4 PUSH1 0x2 DUP6 ADD DUP9 DUP12 AND DUP4 DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x320F JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SWAP1 DUP8 DUP7 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x6 DUP6 ADD SLOAD AND OR PUSH1 0x6 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x7 DUP5 ADD SSTORE PUSH3 0x15180 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x1642 JUMPI PUSH1 0x8 DUP5 ADD SSTORE DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0x5EC JUMPI PUSH2 0x1350 PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x2B24 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x186A JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x17A6 JUMPI DUP11 SWAP2 PUSH2 0x179B JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP4 ADD SSTORE JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH1 0xB DUP3 ADD PUSH21 0x10000000000000000000000000000000000000000 DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER AND SWAP2 AND OR OR SWAP1 SSTORE DUP5 DUP8 AND DUP9 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x1428 DUP7 PUSH1 0x40 DUP11 KECCAK256 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x1433 PUSH1 0x4 SLOAD PUSH2 0x31B3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x1444 PUSH1 0x84 CALLDATALOAD PUSH1 0x5 SLOAD PUSH2 0x325E JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1464 PUSH1 0x20 DUP3 DUP2 PUSH2 0x1247 DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2927 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP12 DUP8 DUP11 AND GAS CALL DUP1 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x169C JUMPI JUMPDEST POP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x2 OR SWAP1 SSTORE CALLER DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0x154C SWAP1 PUSH2 0x31B3 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP1 DUP3 DUP3 GT PUSH2 0x166F JUMPI SWAP1 PUSH2 0x158B SWAP2 PUSH2 0x33DA JUMP JUMPDEST PUSH1 0x64 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1642 JUMPI SWAP2 PUSH2 0x15C8 PUSH1 0x40 SWAP7 SWAP5 SWAP3 PUSH32 0x2B57EECD372EE1F8BD796BEDF6D87EA0DA0834F5CDF5391EFA26398EF2C0BC0 SWAP9 SWAP7 SWAP5 PUSH2 0x33ED JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE DUP3 DUP5 MLOAD SWAP2 PUSH2 0x15E0 DUP4 PUSH1 0x44 CALLDATALOAD PUSH2 0x28EB JUMP JUMPDEST AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD DUP5 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP6 PUSH32 0x324D1B6CC60EC8B0B60854DA81F895DE35042FC8A80CC1AC5B8C8F90A4740E30 PUSH1 0xC0 DUP6 DUP1 DUP12 AND SWAP6 AND SWAP4 LOG4 DUP2 MLOAD SWAP5 PUSH1 0x84 CALLDATALOAD DUP7 MSTORE TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE AND SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x16B4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 SUB PUSH2 0x1761 JUMPI DUP4 DUP3 AND EXTCODESIZE ISZERO PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE DUP8 SWAP1 DUP2 DUP2 PUSH1 0x64 DUP2 DUP4 DUP9 DUP12 AND GAS CALL DUP1 ISZERO PUSH2 0xEE9 JUMPI PUSH2 0x1749 JUMPI JUMPDEST POP POP JUMPDEST PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x1752 SWAP1 PUSH2 0x2A2B JUMP JUMPDEST PUSH2 0x175D JUMPI DUP7 CODESIZE PUSH2 0x1741 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x1505 JUMPI DUP7 DUP1 PUSH1 0x84 CALLDATALOAD ISZERO PUSH2 0x1792 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP10 DUP13 AND SWAP1 CALL PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1776 JUMP JUMPDEST SWAP1 POP DUP3 ADD MLOAD CODESIZE PUSH2 0x136F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP5 ADD DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 DUP11 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP5 LT PUSH2 0x1852 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 AND LT PUSH2 0x181B JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA DUP4 ADD SSTORE PUSH2 0x13A3 JUMP JUMPDEST DUP5 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x180C JUMP JUMPDEST DUP5 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0xA DUP5 ADD DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x18A8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x189C JUMPI POP POP PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1886 JUMP JUMPDEST POP DUP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C72656164792070726F636573736564000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204C33207472616E73616374696F6E20686173680000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073656E646572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1A05 PUSH2 0x32DA JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B11 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x4 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP5 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP7 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH2 0x1AF4 JUMPI JUMPDEST POP PUSH2 0x1ABF CALLER PUSH2 0x2F0D JUMP JUMPDEST POP SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0xCDC86A7BD23991B72015EA60A4080FB4ADE4360C5536444BA006509FD0F8C98C PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x1B0A SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742072656769737465726564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH32 0x3E7AF433B010DF0902F945628A14EF63C63E1E5E8306127BDE522445A470588F PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C4A PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x6 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7045ADFE67D5F94DBFDDCDB901E44BEF55BAACABB398C7CDDDA1BFD7620B1568 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1D45 PUSH2 0x285E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH2 0x28D PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1DD1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1E2F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x1E8C PUSH2 0x285E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x227C JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x1ECC PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 SWAP6 PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x2252 JUMPI PUSH1 0x2 DUP8 SSTORE AND SWAP4 PUSH2 0x1EE9 DUP6 ISZERO ISZERO PUSH2 0x3084 JUMP JUMPDEST PUSH2 0x1EFD PUSH8 0xDE0B6B3A7640000 DUP3 LT ISZERO PUSH2 0x30E9 JUMP JUMPDEST PUSH2 0x1F13 PUSH10 0x152D02C7E14AF6800000 DUP3 GT ISZERO PUSH2 0x314E JUMP JUMPDEST PUSH1 0x6 SLOAD CALLVALUE LT PUSH2 0x21F4 JUMPI PUSH2 0x1F27 PUSH1 0x3 SLOAD PUSH2 0x31B3 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0x3 SSTORE DUP4 DUP9 MSTORE PUSH1 0x20 PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 DUP10 KECCAK256 DUP6 DUP2 SSTORE DUP9 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1F7E DUP9 PUSH1 0x2 DUP5 ADD DUP12 DUP5 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x320F JUMP JUMPDEST DUP4 PUSH1 0x3 DUP4 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x4 DUP3 ADD SSTORE DUP5 PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE TIMESTAMP PUSH1 0x7 DUP3 ADD SSTORE PUSH3 0x15180 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0x166F JUMPI SWAP1 PUSH1 0xB SWAP2 PUSH1 0x8 DUP3 ADD SSTORE ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP10 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x2017 DUP6 PUSH1 0x40 DUP12 KECCAK256 PUSH2 0x326B JUMP JUMPDEST PUSH2 0x2022 PUSH1 0x4 SLOAD PUSH2 0x31B3 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x2031 DUP4 PUSH1 0x5 SLOAD PUSH2 0x325E JUMP JUMPDEST PUSH1 0x5 SSTORE DUP6 PUSH2 0x2102 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 DUP14 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20DA JUMPI JUMPDEST POP JUMPDEST PUSH2 0x2095 PUSH1 0x40 MLOAD DUP1 SWAP8 PUSH2 0x28EB JUMP JUMPDEST DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE PUSH32 0x324D1B6CC60EC8B0B60854DA81F895DE35042FC8A80CC1AC5B8C8F90A4740E30 PUSH1 0xC0 CALLER SWAP4 LOG4 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x20F0 SWAP1 DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xA9F JUMPI PUSH2 0xA90 DUP2 DUP4 PUSH2 0x2A6E JUMP JUMPDEST POP CODESIZE PUSH2 0x2086 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP9 SUB PUSH2 0x217B JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE DUP10 DUP2 PUSH1 0x64 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x2164 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x2170 SWAP1 SWAP10 SWAP2 SWAP10 PUSH2 0x2A2B JUMP JUMPDEST SWAP8 CODESIZE PUSH2 0x215D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP7 SUB PUSH2 0x2088 JUMPI PUSH2 0x218F PUSH1 0x6 SLOAD DUP5 PUSH2 0x325E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x215F JUMPI PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544800000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062726964676520666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x22B8 PUSH2 0x2881 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x22E1 JUMPI PUSH2 0x761 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2FE3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP7 ADD SLOAD SWAP1 PUSH1 0x8 DUP8 ADD SLOAD SWAP3 PUSH1 0x9 DUP9 ADD SLOAD SWAP5 PUSH1 0xB DUP10 ADD SLOAD SWAP9 PUSH1 0xA ADD PUSH2 0x23AC SWAP1 PUSH2 0x2B77 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 SWAP13 DUP12 DUP14 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP14 AND SWAP12 DUP4 PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP4 AND SWAP2 PUSH2 0x28D SWAP15 PUSH2 0x298D JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x761 PUSH1 0x4 CALLDATALOAD PUSH2 0x2411 PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH2 0x2429 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0x2D65 JUMP JUMPDEST PUSH2 0x2E68 JUMP JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x2466 PUSH2 0x285E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x20 PUSH2 0x24A1 DUP5 DUP5 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x291 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x258D PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x2595 PUSH2 0x32DA JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH2 0x25AE DUP3 SLOAD ISZERO ISZERO PUSH2 0x3310 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2773 JUMPI PUSH1 0x1 SUB PUSH2 0x2715 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SWAP2 PUSH2 0x2600 PUSH1 0xFF PUSH1 0xB DUP9 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3375 JUMP JUMPDEST AND OR SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 PUSH1 0x1 DUP3 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP1 DUP3 DUP3 GT PUSH2 0x26E8 JUMPI SWAP1 PUSH2 0x2652 SWAP2 PUSH2 0x33DA JUMP JUMPDEST PUSH1 0x64 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x26BB JUMPI SWAP1 PUSH2 0x2667 SWAP2 PUSH2 0x33ED JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x2B57EECD372EE1F8BD796BEDF6D87EA0DA0834F5CDF5391EFA26398EF2C0BC0 PUSH1 0x40 PUSH1 0x4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 DUP7 ADD SLOAD AND SWAP5 ADD SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F742070726F63657373696E6700000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xBE8 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xBE8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x702 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2834 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x282D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x19C9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x19C9 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x28BC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x28F8 JUMPI MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x293A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x292A JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2986 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x2927 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP13 SWAP15 SWAP14 SWAP11 SWAP7 SWAP5 SWAP2 SWAP3 SWAP10 SWAP6 SWAP4 PUSH1 0x60 DUP15 PUSH2 0x29D2 SWAP4 SWAP15 SWAP11 SWAP12 SWAP15 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP14 DUP2 DUP1 SWAP9 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x28EB JUMP JUMPDEST AND PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x5 DUP5 LT ISZERO PUSH2 0x28F8 JUMPI PUSH2 0x1A0 SWAP7 PUSH2 0x2A1C SWAP5 PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x1C0 DUP1 PUSH2 0x160 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x294A JUMP JUMPDEST SWAP6 AND PUSH2 0x180 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x19C9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2A3F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2B02 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x2A6E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x19C9 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2B6D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2B3E JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2B33 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B8B DUP5 PUSH2 0x2B24 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2BFA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2BB7 JUMPI JUMPDEST POP POP PUSH2 0x2BB5 SWAP3 POP SUB DUP4 PUSH2 0x2A6E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2BE2 JUMPI POP POP PUSH2 0x2BB5 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2BA7 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2BCA JUMP JUMPDEST SWAP1 POP PUSH2 0x2BB5 SWAP6 POP PUSH1 0x20 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2BA7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2C98 JUMPI POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5111AEAE4AA79889928E72F88B5872109754DE9D419EA9A4E3DF5FBA21D4D46F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x21702C8AF46127C7FA207F89D0B0A8441BB32959A0AC7DF790E9AB1A25C98926 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2E63 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x308B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x30F0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F6F20736D616C6C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3155 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F6F206C6172676500000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x31E0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x28F8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH21 0xFF0000000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31E0 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH2 0x328D SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x28A4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SWAP4 SWAP3 SLOAD SWAP2 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x19C9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x19C9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x32E6 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3317 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420646F6573206E6F7420657869737400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x337C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265717565737420646972656374696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x31E0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x33F7 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xC49787B276B02AABDF2F70305EBFD6414FFC9A24 0x28 0x4A CHAINID 0xE7 0xE2 0xD4 CHAINID EQ PUSH32 0x43CD64736F6C6343000814003300000000000000000000000000000000000000 ","sourceMap":"563:19572:13:-:0;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3108:51;563:19572;;;;;;;;3108:51;;;563:19572;3108:51;;;;563:19572;3108:51;563:19572;3108:51;;;563:19572;3108:51;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2709:33;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;563:19572:13;;;;8114:14;563:19572;;;;;8150:57;563:19572;;8158:22;;8150:57;:::i;:::-;8226:14;;;563:19572;;;;;;;;;;;;;;;8308:16;;;563:19572;8299:55;563:19572;;;;;;8307:17;8299:55;:::i;:::-;8114:14;8392:16;;563:19572;8373:15;:35;563:19572;;;11472:14;;;563:19572;;;;;;;8500:25;;;563:19572;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8854:182;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;8556:18;563:19572;;8556:18;;563:19572;8618:10;563:19572;;;;;;;8618:10;563:19572;;8500:25;563:19572;;;;;8751:24;;;:26;563:19572;;8751:26;:::i;:::-;563:19572;;8788:22;8373:15;8788:22;;563:19572;;;;;;;;;;;;;;:::i;:::-;8373:15;;563:19572;;;;8618:10;;8854:182;;;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8854:182;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;563:19572:13;;;;:::i;:::-;;;;;;;;2475:4:0;563:19572:13;;;;3901:22:0;563:19572:13;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;563:19572:13;;;;;;;;;;;;;;18640:41;563:19572;;;2475:4:0;;:::i;:::-;18574:14:13;563:19572;;;18574:14;563:19572;;;;;;;;;;18640:41;563:19572;;;;;;;;;;;;;;;;;971:27;563:19572;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;563:19572:13;;;18934:27;563:19572;;;;19004:34;563:19572;;;;;;;;19004:34;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:9;;:::i;:::-;13807:10:13;563:19572;;;13796:10;563:19572;;;;;;;;;;13917:18;563:19572;13977:14;563:19572;;;;13910:82;;13807:10;563:19572;13910:82;;563:19572;13970:4;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;13910:82;;;;;;;;;;563:19572;13807:10;;563:19572;;13796:10;563:19572;;;;;14101:4;563:19572;;;;;;;13977:14;563:19572;;14116:15;;563:19572;14159:22;14184:15;14159:22;;563:19572;14220:38;13807:10;14220:38;:::i;:::-;;13977:14;563:19572;;;;;;;14184:15;563:19572;;;;14284:64;563:19572;13807:10;14284:64;;563:19572;;13910:82;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;17812:12;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:53;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:55;563:19572;;;;;;;;2990:55;;563:19572;2990:55;;563:19572;;2990:55;;;;563:19572;2990:55;;;;;563:19572;;2990:55;563:19572;2990:55;;563:19572;2990:55;;;563:19572;2990:55;;;563:19572;;;2990:55;;;563:19572;2990:55;;;;563:19572;2990:55;;;;563:19572;2990:55;;;;;;;:::i;:::-;;;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1127:8;563:19572;;;;;;;;;;;;;;;;2749:29;563:19572;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;563:19572:13;;;19574:42;;19597:10;563:19572;19574:42;;563:19572;;;;;;;;;;;;;;;;;;;;;19574:42;;;;;;;;563:19572;;;19574:42;;;563:19572;19574:42;;;;;;;;;:::i;:::-;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1267:10;563:19572;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;2408:4;563:19572:13;2398:14:9;563:19572:13;;;2398:14:9;563:19572:13;2427:20:9;563:19572:13;;;735:10:8;563:19572:13;;2427:20:9;563:19572:13;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;19796:21:13;;;;;19767:51;;;;;563:19572;19775:10;19767:51;;;;;563:19572;;19767:51;563:19572;;;;;;;;;;19767:51;;;;;563:19572;;;;;;;;;;;;;2853:41;563:19572;;;;;;;;;;;;;;;;;;;;;;1186:15;563:19572;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;;:::i;:::-;1315:72:9;;:::i;:::-;563:19572:13;;;10815:20;563:19572;;10865:53;563:19572;;;10873:23;;10865:53;:::i;:::-;10929:56;1267:10;563:19572;;10937:27;;10929:56;:::i;:::-;10996;1186:15;563:19572;;11004:27;;10996:56;:::i;:::-;563:19572;;11071:35;563:19572;;;;;11190:35;;563:19572;11190:35;563:19572;;;;;;;;;;;;;:::i;:::-;;;11190:35;;;;;;;:::i;:::-;563:19572;11180:46;;563:19572;;11158:21;563:19572;;;;;;;;;;11282:16;563:19572;;11282:16;:::i;:::-;563:19572;;;;;;;11396:14;563:19572;;;;;;;;;;11472:14;;563:19572;;;;;;;;;;;;11546:29;11506:17;;;563:19572;;;;;;;;;;;;11546:29;;:::i;:::-;563:19572;11586:20;;563:19572;;;;;;;;;;;;;;11632:14;;563:19572;;;11666:15;;;563:19572;;;11702:14;;;563:19572;;;11702:14;;;563:19572;11773:15;11753:17;;;563:19572;1127:8;11773:15;563:19572;11773:15;;563:19572;;;11396:14;11799:16;;563:19572;;;;;;;;;11861:25;;;563:19572;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11861:25;;;563:19572;;;;11917:18;;;563:19572;11158:21;11959:17;;563:19572;;;;;11979:10;563:19572;;;;;;;;;;;;11917:18;563:19572;;12044:39;563:19572;;;;12044:39;:::i;:::-;12094:15;563:19572;;12094:15;:::i;:::-;563:19572;;12120:21;563:19572;;11666:15;563:19572;12120:21;:::i;:::-;11666:15;563:19572;;;12184:35;563:19572;12184:35;;563:19572;12184:35;;;563:19572;;;;;;;;;:::i;12184:35::-;563:19572;12174:46;;563:19572;;11158:21;563:19572;;;;;;;;;;;;;;;;;;;;12339:48;;563:19572;;;;12339:48;;563:19572;;;;;;;;;;;;;;;12339:48;;;;;;;;12290:343;;;11702:14;;563:19572;;;;11506:17;563:19572;;;11979:10;563:19572;;11861:25;563:19572;;;;;-1:-1:-1;12815:24:13;;563:19572;;12815:26;;;:::i;:::-;563:19572;;;11506:17;12877:21;;563:19572;;;;;;;;;;;;12877:54;;;;:::i;:::-;563:19572;;;;;;;;12876:89;;563:19572;12876:89;;;13311:132;12876:89;;;;:::i;:::-;563:19572;;;11773:15;12976:22;;563:19572;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11773:15;563:19572;;;;;13042:243;563:19572;;;;;;;13042:243;;563:19572;;;;;;;11773:15;563:19572;;;;;13311:132;;563:19572;;;;;;;;;;;;;;;;;;;;;;12339:48;;;563:19572;12339:48;563:19572;12339:48;;;;;;;:::i;:::-;;;;;;563:19572;;;;;;;;;12290:343;563:19572;;;12409:26;563:19572;;;;;12452:69;;;;563:19572;;;12452:69;;12495:4;563:19572;12452:69;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;12452:69;;;;;;;;12405:228;;;;12290:343;;12452:69;;;;:::i;:::-;563:19572;;12452:69;;;;563:19572;;;;12405:228;11506:17;563:19572;;12543:26;12290:343;12539:94;12586:35;;563:19572;;12586:35;;;12539:94;563:19572;;;;;;;;;;12586:35;;12405:228;12586:35;563:19572;;;;;;;;;12586:35;-1:-1:-1;12586:35:13;;;563:19572;;;;;;;;;;11861:25;;;;;563:19572;;;;;;;;11190:35;563:19572;;;;;;;;;;11190:35;563:19572;;;;;;;;;;;11861:25;;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11861:25;;;563:19572;;;;;;;;11666:15;563:19572;;;;;;;;;;;;11666:15;563:19572;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:9;;:::i;:::-;14535:10:13;563:19572;;;14524:10;563:19572;;;;;;;;;;;;;;;;;14715:18;563:19572;;14756:15;;;563:19572;;;;;14708:64;;14535:10;14708:64;;;563:19572;;;;;;;;;;14756:15;;563:19572;;;;;;;;;;;;;;14708:64;;;;;;;;;;563:19572;14535:10;14793:39;14535:10;14793:39;:::i;:::-;;563:19572;;;;;;;;;;14858:53;563:19572;14535:10;14858:53;;563:19572;;14708:64;;;;;;;;;;;;;:::i;:::-;;;;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2820:26;563:19572;;;;;;;;;;;;;;;;;;;;;1796:7:9;563:19572:13;;;;;;;;;;;;;;;;;;;;;;18299:32;563:19572;;;2475:4:0;;:::i;:::-;18245:9:13;563:19572;;;18245:9;563:19572;;;;;;;;;;18299:32;563:19572;;;;;;;;;;;;;;;2917:45;563:19572;;;;;;;;;;;;;;;;;;;;;;890:33;563:19572;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3226:53;563:19572;;;;;;;;3226:53;;;563:19572;3226:53;;;;563:19572;3226:53;563:19572;3226:53;;;563:19572;3226:53;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1796:7:9;563:19572:13;;;;2140:9:9;2136:62;;563:19572:13;;1796:7:9;563:19572:13;2674:22:9;563:19572:13;;;735:10:8;563:19572:13;;2674:22:9;563:19572:13;;2136:62:9;563:19572:13;;;2172:15:9;;;;563:19572:13;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:9;;;:::i;:::-;563:19572:13;;1899:1:10;563:19572:13;;2702:18:10;2698:86;;1899:1;563:19572:13;;;5936:23;5928:53;5936:23;;;5928:53;:::i;:::-;5992:56;1267:10;6000:27;;;5992:56;:::i;:::-;6059;1186:15;6067:27;;;6059:56;:::i;:::-;6147:9;563:19572;6134:9;:22;563:19572;;6205:16;563:19572;;6205:16;:::i;:::-;563:19572;;;;;;;;6319:14;563:19572;;;;;;;;6395:14;;;563:19572;6412:10;;563:19572;;;;;;;6473:29;6433:17;1899:1:10;6433:17:13;;563:19572;;;;;;;;6473:29;:::i;:::-;6513:20;563:19572;6513:20;;563:19572;;;;;;;6559:14;563:19572;6559:14;;563:19572;6593:15;;;;563:19572;6147:9;6629:14;;563:19572;;;;;;6697:15;6677:17;;;563:19572;1127:8;6697:15;563:19572;6697:15;;563:19572;;;6723:16;6785;6723;6319:14;6723:16;;563:19572;6785:16;563:19572;;;;;;6412:10;563:19572;;6830:12;563:19572;;6830:40;563:19572;;;;6830:40;:::i;:::-;6881:15;563:19572;;6881:15;:::i;:::-;563:19572;;6907:21;563:19572;6593:15;563:19572;6907:21;:::i;:::-;6593:15;563:19572;7000:28;;;563:19572;;;7045:68;;6412:10;563:19572;7045:68;;563:19572;7099:4;563:19572;;;;;;;;;;7099:4;563:19572;;;7045:68;;;;;;;;;;6996:389;;;563:19572;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6697:15;563:19572;;;;7410:248;563:19572;6412:10;7410:248;;563:19572;;;;7045:68;;;;;;;;;;;;;:::i;:::-;;;;;;563:19572;;;;;;;;;6996:389;7135:26;;;563:19572;;7178:70;;;;;563:19572;;;7178:70;;6412:10;563:19572;7178:70;;563:19572;7233:4;563:19572;;;;;;;;;;7233:4;563:19572;;;7233:4;7178:70;;;;;;;;;7131:254;;;6996:389;;7178:70;;;;;;;:::i;:::-;;;;;;563:19572;;;7131:254;1899:1:10;7270:26:13;;6996:389;7266:119;7334:18;6147:9;563:19572;7334:18;;:::i;:::-;6134:9;7321:31;563:19572;7131:254;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:86:10;563:19572:13;;;2743:30:10;;;;563:19572:13;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:8;563:19572:13;;;5421:34:0;5417:102;;5529:37;563:19572:13;;;5529:37:0;:::i;5417:102::-;563:19572:13;;;5478:30:0;;;;563:19572:13;;;;;;;;;;;;;;;;16280:14;563:19572;;;;;;;;16370:14;;563:19572;16370:14;;563:19572;;16399:17;;;;563:19572;16463:20;;;;;563:19572;;;16498:14;;563:19572;16527:15;;;563:19572;16557:14;;;563:19572;;;16586:17;;;563:19572;16618:16;16280:14;16618:16;;563:19572;16649:18;;;;563:19572;16722:17;;;;563:19572;16682:25;;;563:19572;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4330:25:0;563:19572:13;;;;:::i;:::-;;;;;;;;2475:4:0;563:19572:13;;;;3901:22:0;563:19572:13;2475:4:0;:::i;:::-;4330:25;:::i;563:19572:13:-;;;;;;;;;;;;;;:::i;:::-;;;;;3052:49;563:19572;;;;;;;;;;;3052:49;;;;;563:19572;3052:49;;;;:::i;:::-;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3901:22:0;563:19572:13;;;;;;;;;;;;;;;;;;;;;;1046:27;563:19572;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;563:19572:13;;;9299:14;563:19572;;;;;;9335:57;563:19572;;9343:22;;9335:57;:::i;:::-;9411:14;;;563:19572;;;;;;;;;;;;9411:41;563:19572;;;9583:22;9499:16;9490:55;563:19572;9499:16;;;563:19572;;;;9498:17;9490:55;:::i;:::-;563:19572;;;;9706:10;563:19572;;9695:10;563:19572;;;;;9583:22;9753:21;;563:19572;;;;9778:24;;563:19572;;;;;;;;;;;9753:54;;;;:::i;:::-;9810:3;563:19572;;;;;;;9752:89;;;;:::i;:::-;563:19572;;9867:148;563:19572;;;9583:22;9928:17;;563:19572;;9960:14;;563:19572;;;;;;9989:15;563:19572;;;;9867:148;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;563:19572:13;;;;;;;2673:87:0;877:25:11;862:40;;;2673:87:0;;;563:19572:13;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;563:19572:13;;-1:-1:-1;563:19572:13;;;-1:-1:-1;563:19572:13;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;563:19572:13;;;;;-1:-1:-1;563:19572:13;;;;;;;;;-1:-1:-1;;563:19572:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;563:19572:13;;;;-1:-1:-1;563:19572:13;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:103:0;735:10:8;2954:6:0;563:19572:13;;;;;;;;;;971:27;;563:19572;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;563:19572:13;;;;3565:47:0;;;;735:10:8;3565:47:0;;;563:19572:13;;;;;3565:47:0;3199:103;735:10:8;2954:6:0;563:19572:13;;;;;;;;;;1046:27;;563:19572;;3519:23:0;3515:108;;3199:103;:::o;:::-;735:10:8;563:19572:13;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;:::-;563:19572:13;2954:6:0;563:19572:13;2954:6:0;563:19572:13;;;2954:6:0;563:19572:13;735:10:8;2954:6:0;563:19572:13;;;;;2954:6:0;563:19572:13;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;563:19572:13;;2954:6:0;563:19572:13;;;;;;;;;;2954:6:0;;563:19572:13;971:27;;563:19572;;;;;;;;;;;;;;;;;;;;;6347:4:0;563:19572:13;;;;;;;6370:40:0;735:10:8;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;;2954:6;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;563:19572:13;;;;;;;;;;;;;;;;;;;;6347:4:0;563:19572:13;;;;;;;6370:40:0;735:10:8;6370:40:0;;;6347:4;6424:11;:::o;6732:317::-;563:19572:13;;2954:6:0;563:19572:13;;;;;;;;;;2954:6:0;;563:19572:13;971:27;;563:19572;;;;;;;;;;;;;;;;;;;;;;;;;;;;6924:40:0;735:10:8;6924:40:0;;;563:19572:13;6978:11:0;:::o;6732:317::-;;2954:6;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;6826:217:0;563:19572:13;;;;;;;;;;;;;;;;;;;;;;;;;;6924:40:0;735:10:8;6924:40:0;;;563:19572:13;6978:11:0;:::o;563:19572:13:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;1878:128:9:-;563:19572:13;1796:7:9;563:19572:13;;1939:61:9;;1878:128::o;1939:61::-;1974:15;563:19572:13;;1974:15:9;;;;563:19572:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"2680800","executionCost":"infinite","totalCost":"infinite"},"external":{"BRIDGE_OPERATOR_ROLE()":"402","BRIDGE_TIMEOUT()":"776","DEFAULT_ADMIN_ROLE()":"823","EMERGENCY_ROLE()":"204","MAX_BRIDGE_AMOUNT()":"556","MIN_BRIDGE_AMOUNT()":"644","VALIDATOR_ROLE()":"930","bridgeConfigs(address)":"11187","bridgeFee()":"2681","bridgeRequests(uint256)":"infinite","bridgeToL3(address,uint8,address,uint256,uint256)":"infinite","completeL2ToL3Request(uint256)":"66086","emergencyWithdrawETH()":"infinite","emergencyWithdrawTokens(address,uint256)":"infinite","getBridgeRequest(uint256)":"infinite","getRoleAdmin(bytes32)":"2401","getUserRequests(address)":"infinite","getValidatorInfo(address)":"11473","grantRole(bytes32,address)":"33310","hasRole(bytes32,address)":"3043","pause()":"30222","paused()":"2583","processL2ToL3Request(uint256,string,bytes32)":"infinite","processL3ToL2Request(address,address,uint8,address,uint256,uint256,string,bytes32)":"infinite","processedTransactions(bytes32)":"3023","registerValidator()":"infinite","renounceRole(bytes32,address)":"28924","requestCounter()":"2857","revokeRole(bytes32,address)":"34005","settlementContract()":"3133","supportsInterface(bytes4)":"259","totalRequests()":"2791","totalVolume()":"2593","unpause()":"27831","unregisterValidator()":"infinite","updateBridgeFee(uint256)":"28166","updateSettlementContract(address)":"27425","updateValidatorStake(uint256)":"28672","userRequests(address,uint256)":"6842","validatorStake()":"2527","validators(address)":"11841"}},"methodIdentifiers":{"BRIDGE_OPERATOR_ROLE()":"4be40fd1","BRIDGE_TIMEOUT()":"9a7c91d9","DEFAULT_ADMIN_ROLE()":"a217fddf","EMERGENCY_ROLE()":"20df4359","MAX_BRIDGE_AMOUNT()":"7fce0002","MIN_BRIDGE_AMOUNT()":"886688c1","VALIDATOR_ROLE()":"c49baebe","bridgeConfigs(address)":"427ac0ca","bridgeFee()":"82b12dd7","bridgeRequests(uint256)":"9f89c8a2","bridgeToL3(address,uint8,address,uint256,uint256)":"3de739e7","completeL2ToL3Request(uint256)":"0f5093d0","emergencyWithdrawETH()":"84536017","emergencyWithdrawTokens(address,uint256)":"917bb998","getBridgeRequest(uint256)":"3008afed","getRoleAdmin(bytes32)":"248a9ca3","getUserRequests(address)":"b337cf74","getValidatorInfo(address)":"8a11d7c9","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","pause()":"8456cb59","paused()":"5c975abb","processL2ToL3Request(uint256,string,bytes32)":"e91a8b08","processL3ToL2Request(address,address,uint8,address,uint256,uint256,string,bytes32)":"6fa50dc0","processedTransactions(bytes32)":"ac2e4936","registerValidator()":"bcc6587f","renounceRole(bytes32,address)":"36568abe","requestCounter()":"973a814e","revokeRole(bytes32,address)":"d547741f","settlementContract()":"ea42418b","supportsInterface(bytes4)":"01ffc9a7","totalRequests()":"8aea61dc","totalVolume()":"5f81a57c","unpause()":"3f4ba83a","unregisterValidator()":"6ca56267","updateBridgeFee(uint256)":"5a1c0366","updateSettlementContract(address)":"c332226e","updateValidatorStake(uint256)":"c7f18fe5","userRequests(address,uint256)":"263cb6b6","validatorStake()":"58e312c4","validators(address)":"fa52c7d8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_settlementContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"BridgeFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BridgeRequestCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GameDinL3Bridge.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isL3ToL2\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BridgeRequestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GameDinL3Bridge.BridgeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BridgeRequestProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ValidatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStake\",\"type\":\"uint256\"}],\"name\":\"ValidatorStakeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStake\",\"type\":\"uint256\"}],\"name\":\"ValidatorStakeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIDGE_OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BRIDGE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BRIDGE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgeConfigs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bridgeRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"enum GameDinL3Bridge.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum GameDinL3Bridge.BridgeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isL3ToL2\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"enum GameDinL3Bridge.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"bridgeToL3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"completeL2ToL3Request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getBridgeRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"enum GameDinL3Bridge.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum GameDinL3Bridge.BridgeStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isL3ToL2\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getValidatorInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalProcessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActivity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"processL2ToL3Request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"enum GameDinL3Bridge.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"processL3ToL2Request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processedTransactions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSettlement\",\"type\":\"address\"}],\"name\":\"updateSettlementContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStake\",\"type\":\"uint256\"}],\"name\":\"updateValidatorStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalProcessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActivity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Handles cross-chain transfers between L2 settlement layer and L3 gaming network Manages asset bridging, validation, and cross-chain communication\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"bridgeToL3(address,uint8,address,uint256,uint256)\":{\"details\":\"Create a bridge request from L2 to L3\",\"params\":{\"amount\":\"Amount to bridge\",\"assetAddress\":\"Asset contract address\",\"assetType\":\"Type of asset to bridge\",\"recipient\":\"Recipient address on L3\",\"tokenId\":\"Token ID (for NFTs)\"}},\"completeL2ToL3Request(uint256)\":{\"details\":\"Complete bridge request (L2 to L3)\",\"params\":{\"requestId\":\"Request ID\"}},\"emergencyWithdrawETH()\":{\"details\":\"Emergency withdraw ETH\"},\"emergencyWithdrawTokens(address,uint256)\":{\"details\":\"Emergency withdraw tokens\",\"params\":{\"amount\":\"Amount to withdraw\",\"token\":\"Token address\"}},\"getBridgeRequest(uint256)\":{\"details\":\"Get bridge request details\",\"params\":{\"requestId\":\"Request ID\"},\"returns\":{\"amount\":\"Amount\",\"assetAddress\":\"Asset address\",\"assetType\":\"Asset type\",\"deadline\":\"Deadline\",\"id\":\"Request ID\",\"isL3ToL2\":\"Whether L3 to L2\",\"l3TransactionHash\":\"L3 transaction hash\",\"merkleRoot\":\"Merkle root\",\"recipient\":\"Recipient address\",\"sender\":\"Sender address\",\"status\":\"Request status\",\"timestamp\":\"Timestamp\",\"tokenId\":\"Token ID\",\"validator\":\"Validator address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserRequests(address)\":{\"details\":\"Get user requests\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"requestIds Array of request IDs\"}},\"getValidatorInfo(address)\":{\"details\":\"Get validator information\",\"params\":{\"validator\":\"Validator address\"},\"returns\":{\"isActive\":\"Whether active\",\"lastActivity\":\"Last activity\",\"stake\":\"Stake amount\",\"successRate\":\"Success rate\",\"totalProcessed\":\"Total processed\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pause()\":{\"details\":\"Pause bridge\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processL2ToL3Request(uint256,string,bytes32)\":{\"details\":\"Process bridge request (L2 to L3)\",\"params\":{\"l3TransactionHash\":\"L3 transaction hash\",\"merkleRoot\":\"Merkle root for verification\",\"requestId\":\"Request ID\"}},\"processL3ToL2Request(address,address,uint8,address,uint256,uint256,string,bytes32)\":{\"details\":\"Process bridge request from L3 to L2\",\"params\":{\"amount\":\"Amount to bridge\",\"assetAddress\":\"Asset contract address\",\"assetType\":\"Type of asset\",\"l3TransactionHash\":\"L3 transaction hash\",\"merkleRoot\":\"Merkle root for verification\",\"recipient\":\"Recipient address on L2\",\"sender\":\"Sender address on L3\",\"tokenId\":\"Token ID (for NFTs)\"}},\"registerValidator()\":{\"details\":\"Register as a validator\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Unpause bridge\"},\"unregisterValidator()\":{\"details\":\"Unregister as a validator\"},\"updateBridgeFee(uint256)\":{\"details\":\"Update bridge fee\",\"params\":{\"newFee\":\"New fee amount\"}},\"updateSettlementContract(address)\":{\"details\":\"Update settlement contract\",\"params\":{\"newSettlement\":\"New settlement contract address\"}},\"updateValidatorStake(uint256)\":{\"details\":\"Update validator stake requirement\",\"params\":{\"newStake\":\"New stake amount\"}}},\"title\":\"GameDin L3 Bridge Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameDinL3Bridge.sol\":\"GameDinL3Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/GameDinL3Bridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title GameDin L3 Bridge Contract\\r\\n * @dev Handles cross-chain transfers between L2 settlement layer and L3 gaming network\\r\\n * Manages asset bridging, validation, and cross-chain communication\\r\\n */\\r\\ncontract GameDinL3Bridge is AccessControl, ReentrancyGuard, Pausable {\\r\\n    // =============================================================================\\r\\n    // CONSTANTS & ROLES\\r\\n    // =============================================================================\\r\\n    \\r\\n    bytes32 public constant BRIDGE_OPERATOR_ROLE = keccak256(\\\"BRIDGE_OPERATOR_ROLE\\\");\\r\\n    bytes32 public constant VALIDATOR_ROLE = keccak256(\\\"VALIDATOR_ROLE\\\");\\r\\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\\\"EMERGENCY_ROLE\\\");\\r\\n    \\r\\n    uint256 public constant BRIDGE_TIMEOUT = 24 hours;\\r\\n    uint256 public constant MAX_BRIDGE_AMOUNT = 100000 * 10**18; // 100K tokens\\r\\n    uint256 public constant MIN_BRIDGE_AMOUNT = 1 * 10**18; // 1 token\\r\\n    \\r\\n    // =============================================================================\\r\\n    // STRUCTS & ENUMS\\r\\n    // =============================================================================\\r\\n    \\r\\n    enum BridgeStatus {\\r\\n        PENDING,\\r\\n        PROCESSING,\\r\\n        COMPLETED,\\r\\n        FAILED,\\r\\n        CANCELLED\\r\\n    }\\r\\n    \\r\\n    enum AssetType {\\r\\n        TOKEN,\\r\\n        NFT,\\r\\n        ETH\\r\\n    }\\r\\n    \\r\\n    struct BridgeRequest {\\r\\n        uint256 requestId;\\r\\n        address sender;\\r\\n        address recipient;\\r\\n        AssetType assetType;\\r\\n        address assetAddress;\\r\\n        uint256 amount;\\r\\n        uint256 tokenId;\\r\\n        BridgeStatus status;\\r\\n        uint256 timestamp;\\r\\n        uint256 deadline;\\r\\n        bytes32 merkleRoot;\\r\\n        string l3TransactionHash;\\r\\n        address validator;\\r\\n        bool isL3ToL2;\\r\\n    }\\r\\n    \\r\\n    struct BridgeConfig {\\r\\n        bool isActive;\\r\\n        uint256 minConfirmations;\\r\\n        uint256 maxAmount;\\r\\n        uint256 fee;\\r\\n        uint256 timeout;\\r\\n    }\\r\\n    \\r\\n    struct ValidatorInfo {\\r\\n        bool isActive;\\r\\n        uint256 totalProcessed;\\r\\n        uint256 successRate;\\r\\n        uint256 lastActivity;\\r\\n        uint256 stake;\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // STATE VARIABLES\\r\\n    // =============================================================================\\r\\n    \\r\\n    address public settlementContract;\\r\\n    uint256 public requestCounter;\\r\\n    uint256 public totalRequests;\\r\\n    uint256 public totalVolume;\\r\\n    uint256 public bridgeFee = 0.001 * 10**18; // 0.001 tokens\\r\\n    uint256 public validatorStake = 1000 * 10**18; // 1000 tokens\\r\\n    \\r\\n    mapping(uint256 => BridgeRequest) public bridgeRequests;\\r\\n    mapping(address => uint256[]) public userRequests;\\r\\n    mapping(address => ValidatorInfo) public validators;\\r\\n    mapping(bytes32 => bool) public processedTransactions;\\r\\n    mapping(address => BridgeConfig) public bridgeConfigs;\\r\\n    \\r\\n    // =============================================================================\\r\\n    // EVENTS\\r\\n    // =============================================================================\\r\\n    \\r\\n    event BridgeRequestCreated(\\r\\n        uint256 indexed requestId,\\r\\n        address indexed sender,\\r\\n        address indexed recipient,\\r\\n        AssetType assetType,\\r\\n        address assetAddress,\\r\\n        uint256 amount,\\r\\n        uint256 tokenId,\\r\\n        bool isL3ToL2,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event BridgeRequestProcessed(\\r\\n        uint256 indexed requestId,\\r\\n        address indexed validator,\\r\\n        BridgeStatus status,\\r\\n        string l3TransactionHash,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event BridgeRequestCompleted(\\r\\n        uint256 indexed requestId,\\r\\n        address indexed recipient,\\r\\n        uint256 amount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event ValidatorRegistered(\\r\\n        address indexed validator,\\r\\n        uint256 stake,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event ValidatorStakeUpdated(\\r\\n        address indexed validator,\\r\\n        uint256 oldStake,\\r\\n        uint256 newStake\\r\\n    );\\r\\n    \\r\\n    event BridgeFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n    event ValidatorStakeUpdated(uint256 oldStake, uint256 newStake);\\r\\n    \\r\\n    // =============================================================================\\r\\n    // CONSTRUCTOR\\r\\n    // =============================================================================\\r\\n    \\r\\n    constructor(address _settlementContract) {\\r\\n        require(_settlementContract != address(0), \\\"Invalid settlement contract\\\");\\r\\n        settlementContract = _settlementContract;\\r\\n        \\r\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\r\\n        _grantRole(BRIDGE_OPERATOR_ROLE, msg.sender);\\r\\n        _grantRole(VALIDATOR_ROLE, msg.sender);\\r\\n        _grantRole(EMERGENCY_ROLE, msg.sender);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // BRIDGE FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Create a bridge request from L2 to L3\\r\\n     * @param recipient Recipient address on L3\\r\\n     * @param assetType Type of asset to bridge\\r\\n     * @param assetAddress Asset contract address\\r\\n     * @param amount Amount to bridge\\r\\n     * @param tokenId Token ID (for NFTs)\\r\\n     */\\r\\n    function bridgeToL3(\\r\\n        address recipient,\\r\\n        AssetType assetType,\\r\\n        address assetAddress,\\r\\n        uint256 amount,\\r\\n        uint256 tokenId\\r\\n    ) external payable whenNotPaused nonReentrant {\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        require(amount >= MIN_BRIDGE_AMOUNT, \\\"Amount too small\\\");\\r\\n        require(amount <= MAX_BRIDGE_AMOUNT, \\\"Amount too large\\\");\\r\\n        require(msg.value >= bridgeFee, \\\"Insufficient bridge fee\\\");\\r\\n        \\r\\n        requestCounter++;\\r\\n        uint256 requestId = requestCounter;\\r\\n        \\r\\n        BridgeRequest storage request = bridgeRequests[requestId];\\r\\n        request.requestId = requestId;\\r\\n        request.sender = msg.sender;\\r\\n        request.recipient = recipient;\\r\\n        request.assetType = assetType;\\r\\n        request.assetAddress = assetAddress;\\r\\n        request.amount = amount;\\r\\n        request.tokenId = tokenId;\\r\\n        request.status = BridgeStatus.PENDING;\\r\\n        request.timestamp = block.timestamp;\\r\\n        request.deadline = block.timestamp + BRIDGE_TIMEOUT;\\r\\n        request.isL3ToL2 = false;\\r\\n        \\r\\n        userRequests[msg.sender].push(requestId);\\r\\n        totalRequests++;\\r\\n        totalVolume += amount;\\r\\n        \\r\\n        // Transfer assets to bridge contract\\r\\n        if (assetType == AssetType.TOKEN) {\\r\\n            IERC20(assetAddress).transferFrom(msg.sender, address(this), amount);\\r\\n        } else if (assetType == AssetType.NFT) {\\r\\n            IERC721(assetAddress).transferFrom(msg.sender, address(this), tokenId);\\r\\n        } else if (assetType == AssetType.ETH) {\\r\\n            require(msg.value >= amount + bridgeFee, \\\"Insufficient ETH\\\");\\r\\n        }\\r\\n        \\r\\n        emit BridgeRequestCreated(\\r\\n            requestId,\\r\\n            msg.sender,\\r\\n            recipient,\\r\\n            assetType,\\r\\n            assetAddress,\\r\\n            amount,\\r\\n            tokenId,\\r\\n            false,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Process bridge request (L2 to L3)\\r\\n     * @param requestId Request ID\\r\\n     * @param l3TransactionHash L3 transaction hash\\r\\n     * @param merkleRoot Merkle root for verification\\r\\n     */\\r\\n    function processL2ToL3Request(\\r\\n        uint256 requestId,\\r\\n        string memory l3TransactionHash,\\r\\n        bytes32 merkleRoot\\r\\n    ) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\\r\\n        BridgeRequest storage request = bridgeRequests[requestId];\\r\\n        require(request.requestId != 0, \\\"Request does not exist\\\");\\r\\n        require(request.status == BridgeStatus.PENDING, \\\"Request not pending\\\");\\r\\n        require(!request.isL3ToL2, \\\"Invalid request direction\\\");\\r\\n        require(block.timestamp <= request.deadline, \\\"Request expired\\\");\\r\\n        \\r\\n        request.status = BridgeStatus.PROCESSING;\\r\\n        request.l3TransactionHash = l3TransactionHash;\\r\\n        request.merkleRoot = merkleRoot;\\r\\n        request.validator = msg.sender;\\r\\n        \\r\\n        // Update validator stats\\r\\n        ValidatorInfo storage validator = validators[msg.sender];\\r\\n        validator.totalProcessed++;\\r\\n        validator.lastActivity = block.timestamp;\\r\\n        \\r\\n        emit BridgeRequestProcessed(\\r\\n            requestId,\\r\\n            msg.sender,\\r\\n            BridgeStatus.PROCESSING,\\r\\n            l3TransactionHash,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Complete bridge request (L2 to L3)\\r\\n     * @param requestId Request ID\\r\\n     */\\r\\n    function completeL2ToL3Request(uint256 requestId) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\\r\\n        BridgeRequest storage request = bridgeRequests[requestId];\\r\\n        require(request.requestId != 0, \\\"Request does not exist\\\");\\r\\n        require(request.status == BridgeStatus.PROCESSING, \\\"Request not processing\\\");\\r\\n        require(!request.isL3ToL2, \\\"Invalid request direction\\\");\\r\\n        \\r\\n        request.status = BridgeStatus.COMPLETED;\\r\\n        \\r\\n        // Update validator stats\\r\\n        ValidatorInfo storage validator = validators[msg.sender];\\r\\n        validator.successRate = (validator.successRate * (validator.totalProcessed - 1) + 100) / validator.totalProcessed;\\r\\n        \\r\\n        emit BridgeRequestCompleted(\\r\\n            requestId,\\r\\n            request.recipient,\\r\\n            request.amount,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Process bridge request from L3 to L2\\r\\n     * @param sender Sender address on L3\\r\\n     * @param recipient Recipient address on L2\\r\\n     * @param assetType Type of asset\\r\\n     * @param assetAddress Asset contract address\\r\\n     * @param amount Amount to bridge\\r\\n     * @param tokenId Token ID (for NFTs)\\r\\n     * @param l3TransactionHash L3 transaction hash\\r\\n     * @param merkleRoot Merkle root for verification\\r\\n     */\\r\\n    function processL3ToL2Request(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        AssetType assetType,\\r\\n        address assetAddress,\\r\\n        uint256 amount,\\r\\n        uint256 tokenId,\\r\\n        string memory l3TransactionHash,\\r\\n        bytes32 merkleRoot\\r\\n    ) external onlyRole(VALIDATOR_ROLE) whenNotPaused {\\r\\n        require(sender != address(0), \\\"Invalid sender\\\");\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        require(amount >= MIN_BRIDGE_AMOUNT, \\\"Amount too small\\\");\\r\\n        require(amount <= MAX_BRIDGE_AMOUNT, \\\"Amount too large\\\");\\r\\n        require(bytes(l3TransactionHash).length > 0, \\\"Invalid L3 transaction hash\\\");\\r\\n        require(!processedTransactions[keccak256(abi.encodePacked(l3TransactionHash))], \\\"Transaction already processed\\\");\\r\\n        \\r\\n        requestCounter++;\\r\\n        uint256 requestId = requestCounter;\\r\\n        \\r\\n        BridgeRequest storage request = bridgeRequests[requestId];\\r\\n        request.requestId = requestId;\\r\\n        request.sender = sender;\\r\\n        request.recipient = recipient;\\r\\n        request.assetType = assetType;\\r\\n        request.assetAddress = assetAddress;\\r\\n        request.amount = amount;\\r\\n        request.tokenId = tokenId;\\r\\n        request.status = BridgeStatus.PROCESSING;\\r\\n        request.timestamp = block.timestamp;\\r\\n        request.deadline = block.timestamp + BRIDGE_TIMEOUT;\\r\\n        request.l3TransactionHash = l3TransactionHash;\\r\\n        request.merkleRoot = merkleRoot;\\r\\n        request.validator = msg.sender;\\r\\n        request.isL3ToL2 = true;\\r\\n        \\r\\n        userRequests[recipient].push(requestId);\\r\\n        totalRequests++;\\r\\n        totalVolume += amount;\\r\\n        processedTransactions[keccak256(abi.encodePacked(l3TransactionHash))] = true;\\r\\n        \\r\\n        // Transfer assets to recipient\\r\\n        if (assetType == AssetType.TOKEN) {\\r\\n            IERC20(assetAddress).transfer(recipient, amount);\\r\\n        } else if (assetType == AssetType.NFT) {\\r\\n            IERC721(assetAddress).transferFrom(address(this), recipient, tokenId);\\r\\n        } else if (assetType == AssetType.ETH) {\\r\\n            payable(recipient).transfer(amount);\\r\\n        }\\r\\n        \\r\\n        request.status = BridgeStatus.COMPLETED;\\r\\n        \\r\\n        // Update validator stats\\r\\n        ValidatorInfo storage validator = validators[msg.sender];\\r\\n        validator.totalProcessed++;\\r\\n        validator.successRate = (validator.successRate * (validator.totalProcessed - 1) + 100) / validator.totalProcessed;\\r\\n        validator.lastActivity = block.timestamp;\\r\\n        \\r\\n        emit BridgeRequestCreated(\\r\\n            requestId,\\r\\n            sender,\\r\\n            recipient,\\r\\n            assetType,\\r\\n            assetAddress,\\r\\n            amount,\\r\\n            tokenId,\\r\\n            true,\\r\\n            block.timestamp\\r\\n        );\\r\\n        \\r\\n        emit BridgeRequestCompleted(\\r\\n            requestId,\\r\\n            recipient,\\r\\n            amount,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // VALIDATOR FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Register as a validator\\r\\n     */\\r\\n    function registerValidator() external whenNotPaused {\\r\\n        require(!validators[msg.sender].isActive, \\\"Already registered\\\");\\r\\n        \\r\\n        // Transfer stake to contract\\r\\n        IERC20(settlementContract).transferFrom(msg.sender, address(this), validatorStake);\\r\\n        \\r\\n        ValidatorInfo storage validator = validators[msg.sender];\\r\\n        validator.isActive = true;\\r\\n        validator.stake = validatorStake;\\r\\n        validator.lastActivity = block.timestamp;\\r\\n        \\r\\n        _grantRole(VALIDATOR_ROLE, msg.sender);\\r\\n        \\r\\n        emit ValidatorRegistered(msg.sender, validatorStake, block.timestamp);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Unregister as a validator\\r\\n     */\\r\\n    function unregisterValidator() external whenNotPaused {\\r\\n        ValidatorInfo storage validator = validators[msg.sender];\\r\\n        require(validator.isActive, \\\"Not registered\\\");\\r\\n        \\r\\n        validator.isActive = false;\\r\\n        \\r\\n        // Return stake to validator\\r\\n        IERC20(settlementContract).transfer(msg.sender, validator.stake);\\r\\n        \\r\\n        _revokeRole(VALIDATOR_ROLE, msg.sender);\\r\\n        \\r\\n        emit ValidatorStakeUpdated(msg.sender, validator.stake, 0);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // VIEW FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Get bridge request details\\r\\n     * @param requestId Request ID\\r\\n     * @return id Request ID\\r\\n     * @return sender Sender address\\r\\n     * @return recipient Recipient address\\r\\n     * @return assetType Asset type\\r\\n     * @return assetAddress Asset address\\r\\n     * @return amount Amount\\r\\n     * @return tokenId Token ID\\r\\n     * @return status Request status\\r\\n     * @return timestamp Timestamp\\r\\n     * @return deadline Deadline\\r\\n     * @return merkleRoot Merkle root\\r\\n     * @return l3TransactionHash L3 transaction hash\\r\\n     * @return validator Validator address\\r\\n     * @return isL3ToL2 Whether L3 to L2\\r\\n     */\\r\\n    function getBridgeRequest(uint256 requestId) external view returns (\\r\\n        uint256 id,\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        AssetType assetType,\\r\\n        address assetAddress,\\r\\n        uint256 amount,\\r\\n        uint256 tokenId,\\r\\n        BridgeStatus status,\\r\\n        uint256 timestamp,\\r\\n        uint256 deadline,\\r\\n        bytes32 merkleRoot,\\r\\n        string memory l3TransactionHash,\\r\\n        address validator,\\r\\n        bool isL3ToL2\\r\\n    ) {\\r\\n        BridgeRequest storage request = bridgeRequests[requestId];\\r\\n        return (\\r\\n            request.requestId,\\r\\n            request.sender,\\r\\n            request.recipient,\\r\\n            request.assetType,\\r\\n            request.assetAddress,\\r\\n            request.amount,\\r\\n            request.tokenId,\\r\\n            request.status,\\r\\n            request.timestamp,\\r\\n            request.deadline,\\r\\n            request.merkleRoot,\\r\\n            request.l3TransactionHash,\\r\\n            request.validator,\\r\\n            request.isL3ToL2\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get validator information\\r\\n     * @param validator Validator address\\r\\n     * @return isActive Whether active\\r\\n     * @return totalProcessed Total processed\\r\\n     * @return successRate Success rate\\r\\n     * @return lastActivity Last activity\\r\\n     * @return stake Stake amount\\r\\n     */\\r\\n    function getValidatorInfo(address validator) external view returns (\\r\\n        bool isActive,\\r\\n        uint256 totalProcessed,\\r\\n        uint256 successRate,\\r\\n        uint256 lastActivity,\\r\\n        uint256 stake\\r\\n    ) {\\r\\n        ValidatorInfo storage info = validators[validator];\\r\\n        return (\\r\\n            info.isActive,\\r\\n            info.totalProcessed,\\r\\n            info.successRate,\\r\\n            info.lastActivity,\\r\\n            info.stake\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get user requests\\r\\n     * @param user User address\\r\\n     * @return requestIds Array of request IDs\\r\\n     */\\r\\n    function getUserRequests(address user) external view returns (uint256[] memory) {\\r\\n        return userRequests[user];\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // ADMIN FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Update bridge fee\\r\\n     * @param newFee New fee amount\\r\\n     */\\r\\n    function updateBridgeFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        uint256 oldFee = bridgeFee;\\r\\n        bridgeFee = newFee;\\r\\n        emit BridgeFeeUpdated(oldFee, newFee);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Update validator stake requirement\\r\\n     * @param newStake New stake amount\\r\\n     */\\r\\n    function updateValidatorStake(uint256 newStake) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        uint256 oldStake = validatorStake;\\r\\n        validatorStake = newStake;\\r\\n        emit ValidatorStakeUpdated(oldStake, newStake);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Update settlement contract\\r\\n     * @param newSettlement New settlement contract address\\r\\n     */\\r\\n    function updateSettlementContract(address newSettlement) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        require(newSettlement != address(0), \\\"Invalid settlement contract\\\");\\r\\n        settlementContract = newSettlement;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Pause bridge\\r\\n     */\\r\\n    function pause() external onlyRole(EMERGENCY_ROLE) {\\r\\n        _pause();\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Unpause bridge\\r\\n     */\\r\\n    function unpause() external onlyRole(EMERGENCY_ROLE) {\\r\\n        _unpause();\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency withdraw tokens\\r\\n     * @param token Token address\\r\\n     * @param amount Amount to withdraw\\r\\n     */\\r\\n    function emergencyWithdrawTokens(address token, uint256 amount) external onlyRole(EMERGENCY_ROLE) {\\r\\n        IERC20(token).transfer(msg.sender, amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency withdraw ETH\\r\\n     */\\r\\n    function emergencyWithdrawETH() external onlyRole(EMERGENCY_ROLE) {\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // RECEIVE FUNCTION\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Receive function to accept ETH\\r\\n     */\\r\\n    receive() external payable {}\\r\\n} \",\"keccak256\":\"0xfc1b07ca45f32e7528898f390d9a4fb6d46a3003c9a6ba7f5ca0a6c9b538a8b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"},{"astId":1434,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":1324,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"_paused","offset":0,"slot":"2","type":"t_bool"},{"astId":1639,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"settlementContract","offset":1,"slot":"2","type":"t_address"},{"astId":1641,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"requestCounter","offset":0,"slot":"3","type":"t_uint256"},{"astId":1643,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"totalRequests","offset":0,"slot":"4","type":"t_uint256"},{"astId":1645,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"totalVolume","offset":0,"slot":"5","type":"t_uint256"},{"astId":1652,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"bridgeFee","offset":0,"slot":"6","type":"t_uint256"},{"astId":1659,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"validatorStake","offset":0,"slot":"7","type":"t_uint256"},{"astId":1664,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"bridgeRequests","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_struct(BridgeRequest)1615_storage)"},{"astId":1669,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"userRequests","offset":0,"slot":"9","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":1674,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"validators","offset":0,"slot":"10","type":"t_mapping(t_address,t_struct(ValidatorInfo)1637_storage)"},{"astId":1678,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"processedTransactions","offset":0,"slot":"11","type":"t_mapping(t_bytes32,t_bool)"},{"astId":1683,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"bridgeConfigs","offset":0,"slot":"12","type":"t_mapping(t_address,t_struct(BridgeConfig)1626_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(AssetType)1584":{"encoding":"inplace","label":"enum GameDinL3Bridge.AssetType","numberOfBytes":"1"},"t_enum(BridgeStatus)1580":{"encoding":"inplace","label":"enum GameDinL3Bridge.BridgeStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(BridgeConfig)1626_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct GameDinL3Bridge.BridgeConfig)","numberOfBytes":"32","value":"t_struct(BridgeConfig)1626_storage"},"t_mapping(t_address,t_struct(ValidatorInfo)1637_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct GameDinL3Bridge.ValidatorInfo)","numberOfBytes":"32","value":"t_struct(ValidatorInfo)1637_storage"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_mapping(t_uint256,t_struct(BridgeRequest)1615_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GameDinL3Bridge.BridgeRequest)","numberOfBytes":"32","value":"t_struct(BridgeRequest)1615_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(BridgeConfig)1626_storage":{"encoding":"inplace","label":"struct GameDinL3Bridge.BridgeConfig","members":[{"astId":1617,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"isActive","offset":0,"slot":"0","type":"t_bool"},{"astId":1619,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"minConfirmations","offset":0,"slot":"1","type":"t_uint256"},{"astId":1621,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"maxAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":1623,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"fee","offset":0,"slot":"3","type":"t_uint256"},{"astId":1625,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"timeout","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(BridgeRequest)1615_storage":{"encoding":"inplace","label":"struct GameDinL3Bridge.BridgeRequest","members":[{"astId":1586,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"requestId","offset":0,"slot":"0","type":"t_uint256"},{"astId":1588,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"sender","offset":0,"slot":"1","type":"t_address"},{"astId":1590,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"recipient","offset":0,"slot":"2","type":"t_address"},{"astId":1593,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"assetType","offset":20,"slot":"2","type":"t_enum(AssetType)1584"},{"astId":1595,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"assetAddress","offset":0,"slot":"3","type":"t_address"},{"astId":1597,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"amount","offset":0,"slot":"4","type":"t_uint256"},{"astId":1599,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"tokenId","offset":0,"slot":"5","type":"t_uint256"},{"astId":1602,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"status","offset":0,"slot":"6","type":"t_enum(BridgeStatus)1580"},{"astId":1604,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"timestamp","offset":0,"slot":"7","type":"t_uint256"},{"astId":1606,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"deadline","offset":0,"slot":"8","type":"t_uint256"},{"astId":1608,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"merkleRoot","offset":0,"slot":"9","type":"t_bytes32"},{"astId":1610,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"l3TransactionHash","offset":0,"slot":"10","type":"t_string_storage"},{"astId":1612,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"validator","offset":0,"slot":"11","type":"t_address"},{"astId":1614,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"isL3ToL2","offset":20,"slot":"11","type":"t_bool"}],"numberOfBytes":"384"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(ValidatorInfo)1637_storage":{"encoding":"inplace","label":"struct GameDinL3Bridge.ValidatorInfo","members":[{"astId":1628,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"isActive","offset":0,"slot":"0","type":"t_bool"},{"astId":1630,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"totalProcessed","offset":0,"slot":"1","type":"t_uint256"},{"astId":1632,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"successRate","offset":0,"slot":"2","type":"t_uint256"},{"astId":1634,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"lastActivity","offset":0,"slot":"3","type":"t_uint256"},{"astId":1636,"contract":"contracts/GameDinL3Bridge.sol:GameDinL3Bridge","label":"stake","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GameDinSettlement.sol":{"GameDinSettlement":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"bridgeAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"},{"indexed":false,"internalType":"uint256","name":"minConfirmations","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BridgeConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"DisputeFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"settlementId","type":"uint256"},{"indexed":true,"internalType":"address","name":"resolver","type":"address"},{"indexed":false,"internalType":"string","name":"resolution","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DisputeResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"settlementId","type":"uint256"},{"indexed":true,"internalType":"address","name":"confirmer","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SettlementConfirmed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"settlementId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"l3TransactionHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SettlementCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"settlementId","type":"uint256"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"enum GameDinSettlement.DisputeReason","name":"reason","type":"uint8"},{"indexed":false,"internalType":"string","name":"details","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SettlementDisputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"SettlementFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"BRIDGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISPUTE_RESOLVER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISPUTE_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SETTLEMENT_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SETTLEMENT_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SETTLEMENT_TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bridgeConfigs","outputs":[{"internalType":"address","name":"bridgeAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"minConfirmations","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"bridgeAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"minConfirmations","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"configureBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"}],"name":"confirmSettlement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"createSettlement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disputeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"disputes","outputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"},{"internalType":"address","name":"initiator","type":"address"},{"internalType":"enum GameDinSettlement.DisputeReason","name":"reason","type":"uint8"},{"internalType":"string","name":"details","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"string","name":"resolution","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"bridgeAddress","type":"address"}],"name":"getBridgeConfig","outputs":[{"internalType":"address","name":"bridge","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"minConfirmations","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"}],"name":"getDispute","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"initiator","type":"address"},{"internalType":"enum GameDinSettlement.DisputeReason","name":"reason","type":"uint8"},{"internalType":"string","name":"details","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"resolved","type":"bool"},{"internalType":"address","name":"resolver","type":"address"},{"internalType":"string","name":"resolution","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"}],"name":"getSettlement","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum GameDinSettlement.SettlementStatus","name":"status","type":"uint8"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"disputeDeadline","type":"uint256"},{"internalType":"address","name":"disputeInitiator","type":"address"},{"internalType":"enum GameDinSettlement.DisputeReason","name":"disputeReason","type":"uint8"},{"internalType":"string","name":"disputeDetails","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserSettlements","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"},{"internalType":"enum GameDinSettlement.DisputeReason","name":"reason","type":"uint8"},{"internalType":"string","name":"details","type":"string"}],"name":"initiateDispute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"bridgeAddress","type":"address"}],"name":"processBridgeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processedL3Transactions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"},{"internalType":"string","name":"resolution","type":"string"},{"internalType":"bool","name":"approveSettlement","type":"bool"}],"name":"resolveDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"settlementCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"settlementFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"settlements","outputs":[{"internalType":"uint256","name":"settlementId","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum GameDinSettlement.SettlementStatus","name":"status","type":"uint8"},{"internalType":"string","name":"l3TransactionHash","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"disputeDeadline","type":"uint256"},{"internalType":"address","name":"disputeInitiator","type":"address"},{"internalType":"enum GameDinSettlement.DisputeReason","name":"disputeReason","type":"uint8"},{"internalType":"string","name":"disputeDetails","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDisputes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSettlements","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"updateDisputeFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"updateSettlementFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userSettlements","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"L2 settlement layer for GameDin L3 gaming blockchain Handles cross-chain asset transfers, dispute resolution, and final settlement","errors":{"AccessControlBadConfirmation()":[{"details":"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."}],"AccessControlUnauthorizedAccount(address,bytes32)":[{"details":"The `account` is missing a role."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"configureBridge(address,bool,uint256,uint256,uint256)":{"details":"Configure a bridge","params":{"bridgeAddress":"Bridge contract address","fee":"Bridge fee","isActive":"Whether bridge is active","maxAmount":"Maximum amount per transaction","minConfirmations":"Minimum confirmations required"}},"confirmSettlement(uint256)":{"details":"Confirm a settlement","params":{"settlementId":"Settlement ID"}},"createSettlement(address,uint256,string,bytes32)":{"details":"Create a new settlement","params":{"amount":"Settlement amount","l3TransactionHash":"L3 transaction hash","merkleRoot":"Merkle root for verification","to":"Recipient address"}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"emergencyWithdrawETH()":{"details":"Emergency withdraw ETH"},"emergencyWithdrawTokens(address,uint256)":{"details":"Emergency withdraw tokens","params":{"amount":"Amount to withdraw","token":"Token address"}},"getBridgeConfig(address)":{"details":"Get bridge configuration","params":{"bridgeAddress":"Bridge address"},"returns":{"bridge":"Bridge address","fee":"Bridge fee","isActive":"Whether active","maxAmount":"Maximum amount","minConfirmations":"Minimum confirmations"}},"getDispute(uint256)":{"details":"Get dispute details","params":{"settlementId":"Settlement ID"},"returns":{"details":"Dispute details","id":"Settlement ID","initiator":"Dispute initiator","reason":"Dispute reason","resolution":"Resolution details","resolved":"Whether resolved","resolver":"Resolver address","timestamp":"Timestamp"}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getSettlement(uint256)":{"details":"Get settlement details","params":{"settlementId":"Settlement ID"},"returns":{"amount":"Amount","disputeDeadline":"Dispute deadline","disputeDetails":"Dispute details","disputeInitiator":"Dispute initiator","disputeReason":"Dispute reason","from":"Sender address","id":"Settlement ID","l3TransactionHash":"L3 transaction hash","merkleRoot":"Merkle root","status":"Settlement status","timestamp":"Timestamp","to":"Recipient address"}},"getUserSettlements(address)":{"details":"Get user settlements","params":{"user":"User address"},"returns":{"_0":"settlementIds Array of settlement IDs"}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initiateDispute(uint256,uint8,string)":{"details":"Initiate a dispute for a settlement","params":{"details":"Dispute details","reason":"Dispute reason","settlementId":"Settlement ID"}},"name()":{"details":"Returns the name of the token."},"pause()":{"details":"Pause contract"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"processBridgeTransaction(address,address,uint256,address)":{"details":"Process bridge transaction","params":{"amount":"Amount to transfer","bridgeAddress":"Bridge address","from":"Source address","to":"Destination address"}},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"resolveDispute(uint256,string,bool)":{"details":"Resolve a dispute","params":{"approveSettlement":"Whether to approve the settlement","resolution":"Resolution details","settlementId":"Settlement ID"}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unpause()":{"details":"Unpause contract"},"updateDisputeFee(uint256)":{"details":"Update dispute fee","params":{"newFee":"New fee amount"}},"updateSettlementFee(uint256)":{"details":"Update settlement fee","params":{"newFee":"New fee amount"}}},"title":"GameDin Settlement Contract","version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":1139,"id":null,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":1621,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9132":{"entryPoint":1171,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9133":{"entryPoint":1300,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9134":{"entryPoint":1463,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_9136":{"entryPoint":1779,"id":256,"parameterSlots":1,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":1937,"id":1377,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x458 JUMPI PUSH3 0x3E1D SWAP1 PUSH1 0x1F NOT SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1F CODESIZE DUP6 SWAP1 SUB DUP2 DUP2 ADD DUP6 AND DUP5 ADD SWAP1 DUP4 DUP3 GT DUP6 DUP4 LT OR PUSH3 0x45D JUMPI DUP1 DUP6 SWAP2 PUSH1 0x40 SWAP9 DUP10 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x458 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 SWAP1 DUP6 DUP2 SUB PUSH3 0x458 JUMPI PUSH1 0x20 DUP1 SWAP6 ADD MLOAD SWAP4 PUSH3 0x6E PUSH3 0x473 JUMP JUMPDEST SWAP1 PUSH1 0x18 DUP3 MSTORE PUSH32 0x47616D6544696E20536574746C656D656E7420546F6B656E0000000000000000 DUP8 DUP4 ADD MSTORE PUSH3 0xA2 PUSH3 0x473 JUMP JUMPDEST SWAP4 PUSH1 0x4 SWAP6 DUP7 DUP7 MSTORE PUSH4 0x47444953 PUSH1 0xE0 SHL DUP10 DUP8 ADD MSTORE DUP4 MLOAD SWAP2 DUP4 DUP4 GT PUSH3 0x34F JUMPI PUSH1 0x3 SWAP3 DUP4 SLOAD SWAP6 PUSH1 0x1 SWAP7 DUP8 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x44D JUMPI JUMPDEST DUP14 DUP3 LT EQ PUSH3 0x438 JUMPI SWAP1 DUP13 DUP3 DUP7 DUP6 SWAP5 GT PUSH3 0x3DF JUMPI JUMPDEST POP POP DUP13 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x370 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x364 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP7 MLOAD SWAP4 DUP5 GT PUSH3 0x34F JUMPI DUP8 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x344 JUMPI JUMPDEST DUP12 DUP3 LT EQ PUSH3 0x32F JUMPI DUP3 DUP2 GT PUSH3 0x2E4 JUMPI JUMPDEST POP DUP10 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x272 JUMPI POP SWAP1 DUP3 SWAP2 PUSH3 0x1C3 SWAP7 PUSH1 0x0 SWAP4 PUSH3 0x266 JUMPI JUMPDEST POP POP DUP3 DUP5 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP5 SSTORE JUMPDEST PUSH1 0x7 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0xB SSTORE PUSH7 0x2386F26FC10000 PUSH1 0xC SSTORE PUSH3 0x198 DUP2 PUSH3 0x493 JUMP JUMPDEST POP PUSH3 0x1A4 DUP2 PUSH3 0x514 JUMP JUMPDEST POP PUSH3 0x1B0 DUP2 PUSH3 0x5B7 JUMP JUMPDEST POP PUSH3 0x1BC DUP2 PUSH3 0x655 JUMP JUMPDEST POP PUSH3 0x6F3 JUMP JUMPDEST POP DUP4 ISZERO PUSH3 0x24F JUMPI PUSH3 0x1D5 PUSH3 0x791 JUMP JUMPDEST PUSH3 0x1DF PUSH3 0x791 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x23A JUMPI POP PUSH1 0x2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP4 MSTORE DUP5 DUP2 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG3 MLOAD PUSH2 0x364C SWAP1 DUP2 PUSH3 0x7B1 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 DUP7 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0x162 JUMP JUMPDEST DUP4 SWAP5 SWAP6 SWAP7 SWAP4 AND SWAP3 DUP8 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x2CF JUMPI POP POP SWAP2 DUP6 SWAP4 SWAP2 DUP8 SWAP7 PUSH3 0x1C3 SWAP10 SWAP9 SWAP7 SWAP5 LT PUSH3 0x2B4 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH3 0x174 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x2A5 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP8 SSTORE SWAP6 DUP9 ADD SWAP6 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x285 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP9 LT PUSH3 0x325 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x318 JUMPI POP POP PUSH3 0x143 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x308 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x131 JUMP JUMPDEST PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x105 JUMP JUMPDEST SWAP1 DUP14 SWAP2 DUP6 DUP11 SWAP6 AND DUP9 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x3BD JUMPI POP POP DUP5 GT PUSH3 0x3A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0x117 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x396 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP6 SWAP7 DUP3 SWAP2 SWAP6 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 DUP16 SWAP2 DUP12 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH3 0x384 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP7 PUSH1 0x0 MSTORE DUP6 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP7 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP7 LT PUSH3 0x42E JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x41E JUMPI POP DUP15 SWAP2 POP PUSH3 0xED JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x40C JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x22 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xD7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x45D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x54CDD369E4E8A8515E52CA72EC816C2101831AD1F18BF44102ED171459C9B4F8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x510 JUMPI DUP2 DUP1 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DFD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x44017833178CB959064128715F4ACE9A64BBFC45712D4670FCACE3E0C4A1693B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x300F9AE985DC711960F7A4D1DD013F9C19ECF40BFF149522AB7523B2187A3846 SWAP1 PUSH1 0xFF AND PUSH3 0x5B2 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DFD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x866532DF3C7B8A8304A854A94071EFE99D9F2C853D9869138B5FBC8A8598B937 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x52BA824BFABC2BCFCDF7F0EDBB486EBB05E1836C90E78047EFEB949990F72E5F SWAP1 PUSH1 0xFF AND PUSH3 0x5B2 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DFD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC05ECB62B3DA283F41A58BFABB0641C07F50E632BC46342D8A4C0CC10B5006FF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E SWAP1 PUSH1 0xFF AND PUSH3 0x5B2 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DFD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x7ACA5D7F7C0D5C6C775E2A7E40239A4D6963361B3DF3B07DF46432786460EB57 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND PUSH3 0x5B2 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DFD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH3 0x79E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B66 JUMPI POP DUP1 PUSH4 0x68D04D0 EQ PUSH2 0x2A09 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2945 JUMPI DUP1 PUSH4 0x8DF7DC8 EQ PUSH2 0x289F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27B2 JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x2759 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2587 JUMPI DUP1 PUSH4 0x267F2098 EQ PUSH2 0x20E8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x208B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2051 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FC7 JUMPI DUP1 PUSH4 0x3C0A6E38 EQ PUSH2 0x1F8B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1ECD JUMPI DUP1 PUSH4 0x427AC0CA EQ PUSH2 0x114C JUMPI DUP1 PUSH4 0x43B255AC EQ PUSH2 0x1D5A JUMPI DUP1 PUSH4 0x4C582380 EQ PUSH2 0x1C9A JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x1C2C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1BEB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x76E8A88B EQ PUSH2 0x1B05 JUMPI DUP1 PUSH4 0x7D1D7FB8 EQ PUSH2 0x1AC9 JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0x1A71 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x84B971A5 EQ PUSH2 0x199F JUMPI DUP1 PUSH4 0x88DAE6A8 EQ PUSH2 0x1963 JUMPI DUP1 PUSH4 0x899C45DA EQ PUSH2 0x18F1 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0x1810 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0x933367A8 EQ PUSH2 0x1754 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1636 JUMPI DUP1 PUSH4 0x9DE2E9D7 EQ PUSH2 0x15C4 JUMPI DUP1 PUSH4 0x9E924EB5 EQ PUSH2 0x14BA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1480 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1431 JUMPI DUP1 PUSH4 0xB5BFDDEA EQ PUSH2 0x13D8 JUMPI DUP1 PUSH4 0xB9CE896B EQ PUSH2 0x139C JUMPI DUP1 PUSH4 0xBA9CF01D EQ PUSH2 0x1343 JUMPI DUP1 PUSH4 0xBFCB7040 EQ PUSH2 0x1264 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x120B JUMPI DUP1 PUSH4 0xC4FC45A8 EQ PUSH2 0x114C JUMPI DUP1 PUSH4 0xC5E4CCC4 EQ PUSH2 0x1110 JUMPI DUP1 PUSH4 0xD0B1149C EQ PUSH2 0xB4A JUMPI DUP1 PUSH4 0xD1D50FE6 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xE3A96CBD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF585DC57 EQ PUSH2 0x2A4 JUMPI PUSH4 0xFC1E29B6 EQ PUSH2 0x250 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH1 0x3 DUP5 ADD SLOAD SWAP1 PUSH1 0x4 DUP6 ADD SLOAD SWAP1 PUSH2 0x34E PUSH1 0x5 PUSH2 0x347 PUSH1 0x2 DUP10 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP8 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0xFF DUP6 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND SWAP3 AND SWAP1 DUP10 PUSH2 0x2F6D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x3C1 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B PUSH1 0x4 CALLDATALOAD PUSH2 0x444 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x45F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x316F JUMP JUMPDEST PUSH2 0x3241 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x49B PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x4BE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP3 PUSH2 0x4C7 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ PUSH2 0xB20 JUMPI PUSH1 0x2 PUSH1 0x7 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0xA64 JUMPI PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x24 CALLDATALOAD GT PUSH2 0xA06 JUMPI DUP4 MLOAD ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x546 PUSH1 0x20 DUP3 DUP9 MLOAD PUSH2 0x539 DUP2 DUP8 DUP6 DUP14 ADD PUSH2 0x2C68 JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x2D21 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x94A JUMPI POP PUSH2 0x56A PUSH1 0x8 SLOAD PUSH2 0x3435 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x8 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE DUP5 MLOAD SWAP1 DUP2 GT PUSH2 0x7D3 JUMPI PUSH2 0x620 PUSH1 0x6 DUP4 ADD SLOAD PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x903 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x83C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x831 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP3 ADD SSTORE JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH3 0x3F480 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0x802 JUMPI PUSH1 0x8 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x6D4 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2FDA JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x723 PUSH1 0x20 DUP3 DUP8 MLOAD PUSH2 0x539 DUP2 DUP8 DUP6 DUP13 ADD PUSH2 0x2C68 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x767 PUSH1 0x9 SLOAD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH32 0x4C38254F7B8B72B1565C14AD4825E3BE334F5CDF32B2BDB7560016407004F051 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x7BD PUSH1 0x40 MLOAD SWAP6 PUSH1 0x24 CALLDATALOAD DUP8 MSTORE PUSH1 0x60 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP4 TIMESTAMP PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 DUP1 CALLER SWAP5 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x7 SSTORE STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP7 PUSH2 0x640 JUMP JUMPDEST SWAP2 POP PUSH1 0x6 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP5 LT PUSH2 0x8EB JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 AND LT PUSH2 0x8B4 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x674 JUMP JUMPDEST DUP8 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x8A5 JUMP JUMPDEST DUP8 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x84E JUMP JUMPDEST PUSH1 0x6 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x943 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x937 JUMPI POP POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x921 JUMP JUMPDEST POP DUP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x4C33207472616E73616374696F6E20616C72656164792070726F636573736564 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x496E76616C6964204C33207472616E73616374696F6E20686173680000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x416D6F756E742065786365656473206D6178696D756D00000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x29F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0xBA4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP1 PUSH2 0xBAD PUSH2 0x3462 JUMP JUMPDEST PUSH1 0xC SLOAD CALLVALUE LT PUSH2 0x10B2 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0xBD3 DUP3 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xBEF PUSH1 0xFF DUP3 AND PUSH2 0xBE9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST ISZERO PUSH2 0x34FD JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x8 DUP6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3562 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1070 JUMPI JUMPDEST ISZERO PUSH2 0x1012 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xA PUSH1 0x9 DUP4 ADD SWAP3 PUSH2 0xC8A DUP9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP6 CALLER DUP8 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x35C7 JUMP JUMPDEST ADD SWAP1 DUP5 MLOAD SWAP2 DUP2 DUP4 GT PUSH2 0x7D3 JUMPI PUSH2 0xCA0 DUP2 SLOAD PUSH2 0x2CCE JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xFCF JUMPI JUMPDEST POP DUP1 DUP7 DUP6 DUP3 GT PUSH1 0x1 EQ PUSH2 0xF31 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xF26 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0xCFD PUSH1 0xA SLOAD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0xA SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP7 DUP5 SSTORE PUSH2 0xD29 DUP9 PUSH1 0x1 SWAP3 DUP4 DUP8 ADD SWAP1 CALLER SWAP1 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x35C7 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SWAP3 DUP7 MLOAD SWAP3 DUP4 GT PUSH2 0x7D3 JUMPI PUSH2 0xD41 DUP5 SLOAD PUSH2 0x2CCE JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0xEE0 JUMPI JUMPDEST POP DUP6 SWAP1 DUP4 GT PUSH1 0x1 EQ PUSH2 0xE18 JUMPI SWAP3 DUP3 PUSH32 0xC5A6BD89289814765F8743687EA51D3BB3DEB2C8F1CFF09B1A479FB94166652C SWAP8 SWAP6 SWAP3 DUP2 PUSH2 0xDDE SWAP9 SWAP6 PUSH1 0x60 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xDED JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP7 PUSH2 0xDCF DUP2 PUSH2 0x2E27 JUMP JUMPDEST DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 STOP JUMPDEST DUP10 ADD MLOAD SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD8C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 SWAP3 SWAP4 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xECB JUMPI POP SWAP3 PUSH1 0x60 SWAP6 SWAP3 PUSH2 0xDDE SWAP9 SWAP6 SWAP3 DUP3 PUSH32 0xC5A6BD89289814765F8743687EA51D3BB3DEB2C8F1CFF09B1A479FB94166652C SWAP12 SWAP10 SWAP7 LT PUSH2 0xE94 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xDBC JUMP JUMPDEST DUP9 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0xE88 JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0xE4A JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP3 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH2 0xF1D JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xF11 JUMPI POP POP PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP11 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 JUMPDEST DUP10 DUP12 DUP4 DUP4 LT PUSH2 0xFBA JUMPI POP POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0xF83 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xCF2 JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH2 0xF77 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xF5E JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP6 LT PUSH2 0x1009 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xFFD JUMPI POP PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFF0 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206469737075746500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742064697370757465206665650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x1199 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x386 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND SWAP2 AND DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP6 ADD SWAP9 AND DUP5 MSTORE ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x12B1 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x132F JUMPI DUP7 DUP7 PUSH2 0x12EF DUP3 DUP9 SUB DUP4 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1318 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1309 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x12D9 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x300F9AE985DC711960F7A4D1DD013F9C19ECF40BFF149522AB7523B2187A3846 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x52BA824BFABC2BCFCDF7F0EDBB486EBB05E1836C90E78047EFEB949990F72E5F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1475 PUSH2 0x146B PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14F4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x14FC PUSH2 0x3462 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1595 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1519 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD PUSH2 0x1552 PUSH1 0xFF DUP3 AND PUSH2 0xBE9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x1562 PUSH1 0x8 DUP7 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3562 JUMP JUMPDEST AND OR SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x3 DUP3 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP2 PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0x1A87470A87E2FFF176D778A6E7F91D53B96B4CBB4D856F40ABC582586D51850A PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH32 0xE8FC23E21608AA8E92FAEE11AF5686B6AA7531796F68F2F943BB0D893C4312C9 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x1621 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 DUP1 PUSH1 0xC SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD PUSH2 0x1676 DUP2 PUSH2 0x2CCE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x170F JUMPI POP PUSH1 0x1 EQ PUSH2 0x16B4 JUMPI JUMPDEST PUSH2 0x386 DUP5 PUSH2 0x16A0 DUP2 DUP7 SUB DUP3 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x16F7 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x16A0 DUP3 PUSH2 0x1690 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16DF JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x16A0 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1690 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x17CE PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x0 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x44 PUSH2 0x1862 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x186A PUSH2 0x307D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18B2 JUMPI STOP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18DD JUMPI JUMPDEST DUP2 PUSH2 0x18CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2D21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29F JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x29F JUMPI STOP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH32 0x9351BE7C0F6091E3A280467D38E8ECFD5A4529968CDFAEE0E0DBCCEAEE6765C7 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x194E PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 DUP1 PUSH1 0xB SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1A12 PUSH2 0x307D JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1AA8 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0x1AC0 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x18E5 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B3C PUSH2 0x2C22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1B78 SWAP2 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1BD2 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH2 0x1C82 PUSH1 0x2 DUP6 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH2 0x34E PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD PUSH2 0x2D62 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 DUP4 PUSH1 0x2 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x7 DUP2 ADD SLOAD SWAP2 PUSH1 0x8 DUP3 ADD SLOAD SWAP4 PUSH1 0x9 DUP4 ADD SLOAD SWAP7 PUSH2 0x1D43 PUSH1 0xA PUSH2 0x1D3C PUSH1 0x6 DUP8 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP6 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 PUSH1 0xFF DUP12 PUSH1 0xA0 SHR AND SWAP11 AND SWAP9 DUP14 PUSH2 0x2E60 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1D91 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD SWAP5 PUSH2 0x1DC6 PUSH2 0x3021 JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x1E6F JUMPI PUSH32 0x762B38F99548D8913199A63AE95B09259E584B25129CA98EE5317F088D487BF5 SWAP4 PUSH1 0x80 SWAP4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE DUP3 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP11 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFF0000000000000000000000000000000000000000 DUP11 PUSH1 0xA0 SHL AND SWAP3 AND OR OR DUP2 SSTORE DUP4 PUSH1 0x1 DUP3 ADD SSTORE DUP5 PUSH1 0x2 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420627269646765206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1F04 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1F61 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x5 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1FFE PUSH2 0x2C45 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x2027 JUMPI PUSH2 0x1B SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B PUSH1 0x4 CALLDATALOAD PUSH2 0x20C8 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x20E3 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x316F JUMP JUMPDEST PUSH2 0x3195 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x213B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x29F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC05ECB62B3DA283F41A58BFABB0641C07F50E632BC46342D8A4C0CC10B5006FF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP5 SWAP1 PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP PUSH2 0x21B1 PUSH2 0x3462 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xD DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x21D4 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SWAP3 PUSH1 0x2 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x21E9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST SUB PUSH2 0x24F2 JUMPI PUSH1 0x4 DUP4 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH1 0xFF DUP6 AND PUSH2 0x2494 JUMPI SWAP1 PUSH1 0x5 SWAP2 PUSH1 0x1 DUP1 SWAP7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 CALLER PUSH1 0x8 SHL AND SWAP2 AND OR OR SWAP1 SSTORE ADD DUP6 MLOAD SWAP8 DUP9 GT PUSH2 0x7D3 JUMPI PUSH2 0x225C DUP2 SLOAD PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x244B JUMPI JUMPDEST POP DUP9 PUSH1 0x1F DUP10 GT PUSH1 0x1 EQ PUSH2 0x238C JUMPI SWAP8 DUP1 PUSH32 0xAF22C8B9970A1E934469D4910BA635081D805CF60A06F96C00D501BD87379663 SWAP9 SWAP10 PUSH1 0x0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP8 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST ISZERO PUSH2 0x2351 JUMPI DUP3 PUSH1 0x3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH2 0x232E SWAP6 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP2 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP4 TIMESTAMP SWAP1 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 STOP JUMPDEST POP POP PUSH1 0x4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x232E JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x229F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP10 AND SWAP1 DUP3 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x2437 JUMPI POP POP SWAP2 DUP11 SWAP2 PUSH32 0xAF22C8B9970A1E934469D4910BA635081D805CF60A06F96C00D501BD87379663 SWAP11 SWAP12 DUP9 SWAP5 LT PUSH2 0x2400 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x22CF JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x23F4 JUMP JUMPDEST DUP11 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP9 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23BC JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP11 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP12 LT PUSH2 0x248A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x247E JUMPI POP POP PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x2470 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469737075746520616C7265616479207265736F6C7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E74206E6F74206469737075746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x260B PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2613 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 LT PUSH2 0x267E JUMPI JUMPDEST POP PUSH2 0x1475 SWAP4 POP PUSH2 0x32E4 JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0x271A JUMPI DUP1 ISZERO PUSH2 0x26E9 JUMPI CALLER ISZERO PUSH2 0x26B8 JUMPI PUSH2 0x1475 SWAP5 DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP5 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x2825 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x26E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x26B8 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 DUP4 PUSH1 0x2 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH2 0x2927 PUSH1 0x6 DUP7 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP7 ADD SLOAD SWAP3 PUSH1 0x8 DUP8 ADD SLOAD SWAP5 PUSH2 0x1D43 PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD PUSH2 0x2D62 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD PUSH2 0x2985 DUP2 PUSH2 0x2CCE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x170F JUMPI POP PUSH1 0x1 EQ PUSH2 0x29AE JUMPI PUSH2 0x386 DUP5 PUSH2 0x16A0 DUP2 DUP7 SUB DUP3 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x29F1 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x16A0 DUP3 PUSH2 0x1690 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x29D9 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x2A40 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2A48 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x2A75 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x2A7D PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x2 ADD SLOAD DUP3 GT PUSH2 0x2AAA JUMPI PUSH2 0x1B SWAP3 PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206578636565647320627269646765206C696D69740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427269646765206E6F7420616374697665000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x29F JUMPI DUP2 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x2BF8 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x29F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x29F JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2C7B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C6B JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2CC7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x2C68 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D17 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CE8 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2CDD JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2D76 DUP5 PUSH2 0x2CCE JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2DE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2DA2 JUMPI JUMPDEST POP POP PUSH2 0x2DA0 SWAP3 POP SUB DUP4 PUSH2 0x2D21 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2DCD JUMPI POP POP PUSH2 0x2DA0 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2D92 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DA0 SWAP6 POP PUSH1 0x20 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2E31 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP9 SWAP5 SWAP1 SWAP4 PUSH2 0x2EF5 SWAP13 SWAP11 SWAP7 SWAP3 PUSH2 0x2EC5 SWAP6 SWAP13 SWAP10 SWAP13 SWAP9 SWAP5 SWAP9 DUP12 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 DUP1 SWAP3 AND PUSH1 0x20 DUP14 ADD MSTORE AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x2EAF DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0xC0 DUP10 ADD MSTORE DUP8 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP7 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE AND PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2EE1 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2C8B JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2F4B PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x2D21 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x29F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP5 SWAP7 SWAP3 SWAP4 PUSH2 0x2EF5 SWAP9 SWAP7 SWAP3 SWAP5 PUSH2 0x2FBA SWAP3 DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x100 DUP1 PUSH1 0x60 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2C8B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2FF2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x866532DF3C7B8A8304A854A94071EFE99D9F2C853D9869138B5FBC8A8598B937 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x52BA824BFABC2BCFCDF7F0EDBB486EBB05E1836C90E78047EFEB949990F72E5F SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7ACA5D7F7C0D5C6C775E2A7E40239A4D6963361B3DF3B07DF46432786460EB57 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x54CDD369E4E8A8515E52CA72EC816C2101831AD1F18BF44102ED171459C9B4F8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x44017833178CB959064128715F4ACE9A64BBFC45712D4670FCACE3E0C4A1693B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x300F9AE985DC711960F7A4D1DD013F9C19ECF40BFF149522AB7523B2187A3846 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x323C JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x323C JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x3404 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x33D3 JUMPI PUSH2 0x3314 PUSH2 0x3462 JUMP JUMPDEST PUSH2 0x331C PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x337B JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x346E JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x349F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3504 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E74206E6F742070656E64696E6700000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3569 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973707574652077696E646F77206578706972656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x35D1 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH21 0xFF0000000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x21E4B6059413D6589CE4E9565FB731C8314346703F3FD30F984144DC69983 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"564:18415:14:-:0;;;;;;-1:-1:-1;;564:18415:14;-1:-1:-1;;;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:18415:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;564:18415:14;;;;;;;;;;;;1648:13:3;564:18415:14;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;-1:-1:-1;;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:40;564:18415;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;2061:21:10;564:18415:14;3065:14;;564:18415;3130:13;;564:18415;5069:44;;;:::i;:::-;;5124:41;;;:::i;:::-;;5176:37;;;:::i;:::-;;5224:47;;;:::i;:::-;;5282:40;:::i;:::-;;7509:21:3;;7505:91;;1315:72:9;;:::i;:::-;;;:::i;:::-;6214:21:3;564:18415:14;;;;;;;;;;-1:-1:-1;6214:21:3;564:18415:14;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7064:25:3;;;564:18415:14;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;7505:91:3;564:18415:14;;-1:-1:-1;564:18415:14;;7553:32:3;;;;;;;;564:18415:14;7553:32:3;564:18415:14;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;5282:40;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;-1:-1:-1;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;-1:-1:-1;564:18415:14;;;;;-1:-1:-1;564:18415:14;;;;;;;;;-1:-1:-1;;;;;564:18415:14;;;;;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;735:10:8;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;564:18415:14;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;564:18415:14;-1:-1:-1;564:18415:14;;;;;;;;;;-1:-1:-1;;564:18415:14;900:28;;564:18415;;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;564:18415:14;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;564:18415:14;-1:-1:-1;564:18415:14;;;;;;;;;;-1:-1:-1;;564:18415:14;973:24;;564:18415;;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;564:18415:14;6424:11:0;:::o;6179:316::-;-1:-1:-1;;;;;564:18415:14;-1:-1:-1;564:18415:14;;;;;;;;;;-1:-1:-1;;564:18415:14;1052:34;;564:18415;;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;564:18415:14;6424:11:0;:::o;6179:316::-;-1:-1:-1;;;;;564:18415:14;-1:-1:-1;564:18415:14;;;;;;;;;;-1:-1:-1;;564:18415:14;1134:27;;564:18415;;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:8;6370:40:0;;;564:18415:14;6424:11:0;:::o;1878:128:9:-;564:18415:14;1796:7:9;564:18415:14;;1939:61:9;;1878:128::o;1939:61::-;564:18415:14;;-1:-1:-1;;;1974:15:9;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":11298,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_33605":{"entryPoint":11333,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":12024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_bool_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":11403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address_address_uint256_uint256_enum_SettlementStatus_string_bytes32_uint256_address_enum_DisputeReason_string":{"entryPoint":11872,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_uint256_address_enum_DisputeReason_string_uint256_bool_address_string":{"entryPoint":12141,"id":null,"parameterSlots":9,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":11618,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":11368,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11470,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":11553,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":12655,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_33607":{"entryPoint":12321,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_33622":{"entryPoint":12413,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_33631":{"entryPoint":12505,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_33637":{"entryPoint":12563,"id":93,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":12693,"id":256,"parameterSlots":2,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":13410,"id":1377,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":12865,"id":294,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":13028,"id":760,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":13365,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":13666,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5553":{"entryPoint":13464,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a132":{"entryPoint":13565,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":12250,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_enum_DisputeReason_to_enum_DisputeReason":{"entryPoint":13767,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_SettlementStatus":{"entryPoint":11815,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816301ffc9a714612b6657508063068d04d014612a0957806306fdde031461294557806308df7dc81461289f578063095ea7b3146127ee57806318160ddd146127b257806320df43591461275957806323b872dd146125d4578063248a9ca314612587578063267f2098146120e85780632f2ff15d1461208b578063313ce5671461205157806336568abe14611fc75780633c0a6e3814611f8b5780633f4ba83a14611ecd578063427ac0ca1461114c57806343b255ac14611d5a5780634c58238014611c9a578063564a565d14611c2c5780635c975abb14611beb57806370a0823114611b8657806376e8a88b14611b055780637d1d7fb814611ac95780638453601714611a715780638456cb59146119db57806384b971a51461199f57806388dae6a814611963578063899c45da146118f1578063917bb9981461181057806391d1485414611797578063933367a81461175457806395d89b41146116365780639de2e9d7146115c45780639e924eb5146114ba578063a217fddf14611480578063a9059cbb14611431578063b5bfddea146113d8578063b9ce896b1461139c578063ba9cf01d14611343578063bfcb704014611264578063bfe42a371461120b578063c4fc45a81461114c578063c5e4ccc414611110578063d0b1149c14610b4a578063d1d50fe614610464578063d547741f14610407578063dd62ed3e1461038a578063e3a96cbd146102e0578063f585dc57146102a45763fc1e29b614610250573861000f565b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576004356000526010602052602060ff604060002054166040519015158152f35b600080fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760206040516203f4808152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57600435600052600e6020526040600020805461038660018301549160038401549060048501549061034e600561034760028901612d62565b9701612d62565b9260405196879673ffffffffffffffffffffffffffffffffffffffff9360ff858760081c1696169460ff8360a01c1692169089612f6d565b0390f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576103c1612c22565b6103c9612c45565b9073ffffffffffffffffffffffffffffffffffffffff8091166000526001602052604060002091166000526020526020604060002054604051908152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5761001b600435610444612c45565b9080600052600660205261045f60016040600020015461316f565b613241565b3461029f5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5761049b612c22565b60449067ffffffffffffffff823581811161029f576104be903690600401612ef8565b926104c7613113565b6104cf613462565b600260075414610b2057600260075573ffffffffffffffffffffffffffffffffffffffff831615610ac25760243515610a645769d3c21bcecceda100000060243511610a06578351156109a857604051602081019061054660208288516105398187858d01612c68565b8101038084520182612d21565b519020600052601060205260ff6040600020541661094a575061056a600854613435565b908160085581600052600d602052604060002090828255600182017fffffffffffffffffffffffff0000000000000000000000000000000000000000903382825416179055600283019073ffffffffffffffffffffffffffffffffffffffff8616908254161790556024356003830155426004830155600582017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905584519081116107d3576106206006830154612cce565b601f8111610903575b50806020601f821160011461083c57600091610831575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161760068201555b60643560078201556203f480420190814211610802576008015573ffffffffffffffffffffffffffffffffffffffff8216600052600f60205260406000208054680100000000000000008110156107d3576106d491600182018155612fda565b81549060031b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84831b921b1916179055604051602081019061072360208287516105398187858c01612c68565b5190206000526010602052604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055610767600954613435565b6009557f4c38254f7b8b72b1565c14ad4825e3be334f5cdf32b2bdb7560016407004f05173ffffffffffffffffffffffffffffffffffffffff6107bd604051956024358752606060208801526060870190612c8b565b9342604087015216938033940390a46001600755005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b905085015186610640565b91506006830160005260206000206000925b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0831684106108eb5760019350827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08116106108b4575b5050811b016006820155610674565b8701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905586806108a5565b8781015182556020938401936001909201910161084e565b600683016000526020600020601f830160051c810160208410610943575b601f830160051c82018110610937575050610629565b60008155600101610921565b5080610921565b6064907f4c33207472616e73616374696f6e20616c72656164792070726f636573736564604051917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260206024840152820152fd5b6064907f496e76616c6964204c33207472616e73616374696f6e20686173680000000000604051917f08c379a000000000000000000000000000000000000000000000000000000000835260206004840152601b6024840152820152fd5b6064907f416d6f756e742065786365656473206d6178696d756d00000000000000000000604051917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260166024840152820152fd5b6064907f416d6f756e74206d7573742062652067726561746572207468616e2030000000604051917f08c379a000000000000000000000000000000000000000000000000000000000835260206004840152601d6024840152820152fd5b6064907f496e76616c696420726563697069656e74000000000000000000000000000000604051917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260116024840152820152fd5b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602435600435600582101561029f5767ffffffffffffffff60443581811161029f57610ba4903690600401612ef8565b90610bad613462565b600c5434106110b25782600052602090600d8252604060002090610bd382541515613498565b600582018054610bef60ff8216610be981612e27565b156134fd565b610bff6008850154421115613562565b73ffffffffffffffffffffffffffffffffffffffff60028501541633148015611070575b15611012577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060029116179055600a6009830192610c8a887fffffffffffffffffffffffff00000000000000000000000000000000000000009533878254161781556135c7565b01908451918183116107d357610ca08154612cce565b92601f93848111610fcf575b508086858211600114610f3157600091610f26575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790555b610cfd600a54613435565b600a5585600052600e8452604060002092868455610d29886001928387019033908254161781556135c7565b600284019286519283116107d357610d418454612cce565b818111610ee0575b5085908311600114610e185792827fc5a6bd89289814765f8743687ea51d3bb3deb2c8f1cff09b1a479fb94166652c97959281610dde9895606097600092610ded575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c19161790555b60034291015560405196610dcf81612e27565b87528601526060850190612c8b565b924260408201528033940390a3005b89015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d8c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0839293169084600052866000209160005b818110610ecb57509260609592610dde989592827fc5a6bd89289814765f8743687ea51d3bb3deb2c8f1cff09b1a479fb94166652c9b999610610e94575b5050811b019055610dbc565b8801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558b80610e88565b89830151845592850192918801918801610e4a565b84600052866000208280860160051c820192898710610f1d575b0160051c019083905b828110610f11575050610d49565b60008155018390610f03565b92508192610efa565b90508701518a610cc1565b6000848152888120927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016905b898b838310610fba575050509083600194939210610f83575b5050811b019055610cf2565b8901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558a80610f77565b84015185556001909401939283019201610f5e565b82600052866000208580840160051c820192898510611009575b0160051c01905b818110610ffd5750610cac565b60008155600101610ff0565b92508192610fe9565b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601960248201527f4e6f7420617574686f72697a656420746f2064697370757465000000000000006044820152fd5b507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e60005260068552604060002033600052855260ff60406000205416610c23565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e73756666696369656e7420646973707574652066656500000000000000006044820152fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600a54604051908152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5773ffffffffffffffffffffffffffffffffffffffff80611199612c22565b166000526011602052604060002090610386825492600181015490600360028201549101549160405195869560ff8260a01c169116869192608093969594919673ffffffffffffffffffffffffffffffffffffffff60a085019816845215156020840152604083015260608201520152565b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760206040517f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e8152f35b3461029f576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5773ffffffffffffffffffffffffffffffffffffffff6112b1612c22565b16600052600f8152604060002060405190818382549182815201908192600052846000209060005b8682821061132f5786866112ef82880383612d21565b604051928392818401908285525180915260408401929160005b82811061131857505050500390f35b835185528695509381019392810192600101611309565b8354855290930192600192830192016112d9565b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760206040517f300f9ae985dc711960f7a4d1dd013f9c19ecf40bff149522ab7523b2187a38468152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600c54604051908152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760206040517f52ba824bfabc2bcfcdf7f0edbb486ebb05e1836c90e78047efeb949990f72e5f8152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5761147561146b612c22565b60243590336132e4565b602060405160018152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602060405160008152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576004356114f4613113565b6114fc613462565b80600052600d602052611595604060002061151981541515613498565b6005810160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825461155260ff8216610be981612e27565b6115626008860154421115613562565b1617905573ffffffffffffffffffffffffffffffffffffffff9060038260018301541692600283015416910154916132e4565b604051904282527f1a87470a87e2fff176d778a6e7f91d53b96b4cbb4d856f40abc582586d51850a60203393a3005b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f577fe8fc23e21608aa8e92faee11af5686b6aa7531796f68f2f943bb0d893c4312c960406004356116216130d9565b600c549080600c5582519182526020820152a1005b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57604051600060045461167681612cce565b8084529060019081811690811561170f57506001146116b4575b610386846116a081860382612d21565b604051918291602083526020830190612c8b565b6004600090815292507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106116f75750505081016020016116a082611690565b805460208587018101919091529093019281016116df565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208087019190915292151560051b850190920192506116a09150839050611690565b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602060405169d3c21bcecceda10000008152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576117ce612c45565b600435600052600660205273ffffffffffffffffffffffffffffffffffffffff60406000209116600052602052602060ff604060002054166040519015158152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576000602073ffffffffffffffffffffffffffffffffffffffff6044611862612c22565b61186a61307d565b60405194859384927fa9059cbb0000000000000000000000000000000000000000000000000000000084523360048501526024356024850152165af180156118e5576118b257005b6020813d82116118dd575b816118ca60209383612d21565b8101031261029f57518015150361029f57005b3d91506118bd565b6040513d6000823e3d90fd5b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f577f9351be7c0f6091e3a280467d38e8ecfd5a4529968cdfaee0e0dbcceaee6765c7604060043561194e6130d9565b600b549080600b5582519182526020820152a1005b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600954604051908152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600854604051908152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611a1261307d565b611a1a613462565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060055416176005557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611aa861307d565b600080808047818115611ac0575b3390f1156118e557005b506108fc611ab6565b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600b54604051908152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611b3c612c22565b73ffffffffffffffffffffffffffffffffffffffff6024359116600052600f6020526040600020805482101561029f57602091611b7891612fda565b90546040519160031b1c8152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5773ffffffffffffffffffffffffffffffffffffffff611bd2612c22565b1660005260006020526020604060002054604051908152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602060ff600554166040519015158152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57600435600052600e60205260406000208054610386600183015491611c8260028501612d62565b9360038101549161034e600560048401549301612d62565b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57600435600052600d6020526040600020805461038673ffffffffffffffffffffffffffffffffffffffff918260018501541693836002820154169160038201549160048101549060ff60058201541690600781015491600882015493600983015496611d43600a611d3c60068701612d62565b9501612d62565b986040519c8d9c60ff8b60a01c169a16988d612e60565b3461029f5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611d91612c22565b60243580151580910361029f576044356064359173ffffffffffffffffffffffffffffffffffffffff60843594611dc6613021565b16938415611e6f577f762b38f99548d8913199a63ae95b09259e584b25129ca98ee5317f088d487bf593608093866000526011602052826003604060002080548a7fffffffffffffffffffffff00000000000000000000000000000000000000000074ff00000000000000000000000000000000000000008a60a01b169216171781558360018201558460028201550155604051938452602084015260408301526060820152a2005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c6964206272696467652061646472657373000000000000000000006044820152fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611f0461307d565b60055460ff811615611f61577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166005557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60046040517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602060405162093a808152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57611ffe612c45565b3373ffffffffffffffffffffffffffffffffffffffff8216036120275761001b90600435613241565b60046040517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57602060405160128152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5761001b6004356120c8612c45565b908060005260066020526120e360016040600020015461316f565b613195565b3461029f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760043567ffffffffffffffff60243581811161029f5761213b903690600401612ef8565b9160443592831515840361029f573360009081527fc05ecb62b3da283f41a58bfabb0641c07f50e632bc46342d8a4c0cc10b5006ff60209081526040909120549094907f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e9060ff161561255057506121b1613462565b82600052600d85526040600020600e86526040600020906121d481541515613498565b6005810192600260ff8554166121e981612e27565b036124f257600483019283549360ff85166124945790600591600180967fffffffffffffffffffffff00000000000000000000000000000000000000000074ffffffffffffffffffffffffffffffffffffffff003360081b169116171790550185519788116107d35761225c8154612cce565b601f811161244b575b5088601f891160011461238c5797807faf22c8b9970a1e934469d4910ba635081d805cf60a06f96c00d501bd873796639899600091612381575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82871b9260031b1c19161790555b15612351578260037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0061232e955416179055600373ffffffffffffffffffffffffffffffffffffffff80938301541692600283015416910154916132e4565b61234360405191604083526040830190612c8b565b9342908201528033940390a3005b505060047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905561232e565b90508701518b61229f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0891690826000528a6000209160005b8c828210612437575050918a917faf22c8b9970a1e934469d4910ba635081d805cf60a06f96c00d501bd873796639a9b889410612400575b5050811b0190556122cf565b8901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558b806123f4565b8a84015185559388019392830192016123bc565b8160005289600020601f8a0160051c8101918b8b1061248a575b601f0160051c019085905b82811061247e575050612265565b60008155018590612470565b9091508190612465565b60648a604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601860248201527f4469737075746520616c7265616479207265736f6c76656400000000000000006044820152fd5b606488604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601760248201527f536574746c656d656e74206e6f742064697370757465640000000000000000006044820152fd5b604490604051907fe2517d3f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760043560005260066020526020600160406000200154604051908152f35b3461029f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5761260b612c22565b612613612c45565b6044359073ffffffffffffffffffffffffffffffffffffffff831692836000526001602052604060002033600052602052604060002054937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851061267e575b5061147593506132e4565b83851061271a5780156126e95733156126b85761147594849160005260016020526040600020336000526020520360406000205584612673565b60246040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b6040517ffb8f41b20000000000000000000000000000000000000000000000000000000081523360048201526024810186905260448101859052606490fd5b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f5760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f576020600254604051908152f35b3461029f5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57612825612c22565b6024359033156126e95773ffffffffffffffffffffffffffffffffffffffff169081156126b857336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57600435600052600d6020526040600020805461038673ffffffffffffffffffffffffffffffffffffffff91826001850154169383600282015416916003820154600483015460ff60058501541661292760068601612d62565b90600786015492600887015494611d43600a60098a01549901612d62565b3461029f5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57604051600060035461298581612cce565b8084529060019081811690811561170f57506001146129ae57610386846116a081860382612d21565b6003600090815292507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106129f15750505081016020016116a082611690565b805460208587018101919091529093019281016129d9565b3461029f5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57612a40612c22565b612a48612c45565b6044359060643573ffffffffffffffffffffffffffffffffffffffff811680910361029f57612a75613021565b612a7d613462565b6000526011602052604060002060ff815460a01c1615612b0857600201548211612aaa5761001b926132e4565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f416d6f756e74206578636565647320627269646765206c696d697400000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f427269646765206e6f74206163746976650000000000000000000000000000006044820152fd5b3461029f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261029f57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361029f57817f7965db0b0000000000000000000000000000000000000000000000000000000060209314908115612bf8575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483612bf1565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361029f57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361029f57565b60005b838110612c7b5750506000910152565b8181015183820152602001612c6b565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093612cc781518092818752878088019101612c68565b0116010190565b90600182811c92168015612d17575b6020831014612ce857565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691612cdd565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176107d357604052565b9060405191826000825492612d7684612cce565b908184526001948581169081600014612de55750600114612da2575b5050612da092500383612d21565b565b9093915060005260209081600020936000915b818310612dcd575050612da093508201013880612d92565b85548884018501529485019487945091830191612db5565b9050612da09550602093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880612d92565b60051115612e3157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b98949093612ef59c9a9692612ec5959c999c9894988b5273ffffffffffffffffffffffffffffffffffffffff988980921660208d01521660408b015260608a01526080890152612eaf81612e27565b60a08801526101808060c0890152870190612c8b565b9660e086015261010085015216610120830152612ee181612e27565b610140820152610160818403910152612c8b565b90565b81601f8201121561029f5780359067ffffffffffffffff82116107d35760405192612f4b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185612d21565b8284526020838301011161029f57816000926020809301838601378301015290565b94969293612ef598969294612fba92875273ffffffffffffffffffffffffffffffffffffffff8096166020880152612fa481612e27565b6040870152610100806060880152860190612c8b565b956080850152151560a08401521660c082015260e0818403910152612c8b565b8054821015612ff25760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3360009081527f866532df3c7b8a8304a854a94071efe99d9f2c853d9869138b5fbc8a8598b93760205260409020547f52ba824bfabc2bcfcdf7f0edbb486ebb05e1836c90e78047efeb949990f72e5f9060ff16156125505750565b3360009081527f7aca5d7f7c0d5c6c775e2a7e40239a4d6963361b3df3b07df46432786460eb5760205260409020547fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff16156125505750565b3360009081527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8602052604081205460ff16156125505750565b3360009081527f44017833178cb959064128715f4ace9a64bbfc45712d4670fcace3e0c4a1693b60205260409020547f300f9ae985dc711960f7a4d1dd013f9c19ecf40bff149522ab7523b2187a38469060ff16156125505750565b80600052600660205260406000203360005260205260ff60406000205416156125505750565b90600091808352600660205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff6040842054161560001461323c578083526006602052604083208284526020526040832060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b90600091808352600660205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff60408420541660001461323c57808352600660205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9173ffffffffffffffffffffffffffffffffffffffff80841692831561340457169283156133d357613314613462565b61331c613462565b6000908382528160205260408220549083821061337b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108025760010190565b60ff6005541661346e57565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fd5b1561349f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f536574746c656d656e7420646f6573206e6f74206578697374000000000000006044820152fd5b1561350457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f536574746c656d656e74206e6f742070656e64696e67000000000000000000006044820152fd5b1561356957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f446973707574652077696e646f772065787069726564000000000000000000006044820152fd5b906135d181612e27565b7fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff74ff000000000000000000000000000000000000000083549260a01b16911617905556fea26469706673582212207e021e4b6059413d6589ce4e9565fb731c8314346703f3fd30f984144dc6998364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x2B66 JUMPI POP DUP1 PUSH4 0x68D04D0 EQ PUSH2 0x2A09 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2945 JUMPI DUP1 PUSH4 0x8DF7DC8 EQ PUSH2 0x289F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x27EE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27B2 JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x2759 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2587 JUMPI DUP1 PUSH4 0x267F2098 EQ PUSH2 0x20E8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x208B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2051 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FC7 JUMPI DUP1 PUSH4 0x3C0A6E38 EQ PUSH2 0x1F8B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1ECD JUMPI DUP1 PUSH4 0x427AC0CA EQ PUSH2 0x114C JUMPI DUP1 PUSH4 0x43B255AC EQ PUSH2 0x1D5A JUMPI DUP1 PUSH4 0x4C582380 EQ PUSH2 0x1C9A JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x1C2C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1BEB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B86 JUMPI DUP1 PUSH4 0x76E8A88B EQ PUSH2 0x1B05 JUMPI DUP1 PUSH4 0x7D1D7FB8 EQ PUSH2 0x1AC9 JUMPI DUP1 PUSH4 0x84536017 EQ PUSH2 0x1A71 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x84B971A5 EQ PUSH2 0x199F JUMPI DUP1 PUSH4 0x88DAE6A8 EQ PUSH2 0x1963 JUMPI DUP1 PUSH4 0x899C45DA EQ PUSH2 0x18F1 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0x1810 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1797 JUMPI DUP1 PUSH4 0x933367A8 EQ PUSH2 0x1754 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1636 JUMPI DUP1 PUSH4 0x9DE2E9D7 EQ PUSH2 0x15C4 JUMPI DUP1 PUSH4 0x9E924EB5 EQ PUSH2 0x14BA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1480 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1431 JUMPI DUP1 PUSH4 0xB5BFDDEA EQ PUSH2 0x13D8 JUMPI DUP1 PUSH4 0xB9CE896B EQ PUSH2 0x139C JUMPI DUP1 PUSH4 0xBA9CF01D EQ PUSH2 0x1343 JUMPI DUP1 PUSH4 0xBFCB7040 EQ PUSH2 0x1264 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x120B JUMPI DUP1 PUSH4 0xC4FC45A8 EQ PUSH2 0x114C JUMPI DUP1 PUSH4 0xC5E4CCC4 EQ PUSH2 0x1110 JUMPI DUP1 PUSH4 0xD0B1149C EQ PUSH2 0xB4A JUMPI DUP1 PUSH4 0xD1D50FE6 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xE3A96CBD EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF585DC57 EQ PUSH2 0x2A4 JUMPI PUSH4 0xFC1E29B6 EQ PUSH2 0x250 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH1 0x3 DUP5 ADD SLOAD SWAP1 PUSH1 0x4 DUP6 ADD SLOAD SWAP1 PUSH2 0x34E PUSH1 0x5 PUSH2 0x347 PUSH1 0x2 DUP10 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP8 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0xFF DUP6 DUP8 PUSH1 0x8 SHR AND SWAP7 AND SWAP5 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND SWAP3 AND SWAP1 DUP10 PUSH2 0x2F6D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x3C1 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B PUSH1 0x4 CALLDATALOAD PUSH2 0x444 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x45F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x316F JUMP JUMPDEST PUSH2 0x3241 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x49B PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x4BE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP3 PUSH2 0x4C7 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ PUSH2 0xB20 JUMPI PUSH1 0x2 PUSH1 0x7 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0xA64 JUMPI PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x24 CALLDATALOAD GT PUSH2 0xA06 JUMPI DUP4 MLOAD ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x546 PUSH1 0x20 DUP3 DUP9 MLOAD PUSH2 0x539 DUP2 DUP8 DUP6 DUP14 ADD PUSH2 0x2C68 JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x2D21 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x94A JUMPI POP PUSH2 0x56A PUSH1 0x8 SLOAD PUSH2 0x3435 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x8 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 CALLER DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP4 ADD SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE DUP5 MLOAD SWAP1 DUP2 GT PUSH2 0x7D3 JUMPI PUSH2 0x620 PUSH1 0x6 DUP4 ADD SLOAD PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x903 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x83C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x831 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP3 ADD SSTORE JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH3 0x3F480 TIMESTAMP ADD SWAP1 DUP2 TIMESTAMP GT PUSH2 0x802 JUMPI PUSH1 0x8 ADD SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH2 0x6D4 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2FDA JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x723 PUSH1 0x20 DUP3 DUP8 MLOAD PUSH2 0x539 DUP2 DUP8 DUP6 DUP13 ADD PUSH2 0x2C68 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x767 PUSH1 0x9 SLOAD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH32 0x4C38254F7B8B72B1565C14AD4825E3BE334F5CDF32B2BDB7560016407004F051 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x7BD PUSH1 0x40 MLOAD SWAP6 PUSH1 0x24 CALLDATALOAD DUP8 MSTORE PUSH1 0x60 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP4 TIMESTAMP PUSH1 0x40 DUP8 ADD MSTORE AND SWAP4 DUP1 CALLER SWAP5 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x7 SSTORE STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP7 PUSH2 0x640 JUMP JUMPDEST SWAP2 POP PUSH1 0x6 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 AND DUP5 LT PUSH2 0x8EB JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 AND LT PUSH2 0x8B4 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x674 JUMP JUMPDEST DUP8 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x8A5 JUMP JUMPDEST DUP8 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x84E JUMP JUMPDEST PUSH1 0x6 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x943 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x937 JUMPI POP POP PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x921 JUMP JUMPDEST POP DUP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x4C33207472616E73616374696F6E20616C72656164792070726F636573736564 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x496E76616C6964204C33207472616E73616374696F6E20686173680000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x416D6F756E742065786365656473206D6178696D756D00000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x29F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0xBA4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP1 PUSH2 0xBAD PUSH2 0x3462 JUMP JUMPDEST PUSH1 0xC SLOAD CALLVALUE LT PUSH2 0x10B2 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0xBD3 DUP3 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xBEF PUSH1 0xFF DUP3 AND PUSH2 0xBE9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST ISZERO PUSH2 0x34FD JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x8 DUP6 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3562 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1070 JUMPI JUMPDEST ISZERO PUSH2 0x1012 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x2 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xA PUSH1 0x9 DUP4 ADD SWAP3 PUSH2 0xC8A DUP9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP6 CALLER DUP8 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x35C7 JUMP JUMPDEST ADD SWAP1 DUP5 MLOAD SWAP2 DUP2 DUP4 GT PUSH2 0x7D3 JUMPI PUSH2 0xCA0 DUP2 SLOAD PUSH2 0x2CCE JUMP JUMPDEST SWAP3 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH2 0xFCF JUMPI JUMPDEST POP DUP1 DUP7 DUP6 DUP3 GT PUSH1 0x1 EQ PUSH2 0xF31 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xF26 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0xCFD PUSH1 0xA SLOAD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0xA SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP7 DUP5 SSTORE PUSH2 0xD29 DUP9 PUSH1 0x1 SWAP3 DUP4 DUP8 ADD SWAP1 CALLER SWAP1 DUP3 SLOAD AND OR DUP2 SSTORE PUSH2 0x35C7 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SWAP3 DUP7 MLOAD SWAP3 DUP4 GT PUSH2 0x7D3 JUMPI PUSH2 0xD41 DUP5 SLOAD PUSH2 0x2CCE JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0xEE0 JUMPI JUMPDEST POP DUP6 SWAP1 DUP4 GT PUSH1 0x1 EQ PUSH2 0xE18 JUMPI SWAP3 DUP3 PUSH32 0xC5A6BD89289814765F8743687EA51D3BB3DEB2C8F1CFF09B1A479FB94166652C SWAP8 SWAP6 SWAP3 DUP2 PUSH2 0xDDE SWAP9 SWAP6 PUSH1 0x60 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0xDED JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP7 PUSH2 0xDCF DUP2 PUSH2 0x2E27 JUMP JUMPDEST DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 STOP JUMPDEST DUP10 ADD MLOAD SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD8C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 SWAP3 SWAP4 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xECB JUMPI POP SWAP3 PUSH1 0x60 SWAP6 SWAP3 PUSH2 0xDDE SWAP9 SWAP6 SWAP3 DUP3 PUSH32 0xC5A6BD89289814765F8743687EA51D3BB3DEB2C8F1CFF09B1A479FB94166652C SWAP12 SWAP10 SWAP7 LT PUSH2 0xE94 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xDBC JUMP JUMPDEST DUP9 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0xE88 JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0xE4A JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP3 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH2 0xF1D JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xF11 JUMPI POP POP PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0xF03 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP11 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 JUMPDEST DUP10 DUP12 DUP4 DUP4 LT PUSH2 0xFBA JUMPI POP POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0xF83 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xCF2 JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH2 0xF77 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xF5E JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP6 LT PUSH2 0x1009 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xFFD JUMPI POP PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFF0 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206469737075746500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742064697370757465206665650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x1199 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x386 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND SWAP2 AND DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 DUP6 ADD SWAP9 AND DUP5 MSTORE ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x12B1 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x132F JUMPI DUP7 DUP7 PUSH2 0x12EF DUP3 DUP9 SUB DUP4 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1318 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1309 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x12D9 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x300F9AE985DC711960F7A4D1DD013F9C19ECF40BFF149522AB7523B2187A3846 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x52BA824BFABC2BCFCDF7F0EDBB486EBB05E1836C90E78047EFEB949990F72E5F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1475 PUSH2 0x146B PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x14F4 PUSH2 0x3113 JUMP JUMPDEST PUSH2 0x14FC PUSH2 0x3462 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1595 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1519 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD PUSH2 0x1552 PUSH1 0xFF DUP3 AND PUSH2 0xBE9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x1562 PUSH1 0x8 DUP7 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x3562 JUMP JUMPDEST AND OR SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x3 DUP3 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP2 PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0x1A87470A87E2FFF176D778A6E7F91D53B96B4CBB4D856F40ABC582586D51850A PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH32 0xE8FC23E21608AA8E92FAEE11AF5686B6AA7531796F68F2F943BB0D893C4312C9 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x1621 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 DUP1 PUSH1 0xC SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD PUSH2 0x1676 DUP2 PUSH2 0x2CCE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x170F JUMPI POP PUSH1 0x1 EQ PUSH2 0x16B4 JUMPI JUMPDEST PUSH2 0x386 DUP5 PUSH2 0x16A0 DUP2 DUP7 SUB DUP3 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x16F7 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x16A0 DUP3 PUSH2 0x1690 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16DF JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x16A0 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x1690 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x17CE PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x0 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x44 PUSH2 0x1862 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x186A PUSH2 0x307D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18B2 JUMPI STOP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x18DD JUMPI JUMPDEST DUP2 PUSH2 0x18CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2D21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x29F JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x29F JUMPI STOP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH32 0x9351BE7C0F6091E3A280467D38E8ECFD5A4529968CDFAEE0E0DBCCEAEE6765C7 PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0x194E PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 DUP1 PUSH1 0xB SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1A12 PUSH2 0x307D JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1AA8 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SELFBALANCE DUP2 DUP2 ISZERO PUSH2 0x1AC0 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x18E5 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B3C PUSH2 0x2C22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1B78 SWAP2 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1BD2 PUSH2 0x2C22 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH2 0x1C82 PUSH1 0x2 DUP6 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH2 0x34E PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD PUSH2 0x2D62 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 DUP4 PUSH1 0x2 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x7 DUP2 ADD SLOAD SWAP2 PUSH1 0x8 DUP3 ADD SLOAD SWAP4 PUSH1 0x9 DUP4 ADD SLOAD SWAP7 PUSH2 0x1D43 PUSH1 0xA PUSH2 0x1D3C PUSH1 0x6 DUP8 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP6 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 PUSH1 0xFF DUP12 PUSH1 0xA0 SHR AND SWAP11 AND SWAP9 DUP14 PUSH2 0x2E60 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1D91 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD SWAP5 PUSH2 0x1DC6 PUSH2 0x3021 JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x1E6F JUMPI PUSH32 0x762B38F99548D8913199A63AE95B09259E584B25129CA98EE5317F088D487BF5 SWAP4 PUSH1 0x80 SWAP4 DUP7 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE DUP3 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP11 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFF0000000000000000000000000000000000000000 DUP11 PUSH1 0xA0 SHL AND SWAP3 AND OR OR DUP2 SSTORE DUP4 PUSH1 0x1 DUP3 ADD SSTORE DUP5 PUSH1 0x2 DUP3 ADD SSTORE ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420627269646765206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1F04 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1F61 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x5 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1FFE PUSH2 0x2C45 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x2027 JUMPI PUSH2 0x1B SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x3241 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x1B PUSH1 0x4 CALLDATALOAD PUSH2 0x20C8 PUSH2 0x2C45 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x20E3 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x316F JUMP JUMPDEST PUSH2 0x3195 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x213B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2EF8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x29F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC05ECB62B3DA283F41A58BFABB0641C07F50E632BC46342D8A4C0CC10B5006FF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP5 SWAP1 PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP PUSH2 0x21B1 PUSH2 0x3462 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xD DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x21D4 DUP2 SLOAD ISZERO ISZERO PUSH2 0x3498 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SWAP3 PUSH1 0x2 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x21E9 DUP2 PUSH2 0x2E27 JUMP JUMPDEST SUB PUSH2 0x24F2 JUMPI PUSH1 0x4 DUP4 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH1 0xFF DUP6 AND PUSH2 0x2494 JUMPI SWAP1 PUSH1 0x5 SWAP2 PUSH1 0x1 DUP1 SWAP7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 CALLER PUSH1 0x8 SHL AND SWAP2 AND OR OR SWAP1 SSTORE ADD DUP6 MLOAD SWAP8 DUP9 GT PUSH2 0x7D3 JUMPI PUSH2 0x225C DUP2 SLOAD PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x244B JUMPI JUMPDEST POP DUP9 PUSH1 0x1F DUP10 GT PUSH1 0x1 EQ PUSH2 0x238C JUMPI SWAP8 DUP1 PUSH32 0xAF22C8B9970A1E934469D4910BA635081D805CF60A06F96C00D501BD87379663 SWAP9 SWAP10 PUSH1 0x0 SWAP2 PUSH2 0x2381 JUMPI JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP8 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST ISZERO PUSH2 0x2351 JUMPI DUP3 PUSH1 0x3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH2 0x232E SWAP6 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 ADD SLOAD SWAP2 PUSH2 0x32E4 JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP4 TIMESTAMP SWAP1 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 STOP JUMPDEST POP POP PUSH1 0x4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x232E JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x229F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP10 AND SWAP1 DUP3 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x2437 JUMPI POP POP SWAP2 DUP11 SWAP2 PUSH32 0xAF22C8B9970A1E934469D4910BA635081D805CF60A06F96C00D501BD87379663 SWAP11 SWAP12 DUP9 SWAP5 LT PUSH2 0x2400 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x22CF JUMP JUMPDEST DUP10 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x23F4 JUMP JUMPDEST DUP11 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP9 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x23BC JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP11 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP12 LT PUSH2 0x248A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x247E JUMPI POP POP PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x2470 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469737075746520616C7265616479207265736F6C7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E74206E6F74206469737075746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x260B PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2613 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 LT PUSH2 0x267E JUMPI JUMPDEST POP PUSH2 0x1475 SWAP4 POP PUSH2 0x32E4 JUMP JUMPDEST DUP4 DUP6 LT PUSH2 0x271A JUMPI DUP1 ISZERO PUSH2 0x26E9 JUMPI CALLER ISZERO PUSH2 0x26B8 JUMPI PUSH2 0x1475 SWAP5 DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP5 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x2825 PUSH2 0x2C22 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x26E9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x26B8 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x386 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 DUP4 PUSH1 0x2 DUP3 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH2 0x2927 PUSH1 0x6 DUP7 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP7 ADD SLOAD SWAP3 PUSH1 0x8 DUP8 ADD SLOAD SWAP5 PUSH2 0x1D43 PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD PUSH2 0x2D62 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD PUSH2 0x2985 DUP2 PUSH2 0x2CCE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x170F JUMPI POP PUSH1 0x1 EQ PUSH2 0x29AE JUMPI PUSH2 0x386 DUP5 PUSH2 0x16A0 DUP2 DUP7 SUB DUP3 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x29F1 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x16A0 DUP3 PUSH2 0x1690 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x29D9 JUMP JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0x2A40 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x2A48 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x2A75 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x2A7D PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x2B08 JUMPI PUSH1 0x2 ADD SLOAD DUP3 GT PUSH2 0x2AAA JUMPI PUSH2 0x1B SWAP3 PUSH2 0x32E4 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206578636565647320627269646765206C696D69740000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427269646765206E6F7420616374697665000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x29F JUMPI DUP2 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP4 EQ SWAP1 DUP2 ISZERO PUSH2 0x2BF8 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x29F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x29F JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2C7B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C6B JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2CC7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x2C68 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2D17 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2CE8 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2CDD JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2D76 DUP5 PUSH2 0x2CCE JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2DE5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2DA2 JUMPI JUMPDEST POP POP PUSH2 0x2DA0 SWAP3 POP SUB DUP4 PUSH2 0x2D21 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2DCD JUMPI POP POP PUSH2 0x2DA0 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2D92 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DA0 SWAP6 POP PUSH1 0x20 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2E31 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP9 SWAP5 SWAP1 SWAP4 PUSH2 0x2EF5 SWAP13 SWAP11 SWAP7 SWAP3 PUSH2 0x2EC5 SWAP6 SWAP13 SWAP10 SWAP13 SWAP9 SWAP5 SWAP9 DUP12 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 DUP1 SWAP3 AND PUSH1 0x20 DUP14 ADD MSTORE AND PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x2EAF DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0xC0 DUP10 ADD MSTORE DUP8 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP7 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE AND PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2EE1 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2C8B JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x29F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2F4B PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x2D21 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x29F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP5 SWAP7 SWAP3 SWAP4 PUSH2 0x2EF5 SWAP9 SWAP7 SWAP3 SWAP5 PUSH2 0x2FBA SWAP3 DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP7 AND PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x100 DUP1 PUSH1 0x60 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST SWAP6 PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2C8B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2FF2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x866532DF3C7B8A8304A854A94071EFE99D9F2C853D9869138B5FBC8A8598B937 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x52BA824BFABC2BCFCDF7F0EDBB486EBB05E1836C90E78047EFEB949990F72E5F SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7ACA5D7F7C0D5C6C775E2A7E40239A4D6963361B3DF3B07DF46432786460EB57 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x54CDD369E4E8A8515E52CA72EC816C2101831AD1F18BF44102ED171459C9B4F8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x44017833178CB959064128715F4ACE9A64BBFC45712D4670FCACE3E0C4A1693B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x300F9AE985DC711960F7A4D1DD013F9C19ECF40BFF149522AB7523B2187A3846 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x2550 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x323C JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x323C JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x3404 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x33D3 JUMPI PUSH2 0x3314 PUSH2 0x3462 JUMP JUMPDEST PUSH2 0x331C PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x337B JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x346E JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x349F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E7420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3504 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536574746C656D656E74206E6F742070656E64696E6700000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3569 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973707574652077696E646F77206578706972656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x35D1 DUP2 PUSH2 0x2E27 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH21 0xFF0000000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x21E4B6059413D6589CE4E9565FB731C8314346703F3FD30F984144DC69983 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"564:18415:14:-:0;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3336:55;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6;564:18415;;;;;;;;;;;;;;;;;;15382:8;564:18415;;;;;;;;;15472:17;;564:18415;15563:17;;;;564:18415;15595:16;564:18415;15595:16;;564:18415;15533:15;564:18415;15657:18;564:18415;15533:15;;;564:18415;:::i;:::-;15657:18;;564:18415;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;3638:11:3;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;564:18415:14;;;;:::i;:::-;;;;;3901:6:0;564:18415:14;;2475:4:0;564:18415:14;;;;3901:22:0;564:18415:14;2475:4:0;:::i;:::-;4747:26;:::i;564:18415:14:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;;:::i;:::-;1315:72:9;;:::i;:::-;1899:1:10;2702:7;564:18415:14;2702:18:10;2698:86;;1899:1;2702:7;564:18415:14;;;;6074:16;564:18415;;;;6131:10;564:18415;;1334:16;564:18415;;6194:31;564:18415;;;;6271:35;564:18415;;;;;6392:35;;564:18415;6392:35;564:18415;;;;;;;;;;;:::i;:::-;;;6392:35;;;;;;;:::i;:::-;564:18415;6382:46;;564:18415;;6358:23;564:18415;;;;;;;;;;;6487:19;;564:18415;6487:19;:::i;:::-;564:18415;;6487:19;564:18415;;;;6610:11;564:18415;;;;;;;;;;6695:15;;564:18415;6713:10;;564:18415;;;;;;;1899:1:10;6734:13:14;;564:18415;;;;;;;;;;;;;6763:17;;;564:18415;6823:15;564:18415;6800:20;;564:18415;6849:17;;;564:18415;;;;;;;;;;;;;;6904:28;;;564:18415;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6763:17;564:18415;;;;;6904:28;;;564:18415;;;;2702:7:10;6963:21:14;;564:18415;1273:6;6823:15;564:18415;6823:15;;;564:18415;;;6487:19;7008:26;564:18415;;;;;;7090:15;564:18415;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6763:17;564:18415;;;;;;;;;;;;;;;;7173:35;;564:18415;7173:35;564:18415;;;;;;;;;;;:::i;7173:35::-;564:18415;7163:46;;564:18415;;6358:23;564:18415;;;;;;;;;;;;;7228:18;;564:18415;7228:18;:::i;:::-;;564:18415;7272:91;564:18415;;;;;;;;;;;;;;;;;;;:::i;:::-;6823:15;;564:18415;;;;;6713:10;;;7272:91;;;;564:18415;2702:7:10;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:28;;;;;564:18415;;;;;;;;6392:35;564:18415;;;;;;;;;;6392:35;564:18415;;;;;;;;;;;6904:28;;;564:18415;;;;;;;;;;6763:17;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:28;;;564:18415;;;;;;;;6849:17;564:18415;;;;;;;;;;;;6849:17;564:18415;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:86:10;564:18415:14;;;2743:30:10;;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1315:72:9;;;:::i;:::-;8573:10:14;564:18415;8560:9;:23;564:18415;;;;;;;8665:11;564:18415;;;;;;8701:66;564:18415;;8709:28;;8701:66;:::i;:::-;564:18415;8786:17;;564:18415;;8778:80;564:18415;;;;;;:::i;:::-;8786:45;8778:80;:::i;:::-;8869;8896:26;;;564:18415;8877:15;:45;;8869:80;:::i;:::-;564:18415;8982:13;;;564:18415;;8968:10;:27;:73;;;;564:18415;;;;;8982:13;564:18415;;;;;9243:25;9148:27;;;564:18415;9199:33;564:18415;;8968:10;;564:18415;;;;;;;9199:33;:::i;:::-;9243:25;564:18415;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9299:15;9243:25;564:18415;9299:15;:::i;:::-;9243:25;564:18415;;;;9361:8;564:18415;;;;;;;;;9481:23;564:18415;;9440:17;;;;8968:10;;564:18415;;;;;;;9481:23;:::i;:::-;8982:13;9515:15;;564:18415;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9612:78;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9551:17;8877:15;9551:17;;564:18415;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;8877:15;;564:18415;;;;8968:10;;9612:78;;;;564:18415;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9612:78;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8968:73;564:18415;1052:34;564:18415;;2954:6:0;564:18415:14;;;;;8968:10;564:18415;;;;;;;;;;8968:73;;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2999:28;564:18415;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;16545:13;564:18415;;;;;;;;;16671:23;;;;564:18415;16709:16;16740:10;16709:16;;;564:18415;16740:10;;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:34;564:18415;;;;;;;;;;;;;;;;;;:::i;:::-;;;;15946:15;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:28;564:18415;;;;;;;;;;;;;;;3102:41;564:18415;;;;;;;;;;;;;;;;;;;;;973:24;564:18415;;;;;;;;;;;;;;3440:5:3;564:18415:14;;:::i;:::-;;;735:10:8;;3440:5:3;:::i;:::-;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;564:18415:14;;;7618:11;564:18415;;8073:17;564:18415;;;7654:66;564:18415;;7662:28;;7654:66;:::i;:::-;7739:17;;;564:18415;;;;7731:80;564:18415;;;;;;:::i;7731:80::-;7822;7849:26;;;564:18415;7830:15;:45;;7822:80;:::i;:::-;564:18415;;;;;8041:15;8073:17;8041:15;564:18415;8041:15;;564:18415;;8058:13;;;;564:18415;;8073:17;;564:18415;8073:17;;:::i;:::-;564:18415;;7830:15;;564:18415;;8117:62;564:18415;8151:10;8117:62;;564:18415;;;;;;;;;;;;17553:33;564:18415;;;2475:4:0;;:::i;:::-;17497:10:14;564:18415;;;17497:10;564:18415;;;;;;;;;;17553:33;564:18415;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;564:18415:14;;;;;;;-1:-1:-1;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;1334:16;564:18415;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:0;;:::i;:::-;564:18415:14;;18328:42;;;;;564:18415;18328:42;;18351:10;564:18415;18328:42;;564:18415;;;;;;;;18328:42;;;;;;;;564:18415;18328:42;564:18415;18328:42;;;;;;;;;564:18415;18328:42;;;:::i;:::-;;;564:18415;;;;;;;;;;;;18328:42;;;-1:-1:-1;18328:42:14;;;564:18415;;;;;;;;;;;;;;;;;;;;17246:36;564:18415;;;2475:4:0;;:::i;:::-;17184:13:14;564:18415;;;17184:13;564:18415;;;;;;;;;;17246:36;564:18415;;;;;;;;;;;;;2961:31;564:18415;;;;;;;;;;;;;;;;;;;2922:32;564:18415;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;2408:4;564:18415:14;2398:14:9;564:18415:14;;;2398:14:9;564:18415:14;2427:20:9;564:18415:14;;;735:10:8;564:18415:14;;2427:20:9;564:18415:14;;;;;;;;;;;;2475:4:0;;:::i;:::-;564:18415:14;18044:21;;;;18015:51;;;;;564:18415;18023:10;18015:51;;;;;564:18415;18015:51;;;;;564:18415;;;;;;;;;;;;3034:45;564:18415;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3277:52;564:18415;;;;;;;3277:52;;;;;564:18415;3277:52;;;;:::i;:::-;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:7:9;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;3227:43;564:18415;;;;;;;;;3227:43;;564:18415;3227:43;;;;;;:::i;:::-;;;;;564:18415;3227:43;;;564:18415;3227:43;;564:18415;3227:43;;;:::i;564:18415::-;;;;;;;;;;;;;;;14123:11;564:18415;;;;;;;;;14219:15;;564:18415;14219:15;;564:18415;;14249:13;;;;;564:18415;;14277:17;;;;564:18415;14309:20;564:18415;14309:20;;564:18415;14344:17;564:18415;14344:17;;;564:18415;;14419:21;;;;564:18415;14455:26;;;;564:18415;14496:27;;;;564:18415;14376:28;564:18415;14577:25;564:18415;14376:28;;;564:18415;:::i;:::-;14577:25;;564:18415;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2475:4:0;;;:::i;:::-;564:18415:14;11708:27;;;564:18415;;12070:78;564:18415;;;;;;11813:13;564:18415;;;12028:10;564:18415;;;;;;;;;;;;;;;;;;11936:23;564:18415;11936:23;;564:18415;11989:16;;;;564:18415;12028:10;564:18415;;;;;;;;;;;;;;;;;;12070:78;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1796:7:9;564:18415:14;;;;2140:9:9;2136:62;;564:18415:14;;1796:7:9;564:18415:14;2674:22:9;564:18415:14;;;735:10:8;564:18415:14;;2674:22:9;564:18415:14;2136:62:9;564:18415:14;;;2172:15:9;;;;564:18415:14;;;;;;;;;;;;;;1219:6;564:18415;;;;;;;;;;;;;;;;:::i;:::-;735:10:8;564:18415:14;;;5421:34:0;5417:102;;5529:37;564:18415:14;;;5529:37:0;:::i;5417:102::-;564:18415:14;;;5478:30:0;;;;564:18415:14;;;;;;;;;;;;;;2761:2:3;564:18415:14;;;;;;;;;;;;;;4330:25:0;564:18415:14;;;;:::i;:::-;;;;;3901:6:0;564:18415:14;;2475:4:0;564:18415:14;;;;3901:22:0;564:18415:14;2475:4:0;:::i;:::-;4330:25;:::i;564:18415:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;735:10:8;564:18415:14;;;;;;;;;;;;;;;;;1052:34;;564:18415;;3519:23:0;3515:108;;1315:72:9;;;:::i;:::-;564:18415:14;;;10141:11;564:18415;;;;;10203:8;564:18415;;;;;;10246:66;564:18415;;10254:28;;10246:66;:::i;:::-;10331:17;;;564:18415;10352:25;564:18415;;;;;;;:::i;:::-;10331:46;564:18415;;;10425:16;;564:18415;;;;;;;;;;10331:17;564:18415;;735:10:8;;564:18415:14;;735:10:8;564:18415:14;;;;;;;;;10565:18;564:18415;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10891:70;564:18415;;;;;;;;;;;;;;;;;;;;;;10617:249;;;564:18415;10675:25;564:18415;10757:17;564:18415;;;;;;10675:25;564:18415;10725:15;;;;564:18415;;10742:13;10352:25;10742:13;;564:18415;;10757:17;;564:18415;10757:17;;:::i;:::-;564:18415;;;;;;;;;;;;:::i;:::-;10945:15;;564:18415;;;;735:10:8;;10891:70:14;;;;564:18415;10617:249;564:18415;;;;;;;;;;10617:249;;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10891:70;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10331:17;564:18415;;;;;;;;;;;;10331:17;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:108:0;564:18415:14;;;;3565:47:0;;;;735:10:8;564:18415:14;3565:47:0;;564:18415:14;;;;;3565:47:0;564:18415:14;;;;;;;;;;;;;;;3901:6:0;564:18415:14;;;;;;;3901:22:0;564:18415:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;735:10:8;564:18415:14;;;;;;;;10561:36:3;10580:17;10561:36;;10557:309;;564:18415:14;4967:5:3;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:8;9892:21:3;9888:90;;4967:5;564:18415:14;;;;;;;;;;;735:10:8;564:18415:14;;;;;;;;;10557:309:3;;;9888:90;564:18415:14;;;9936:31:3;;;564:18415:14;;9936:31:3;;564:18415:14;9936:31:3;9790:89;564:18415:14;;;9836:32:3;;;564:18415:14;;9836:32:3;;564:18415:14;9836:32:3;10613:130;564:18415:14;;10668:60:3;;;735:10:8;564:18415:14;10668:60:3;;564:18415:14;;;;;;;;;;;;;;;10668:60:3;564:18415:14;;;;;;;;;;;;;;1134:27;564:18415;;;;;;;;;;;;;;;2908:12:3;564:18415:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:8;;9794:19:3;9790:89;;564:18415:14;;9892:21:3;;;9888:90;;735:10:8;564:18415:14;;8823:4:3;564:18415:14;;;;;;;;;;;;;;;;;;;;10066:31:3;564:18415:14;735:10:8;10066:31:3;;564:18415:14;;;8823:4:3;564:18415:14;;;;;;;;;;;;;;;;;;3171:49;564:18415;;;;;;;;;3171:49;;564:18415;3171:49;;564:18415;;3171:49;;;;;564:18415;;3171:49;;;;564:18415;;3171:49;;564:18415;;3171:49;;;564:18415;;3171:49;;;;;:::i;:::-;;;;;564:18415;3171:49;;;;564:18415;3171:49;;;;;;564:18415;3171:49;;;:::i;564:18415::-;;;;;;;;;;;;;;1837:5:3;564:18415:14;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1837:5:3;564:18415:14;;;;;-1:-1:-1;564:18415:14;;;;;;;-1:-1:-1;;;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:9;;:::i;:::-;564:18415:14;;12612:13;564:18415;;;;;;;;;;;;;;12725:16;;564:18415;12715:26;;564:18415;;12814:6;;;:::i;564:18415::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12612:13;564:18415;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:47:0;2688:32;564:18415:14;2673:47:0;;:87;;;;;564:18415:14;;;;;;;2673:87:0;877:25:11;862:40;;;2673:87:0;;;564:18415:14;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;564:18415:14;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;564:18415:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;564:18415:14;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;564:18415:14;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;564:18415:14;;-1:-1:-1;564:18415:14;;;-1:-1:-1;564:18415:14;:::o;:::-;;;;;;;;;;3199:103:0;735:10:8;-1:-1:-1;564:18415:14;;;;;;;;;;973:24;;564:18415;;3519:23:0;3515:108;;3199:103;:::o;:::-;735:10:8;-1:-1:-1;564:18415:14;;;;;;;;;;1134:27;;564:18415;;3519:23:0;3515:108;;3199:103;:::o;:::-;735:10:8;564:18415:14;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;:::-;735:10:8;-1:-1:-1;564:18415:14;;;;;;;;;;900:28;;564:18415;;3519:23:0;3515:108;;3199:103;:::o;:::-;564:18415:14;-1:-1:-1;564:18415:14;2954:6:0;564:18415:14;;;-1:-1:-1;564:18415:14;735:10:8;-1:-1:-1;564:18415:14;;;;;-1:-1:-1;564:18415:14;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;-1:-1:-1;564:18415:14;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;564:18415:14;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;6347:4:0;564:18415:14;;;;;;;6370:40:0;735:10:8;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6732:317::-;;-1:-1:-1;564:18415:14;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;;6826:217:0;564:18415:14;;;;;;2954:6:0;564:18415:14;;;;;;;;;;;;;;;;;;;6924:40:0;735:10:8;6924:40:0;;;564:18415:14;6978:11:0;:::o;5374:300:3:-;;564:18415:14;;;;5457:18:3;;;5453:86;;564:18415:14;5552:16:3;;;5548:86;;1315:72:9;;:::i;:::-;;;:::i;:::-;6074:540:3;564:18415:14;;;;;;;;;;;6321:19:3;;;;6317:115;;564:18415:14;;;;;7064:25:3;564:18415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:3;5374:300::o;6317:115::-;564:18415:14;;6367:50:3;;;564:18415:14;;;;;6367:50:3;;;564:18415:14;;;;;;;;;;;;;;;;10668:60:3;5548:86;564:18415:14;;;5591:32:3;;;5473:1;5591:32;;;564:18415:14;5591:32:3;5453:86;564:18415:14;;;5498:30:3;;;5473:1;5498:30;;;564:18415:14;5498:30:3;564:18415:14;;;;;;;;;:::o;1878:128:9:-;564:18415:14;1796:7:9;564:18415:14;;1939:61:9;;1878:128::o;1939:61::-;1974:15;564:18415:14;;1974:15:9;;;;564:18415:14;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2780000","executionCost":"infinite","totalCost":"infinite"},"external":{"BRIDGE_ROLE()":"944","DEFAULT_ADMIN_ROLE()":"900","DISPUTE_RESOLVER_ROLE()":"1032","DISPUTE_WINDOW()":"1208","EMERGENCY_ROLE()":"284","MAX_SETTLEMENT_AMOUNT()":"812","SETTLEMENT_ROLE()":"988","SETTLEMENT_TIMEOUT()":"438","allowance(address,address)":"3530","approve(address,uint256)":"24369","balanceOf(address)":"2822","bridgeConfigs(address)":"9207","configureBridge(address,bool,uint256,uint256,uint256)":"95720","confirmSettlement(uint256)":"infinite","createSettlement(address,uint256,string,bytes32)":"infinite","decimals()":"394","disputeFee()":"3069","disputes(uint256)":"infinite","emergencyWithdrawETH()":"infinite","emergencyWithdrawTokens(address,uint256)":"infinite","getBridgeConfig(address)":"9779","getDispute(uint256)":"infinite","getRoleAdmin(bytes32)":"2503","getSettlement(uint256)":"infinite","getUserSettlements(address)":"infinite","grantRole(bytes32,address)":"33407","hasRole(bytes32,address)":"3101","initiateDispute(uint256,uint8,string)":"infinite","name()":"infinite","pause()":"30277","paused()":"2685","processBridgeTransaction(address,address,uint256,address)":"infinite","processedL3Transactions(bytes32)":"3408","renounceRole(bytes32,address)":"29021","resolveDispute(uint256,string,bool)":"infinite","revokeRole(bytes32,address)":"34168","settlementCounter()":"2805","settlementFee()":"2739","settlements(uint256)":"infinite","supportsInterface(bytes4)":"250","symbol()":"infinite","totalDisputes()":"3179","totalSettlements()":"2827","totalSupply()":"2365","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","unpause()":"27930","updateDisputeFee(uint256)":"28573","updateSettlementFee(uint256)":"28463","userSettlements(address,uint256)":"7205"},"internal":{"_update(address,address,uint256)":"infinite"}},"methodIdentifiers":{"BRIDGE_ROLE()":"b5bfddea","DEFAULT_ADMIN_ROLE()":"a217fddf","DISPUTE_RESOLVER_ROLE()":"bfe42a37","DISPUTE_WINDOW()":"f585dc57","EMERGENCY_ROLE()":"20df4359","MAX_SETTLEMENT_AMOUNT()":"933367a8","SETTLEMENT_ROLE()":"ba9cf01d","SETTLEMENT_TIMEOUT()":"3c0a6e38","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","bridgeConfigs(address)":"427ac0ca","configureBridge(address,bool,uint256,uint256,uint256)":"43b255ac","confirmSettlement(uint256)":"9e924eb5","createSettlement(address,uint256,string,bytes32)":"d1d50fe6","decimals()":"313ce567","disputeFee()":"b9ce896b","disputes(uint256)":"564a565d","emergencyWithdrawETH()":"84536017","emergencyWithdrawTokens(address,uint256)":"917bb998","getBridgeConfig(address)":"c4fc45a8","getDispute(uint256)":"e3a96cbd","getRoleAdmin(bytes32)":"248a9ca3","getSettlement(uint256)":"4c582380","getUserSettlements(address)":"bfcb7040","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initiateDispute(uint256,uint8,string)":"d0b1149c","name()":"06fdde03","pause()":"8456cb59","paused()":"5c975abb","processBridgeTransaction(address,address,uint256,address)":"068d04d0","processedL3Transactions(bytes32)":"fc1e29b6","renounceRole(bytes32,address)":"36568abe","resolveDispute(uint256,string,bool)":"267f2098","revokeRole(bytes32,address)":"d547741f","settlementCounter()":"84b971a5","settlementFee()":"7d1d7fb8","settlements(uint256)":"08df7dc8","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalDisputes()":"c5e4ccc4","totalSettlements()":"88dae6a8","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","updateDisputeFee(uint256)":"9de2e9d7","updateSettlementFee(uint256)":"899c45da","userSettlements(address,uint256)":"76e8a88b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minConfirmations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BridgeConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"DisputeFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"confirmer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SettlementConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SettlementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"reason\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SettlementDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"SettlementFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIDGE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SETTLEMENT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SETTLEMENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SETTLEMENT_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgeConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"configureBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"}],\"name\":\"confirmSettlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"createSettlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"reason\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"name\":\"getBridgeConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"}],\"name\":\"getDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"reason\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"}],\"name\":\"getSettlement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum GameDinSettlement.SettlementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"disputeDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"disputeInitiator\",\"type\":\"address\"},{\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"disputeReason\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"disputeDetails\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserSettlements\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"reason\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"initiateDispute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"name\":\"processBridgeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processedL3Transactions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"approveSettlement\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settlements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"settlementId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum GameDinSettlement.SettlementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"l3TransactionHash\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"disputeDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"disputeInitiator\",\"type\":\"address\"},{\"internalType\":\"enum GameDinSettlement.DisputeReason\",\"name\":\"disputeReason\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"disputeDetails\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDisputes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSettlements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateDisputeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"updateSettlementFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userSettlements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"L2 settlement layer for GameDin L3 gaming blockchain Handles cross-chain asset transfers, dispute resolution, and final settlement\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"configureBridge(address,bool,uint256,uint256,uint256)\":{\"details\":\"Configure a bridge\",\"params\":{\"bridgeAddress\":\"Bridge contract address\",\"fee\":\"Bridge fee\",\"isActive\":\"Whether bridge is active\",\"maxAmount\":\"Maximum amount per transaction\",\"minConfirmations\":\"Minimum confirmations required\"}},\"confirmSettlement(uint256)\":{\"details\":\"Confirm a settlement\",\"params\":{\"settlementId\":\"Settlement ID\"}},\"createSettlement(address,uint256,string,bytes32)\":{\"details\":\"Create a new settlement\",\"params\":{\"amount\":\"Settlement amount\",\"l3TransactionHash\":\"L3 transaction hash\",\"merkleRoot\":\"Merkle root for verification\",\"to\":\"Recipient address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyWithdrawETH()\":{\"details\":\"Emergency withdraw ETH\"},\"emergencyWithdrawTokens(address,uint256)\":{\"details\":\"Emergency withdraw tokens\",\"params\":{\"amount\":\"Amount to withdraw\",\"token\":\"Token address\"}},\"getBridgeConfig(address)\":{\"details\":\"Get bridge configuration\",\"params\":{\"bridgeAddress\":\"Bridge address\"},\"returns\":{\"bridge\":\"Bridge address\",\"fee\":\"Bridge fee\",\"isActive\":\"Whether active\",\"maxAmount\":\"Maximum amount\",\"minConfirmations\":\"Minimum confirmations\"}},\"getDispute(uint256)\":{\"details\":\"Get dispute details\",\"params\":{\"settlementId\":\"Settlement ID\"},\"returns\":{\"details\":\"Dispute details\",\"id\":\"Settlement ID\",\"initiator\":\"Dispute initiator\",\"reason\":\"Dispute reason\",\"resolution\":\"Resolution details\",\"resolved\":\"Whether resolved\",\"resolver\":\"Resolver address\",\"timestamp\":\"Timestamp\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSettlement(uint256)\":{\"details\":\"Get settlement details\",\"params\":{\"settlementId\":\"Settlement ID\"},\"returns\":{\"amount\":\"Amount\",\"disputeDeadline\":\"Dispute deadline\",\"disputeDetails\":\"Dispute details\",\"disputeInitiator\":\"Dispute initiator\",\"disputeReason\":\"Dispute reason\",\"from\":\"Sender address\",\"id\":\"Settlement ID\",\"l3TransactionHash\":\"L3 transaction hash\",\"merkleRoot\":\"Merkle root\",\"status\":\"Settlement status\",\"timestamp\":\"Timestamp\",\"to\":\"Recipient address\"}},\"getUserSettlements(address)\":{\"details\":\"Get user settlements\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"settlementIds Array of settlement IDs\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initiateDispute(uint256,uint8,string)\":{\"details\":\"Initiate a dispute for a settlement\",\"params\":{\"details\":\"Dispute details\",\"reason\":\"Dispute reason\",\"settlementId\":\"Settlement ID\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pause contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processBridgeTransaction(address,address,uint256,address)\":{\"details\":\"Process bridge transaction\",\"params\":{\"amount\":\"Amount to transfer\",\"bridgeAddress\":\"Bridge address\",\"from\":\"Source address\",\"to\":\"Destination address\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"resolveDispute(uint256,string,bool)\":{\"details\":\"Resolve a dispute\",\"params\":{\"approveSettlement\":\"Whether to approve the settlement\",\"resolution\":\"Resolution details\",\"settlementId\":\"Settlement ID\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unpause()\":{\"details\":\"Unpause contract\"},\"updateDisputeFee(uint256)\":{\"details\":\"Update dispute fee\",\"params\":{\"newFee\":\"New fee amount\"}},\"updateSettlementFee(uint256)\":{\"details\":\"Update settlement fee\",\"params\":{\"newFee\":\"New fee amount\"}}},\"title\":\"GameDin Settlement Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameDinSettlement.sol\":\"GameDinSettlement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Pausable} from \\\"../../../utils/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC-20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_update}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\\n        super._update(from, to, value);\\n    }\\n}\\n\",\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/GameDinSettlement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title GameDin Settlement Contract\\r\\n * @dev L2 settlement layer for GameDin L3 gaming blockchain\\r\\n * Handles cross-chain asset transfers, dispute resolution, and final settlement\\r\\n */\\r\\ncontract GameDinSettlement is ERC20, ERC20Pausable, AccessControl, ReentrancyGuard {\\r\\n    // =============================================================================\\r\\n    // CONSTANTS & ROLES\\r\\n    // =============================================================================\\r\\n    \\r\\n    bytes32 public constant SETTLEMENT_ROLE = keccak256(\\\"SETTLEMENT_ROLE\\\");\\r\\n    bytes32 public constant BRIDGE_ROLE = keccak256(\\\"BRIDGE_ROLE\\\");\\r\\n    bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\\\"DISPUTE_RESOLVER_ROLE\\\");\\r\\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\\\"EMERGENCY_ROLE\\\");\\r\\n    \\r\\n    uint256 public constant SETTLEMENT_TIMEOUT = 7 days;\\r\\n    uint256 public constant DISPUTE_WINDOW = 3 days;\\r\\n    uint256 public constant MAX_SETTLEMENT_AMOUNT = 1000000 * 10**18; // 1M tokens\\r\\n    \\r\\n    // =============================================================================\\r\\n    // STRUCTS & ENUMS\\r\\n    // =============================================================================\\r\\n    \\r\\n    enum SettlementStatus {\\r\\n        PENDING,\\r\\n        CONFIRMED,\\r\\n        DISPUTED,\\r\\n        RESOLVED,\\r\\n        CANCELLED\\r\\n    }\\r\\n    \\r\\n    enum DisputeReason {\\r\\n        INSUFFICIENT_FUNDS,\\r\\n        INVALID_TRANSACTION,\\r\\n        FRAUD_DETECTED,\\r\\n        TECHNICAL_ERROR,\\r\\n        OTHER\\r\\n    }\\r\\n    \\r\\n    struct Settlement {\\r\\n        uint256 settlementId;\\r\\n        address from;\\r\\n        address to;\\r\\n        uint256 amount;\\r\\n        uint256 timestamp;\\r\\n        SettlementStatus status;\\r\\n        string l3TransactionHash;\\r\\n        bytes32 merkleRoot;\\r\\n        uint256 disputeDeadline;\\r\\n        address disputeInitiator;\\r\\n        DisputeReason disputeReason;\\r\\n        string disputeDetails;\\r\\n    }\\r\\n    \\r\\n    struct Dispute {\\r\\n        uint256 settlementId;\\r\\n        address initiator;\\r\\n        DisputeReason reason;\\r\\n        string details;\\r\\n        uint256 timestamp;\\r\\n        bool resolved;\\r\\n        address resolver;\\r\\n        string resolution;\\r\\n    }\\r\\n    \\r\\n    struct BridgeConfig {\\r\\n        address bridgeAddress;\\r\\n        bool isActive;\\r\\n        uint256 minConfirmations;\\r\\n        uint256 maxAmount;\\r\\n        uint256 fee;\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // STATE VARIABLES\\r\\n    // =============================================================================\\r\\n    \\r\\n    uint256 public settlementCounter;\\r\\n    uint256 public totalSettlements;\\r\\n    uint256 public totalDisputes;\\r\\n    uint256 public settlementFee = 0.001 * 10**18; // 0.001 tokens\\r\\n    uint256 public disputeFee = 0.01 * 10**18; // 0.01 tokens\\r\\n    \\r\\n    mapping(uint256 => Settlement) public settlements;\\r\\n    mapping(uint256 => Dispute) public disputes;\\r\\n    mapping(address => uint256[]) public userSettlements;\\r\\n    mapping(bytes32 => bool) public processedL3Transactions;\\r\\n    mapping(address => BridgeConfig) public bridgeConfigs;\\r\\n    \\r\\n    // =============================================================================\\r\\n    // EVENTS\\r\\n    // =============================================================================\\r\\n    \\r\\n    event SettlementCreated(\\r\\n        uint256 indexed settlementId,\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 amount,\\r\\n        string l3TransactionHash,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event SettlementConfirmed(\\r\\n        uint256 indexed settlementId,\\r\\n        address indexed confirmer,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event SettlementDisputed(\\r\\n        uint256 indexed settlementId,\\r\\n        address indexed initiator,\\r\\n        DisputeReason reason,\\r\\n        string details,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event DisputeResolved(\\r\\n        uint256 indexed settlementId,\\r\\n        address indexed resolver,\\r\\n        string resolution,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    \\r\\n    event BridgeConfigUpdated(\\r\\n        address indexed bridgeAddress,\\r\\n        bool isActive,\\r\\n        uint256 minConfirmations,\\r\\n        uint256 maxAmount,\\r\\n        uint256 fee\\r\\n    );\\r\\n    \\r\\n    event SettlementFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n    event DisputeFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n    \\r\\n    // =============================================================================\\r\\n    // CONSTRUCTOR\\r\\n    // =============================================================================\\r\\n    \\r\\n    constructor(\\r\\n        address initialOwner,\\r\\n        uint256 initialSupply\\r\\n    ) ERC20(\\\"GameDin Settlement Token\\\", \\\"GDIS\\\") {\\r\\n        _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\\r\\n        _grantRole(SETTLEMENT_ROLE, initialOwner);\\r\\n        _grantRole(BRIDGE_ROLE, initialOwner);\\r\\n        _grantRole(DISPUTE_RESOLVER_ROLE, initialOwner);\\r\\n        _grantRole(EMERGENCY_ROLE, initialOwner);\\r\\n        \\r\\n        _mint(initialOwner, initialSupply);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // SETTLEMENT FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Create a new settlement\\r\\n     * @param to Recipient address\\r\\n     * @param amount Settlement amount\\r\\n     * @param l3TransactionHash L3 transaction hash\\r\\n     * @param merkleRoot Merkle root for verification\\r\\n     */\\r\\n    function createSettlement(\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        string memory l3TransactionHash,\\r\\n        bytes32 merkleRoot\\r\\n    ) external onlyRole(SETTLEMENT_ROLE) whenNotPaused nonReentrant {\\r\\n        require(to != address(0), \\\"Invalid recipient\\\");\\r\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        require(amount <= MAX_SETTLEMENT_AMOUNT, \\\"Amount exceeds maximum\\\");\\r\\n        require(bytes(l3TransactionHash).length > 0, \\\"Invalid L3 transaction hash\\\");\\r\\n        require(!processedL3Transactions[keccak256(abi.encodePacked(l3TransactionHash))], \\\"L3 transaction already processed\\\");\\r\\n        \\r\\n        settlementCounter++;\\r\\n        uint256 settlementId = settlementCounter;\\r\\n        \\r\\n        Settlement storage settlement = settlements[settlementId];\\r\\n        settlement.settlementId = settlementId;\\r\\n        settlement.from = msg.sender;\\r\\n        settlement.to = to;\\r\\n        settlement.amount = amount;\\r\\n        settlement.timestamp = block.timestamp;\\r\\n        settlement.status = SettlementStatus.PENDING;\\r\\n        settlement.l3TransactionHash = l3TransactionHash;\\r\\n        settlement.merkleRoot = merkleRoot;\\r\\n        settlement.disputeDeadline = block.timestamp + DISPUTE_WINDOW;\\r\\n        \\r\\n        userSettlements[to].push(settlementId);\\r\\n        processedL3Transactions[keccak256(abi.encodePacked(l3TransactionHash))] = true;\\r\\n        totalSettlements++;\\r\\n        \\r\\n        emit SettlementCreated(settlementId, msg.sender, to, amount, l3TransactionHash, block.timestamp);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Confirm a settlement\\r\\n     * @param settlementId Settlement ID\\r\\n     */\\r\\n    function confirmSettlement(uint256 settlementId) external onlyRole(SETTLEMENT_ROLE) whenNotPaused {\\r\\n        Settlement storage settlement = settlements[settlementId];\\r\\n        require(settlement.settlementId != 0, \\\"Settlement does not exist\\\");\\r\\n        require(settlement.status == SettlementStatus.PENDING, \\\"Settlement not pending\\\");\\r\\n        require(block.timestamp <= settlement.disputeDeadline, \\\"Dispute window expired\\\");\\r\\n        \\r\\n        settlement.status = SettlementStatus.CONFIRMED;\\r\\n        \\r\\n        // Transfer tokens to recipient\\r\\n        _transfer(settlement.from, settlement.to, settlement.amount);\\r\\n        \\r\\n        emit SettlementConfirmed(settlementId, msg.sender, block.timestamp);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Initiate a dispute for a settlement\\r\\n     * @param settlementId Settlement ID\\r\\n     * @param reason Dispute reason\\r\\n     * @param details Dispute details\\r\\n     */\\r\\n    function initiateDispute(\\r\\n        uint256 settlementId,\\r\\n        DisputeReason reason,\\r\\n        string memory details\\r\\n    ) external payable whenNotPaused {\\r\\n        require(msg.value >= disputeFee, \\\"Insufficient dispute fee\\\");\\r\\n        \\r\\n        Settlement storage settlement = settlements[settlementId];\\r\\n        require(settlement.settlementId != 0, \\\"Settlement does not exist\\\");\\r\\n        require(settlement.status == SettlementStatus.PENDING, \\\"Settlement not pending\\\");\\r\\n        require(block.timestamp <= settlement.disputeDeadline, \\\"Dispute window expired\\\");\\r\\n        require(msg.sender == settlement.to || hasRole(DISPUTE_RESOLVER_ROLE, msg.sender), \\\"Not authorized to dispute\\\");\\r\\n        \\r\\n        settlement.status = SettlementStatus.DISPUTED;\\r\\n        settlement.disputeInitiator = msg.sender;\\r\\n        settlement.disputeReason = reason;\\r\\n        settlement.disputeDetails = details;\\r\\n        \\r\\n        totalDisputes++;\\r\\n        \\r\\n        Dispute storage dispute = disputes[settlementId];\\r\\n        dispute.settlementId = settlementId;\\r\\n        dispute.initiator = msg.sender;\\r\\n        dispute.reason = reason;\\r\\n        dispute.details = details;\\r\\n        dispute.timestamp = block.timestamp;\\r\\n        \\r\\n        emit SettlementDisputed(settlementId, msg.sender, reason, details, block.timestamp);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Resolve a dispute\\r\\n     * @param settlementId Settlement ID\\r\\n     * @param resolution Resolution details\\r\\n     * @param approveSettlement Whether to approve the settlement\\r\\n     */\\r\\n    function resolveDispute(\\r\\n        uint256 settlementId,\\r\\n        string memory resolution,\\r\\n        bool approveSettlement\\r\\n    ) external onlyRole(DISPUTE_RESOLVER_ROLE) whenNotPaused {\\r\\n        Settlement storage settlement = settlements[settlementId];\\r\\n        Dispute storage dispute = disputes[settlementId];\\r\\n        \\r\\n        require(settlement.settlementId != 0, \\\"Settlement does not exist\\\");\\r\\n        require(settlement.status == SettlementStatus.DISPUTED, \\\"Settlement not disputed\\\");\\r\\n        require(!dispute.resolved, \\\"Dispute already resolved\\\");\\r\\n        \\r\\n        dispute.resolved = true;\\r\\n        dispute.resolver = msg.sender;\\r\\n        dispute.resolution = resolution;\\r\\n        \\r\\n        if (approveSettlement) {\\r\\n            settlement.status = SettlementStatus.RESOLVED;\\r\\n            _transfer(settlement.from, settlement.to, settlement.amount);\\r\\n        } else {\\r\\n            settlement.status = SettlementStatus.CANCELLED;\\r\\n        }\\r\\n        \\r\\n        emit DisputeResolved(settlementId, msg.sender, resolution, block.timestamp);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // BRIDGE FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Configure a bridge\\r\\n     * @param bridgeAddress Bridge contract address\\r\\n     * @param isActive Whether bridge is active\\r\\n     * @param minConfirmations Minimum confirmations required\\r\\n     * @param maxAmount Maximum amount per transaction\\r\\n     * @param fee Bridge fee\\r\\n     */\\r\\n    function configureBridge(\\r\\n        address bridgeAddress,\\r\\n        bool isActive,\\r\\n        uint256 minConfirmations,\\r\\n        uint256 maxAmount,\\r\\n        uint256 fee\\r\\n    ) external onlyRole(BRIDGE_ROLE) {\\r\\n        require(bridgeAddress != address(0), \\\"Invalid bridge address\\\");\\r\\n        \\r\\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\\r\\n        config.bridgeAddress = bridgeAddress;\\r\\n        config.isActive = isActive;\\r\\n        config.minConfirmations = minConfirmations;\\r\\n        config.maxAmount = maxAmount;\\r\\n        config.fee = fee;\\r\\n        \\r\\n        emit BridgeConfigUpdated(bridgeAddress, isActive, minConfirmations, maxAmount, fee);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Process bridge transaction\\r\\n     * @param from Source address\\r\\n     * @param to Destination address\\r\\n     * @param amount Amount to transfer\\r\\n     * @param bridgeAddress Bridge address\\r\\n     */\\r\\n    function processBridgeTransaction(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        address bridgeAddress\\r\\n    ) external onlyRole(BRIDGE_ROLE) whenNotPaused {\\r\\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\\r\\n        require(config.isActive, \\\"Bridge not active\\\");\\r\\n        require(amount <= config.maxAmount, \\\"Amount exceeds bridge limit\\\");\\r\\n        \\r\\n        _transfer(from, to, amount);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // VIEW FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Get settlement details\\r\\n     * @param settlementId Settlement ID\\r\\n     * @return id Settlement ID\\r\\n     * @return from Sender address\\r\\n     * @return to Recipient address\\r\\n     * @return amount Amount\\r\\n     * @return timestamp Timestamp\\r\\n     * @return status Settlement status\\r\\n     * @return l3TransactionHash L3 transaction hash\\r\\n     * @return merkleRoot Merkle root\\r\\n     * @return disputeDeadline Dispute deadline\\r\\n     * @return disputeInitiator Dispute initiator\\r\\n     * @return disputeReason Dispute reason\\r\\n     * @return disputeDetails Dispute details\\r\\n     */\\r\\n    function getSettlement(uint256 settlementId) external view returns (\\r\\n        uint256 id,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 timestamp,\\r\\n        SettlementStatus status,\\r\\n        string memory l3TransactionHash,\\r\\n        bytes32 merkleRoot,\\r\\n        uint256 disputeDeadline,\\r\\n        address disputeInitiator,\\r\\n        DisputeReason disputeReason,\\r\\n        string memory disputeDetails\\r\\n    ) {\\r\\n        Settlement storage settlement = settlements[settlementId];\\r\\n        return (\\r\\n            settlement.settlementId,\\r\\n            settlement.from,\\r\\n            settlement.to,\\r\\n            settlement.amount,\\r\\n            settlement.timestamp,\\r\\n            settlement.status,\\r\\n            settlement.l3TransactionHash,\\r\\n            settlement.merkleRoot,\\r\\n            settlement.disputeDeadline,\\r\\n            settlement.disputeInitiator,\\r\\n            settlement.disputeReason,\\r\\n            settlement.disputeDetails\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get dispute details\\r\\n     * @param settlementId Settlement ID\\r\\n     * @return id Settlement ID\\r\\n     * @return initiator Dispute initiator\\r\\n     * @return reason Dispute reason\\r\\n     * @return details Dispute details\\r\\n     * @return timestamp Timestamp\\r\\n     * @return resolved Whether resolved\\r\\n     * @return resolver Resolver address\\r\\n     * @return resolution Resolution details\\r\\n     */\\r\\n    function getDispute(uint256 settlementId) external view returns (\\r\\n        uint256 id,\\r\\n        address initiator,\\r\\n        DisputeReason reason,\\r\\n        string memory details,\\r\\n        uint256 timestamp,\\r\\n        bool resolved,\\r\\n        address resolver,\\r\\n        string memory resolution\\r\\n    ) {\\r\\n        Dispute storage dispute = disputes[settlementId];\\r\\n        return (\\r\\n            dispute.settlementId,\\r\\n            dispute.initiator,\\r\\n            dispute.reason,\\r\\n            dispute.details,\\r\\n            dispute.timestamp,\\r\\n            dispute.resolved,\\r\\n            dispute.resolver,\\r\\n            dispute.resolution\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get user settlements\\r\\n     * @param user User address\\r\\n     * @return settlementIds Array of settlement IDs\\r\\n     */\\r\\n    function getUserSettlements(address user) external view returns (uint256[] memory) {\\r\\n        return userSettlements[user];\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Get bridge configuration\\r\\n     * @param bridgeAddress Bridge address\\r\\n     * @return bridge Bridge address\\r\\n     * @return isActive Whether active\\r\\n     * @return minConfirmations Minimum confirmations\\r\\n     * @return maxAmount Maximum amount\\r\\n     * @return fee Bridge fee\\r\\n     */\\r\\n    function getBridgeConfig(address bridgeAddress) external view returns (\\r\\n        address bridge,\\r\\n        bool isActive,\\r\\n        uint256 minConfirmations,\\r\\n        uint256 maxAmount,\\r\\n        uint256 fee\\r\\n    ) {\\r\\n        BridgeConfig storage config = bridgeConfigs[bridgeAddress];\\r\\n        return (\\r\\n            config.bridgeAddress,\\r\\n            config.isActive,\\r\\n            config.minConfirmations,\\r\\n            config.maxAmount,\\r\\n            config.fee\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // ADMIN FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Update settlement fee\\r\\n     * @param newFee New fee amount\\r\\n     */\\r\\n    function updateSettlementFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        uint256 oldFee = settlementFee;\\r\\n        settlementFee = newFee;\\r\\n        emit SettlementFeeUpdated(oldFee, newFee);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Update dispute fee\\r\\n     * @param newFee New fee amount\\r\\n     */\\r\\n    function updateDisputeFee(uint256 newFee) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        uint256 oldFee = disputeFee;\\r\\n        disputeFee = newFee;\\r\\n        emit DisputeFeeUpdated(oldFee, newFee);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Pause contract\\r\\n     */\\r\\n    function pause() external onlyRole(EMERGENCY_ROLE) {\\r\\n        _pause();\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Unpause contract\\r\\n     */\\r\\n    function unpause() external onlyRole(EMERGENCY_ROLE) {\\r\\n        _unpause();\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency withdraw ETH\\r\\n     */\\r\\n    function emergencyWithdrawETH() external onlyRole(EMERGENCY_ROLE) {\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Emergency withdraw tokens\\r\\n     * @param token Token address\\r\\n     * @param amount Amount to withdraw\\r\\n     */\\r\\n    function emergencyWithdrawTokens(address token, uint256 amount) external onlyRole(EMERGENCY_ROLE) {\\r\\n        IERC20(token).transfer(msg.sender, amount);\\r\\n    }\\r\\n    \\r\\n    // =============================================================================\\r\\n    // OVERRIDE FUNCTIONS\\r\\n    // =============================================================================\\r\\n    \\r\\n    /**\\r\\n     * @dev Override transfer function to check pause\\r\\n     */\\r\\n    function _update(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual override(ERC20, ERC20Pausable) whenNotPaused {\\r\\n        super._update(from, to, amount);\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Receive function to accept ETH\\r\\n     */\\r\\n    receive() external payable {}\\r\\n} \",\"keccak256\":\"0x56b383adcde242ab4e5b8496c662978976cdf708f4e7c8fd64006df36a417067\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":538,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":544,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":546,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":548,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":550,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1324,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_paused","offset":0,"slot":"5","type":"t_bool"},{"astId":26,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_roles","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"},{"astId":1434,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"_status","offset":0,"slot":"7","type":"t_uint256"},{"astId":3052,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"settlementCounter","offset":0,"slot":"8","type":"t_uint256"},{"astId":3054,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"totalSettlements","offset":0,"slot":"9","type":"t_uint256"},{"astId":3056,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"totalDisputes","offset":0,"slot":"10","type":"t_uint256"},{"astId":3063,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"settlementFee","offset":0,"slot":"11","type":"t_uint256"},{"astId":3070,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputeFee","offset":0,"slot":"12","type":"t_uint256"},{"astId":3075,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"settlements","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(Settlement)3021_storage)"},{"astId":3080,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputes","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(Dispute)3039_storage)"},{"astId":3085,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"userSettlements","offset":0,"slot":"15","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":3089,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"processedL3Transactions","offset":0,"slot":"16","type":"t_mapping(t_bytes32,t_bool)"},{"astId":3094,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"bridgeConfigs","offset":0,"slot":"17","type":"t_mapping(t_address,t_struct(BridgeConfig)3050_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(DisputeReason)2994":{"encoding":"inplace","label":"enum GameDinSettlement.DisputeReason","numberOfBytes":"1"},"t_enum(SettlementStatus)2988":{"encoding":"inplace","label":"enum GameDinSettlement.SettlementStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(BridgeConfig)3050_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct GameDinSettlement.BridgeConfig)","numberOfBytes":"32","value":"t_struct(BridgeConfig)3050_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_mapping(t_uint256,t_struct(Dispute)3039_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GameDinSettlement.Dispute)","numberOfBytes":"32","value":"t_struct(Dispute)3039_storage"},"t_mapping(t_uint256,t_struct(Settlement)3021_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GameDinSettlement.Settlement)","numberOfBytes":"32","value":"t_struct(Settlement)3021_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(BridgeConfig)3050_storage":{"encoding":"inplace","label":"struct GameDinSettlement.BridgeConfig","members":[{"astId":3041,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"bridgeAddress","offset":0,"slot":"0","type":"t_address"},{"astId":3043,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"isActive","offset":20,"slot":"0","type":"t_bool"},{"astId":3045,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"minConfirmations","offset":0,"slot":"1","type":"t_uint256"},{"astId":3047,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"maxAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":3049,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"fee","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(Dispute)3039_storage":{"encoding":"inplace","label":"struct GameDinSettlement.Dispute","members":[{"astId":3023,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"settlementId","offset":0,"slot":"0","type":"t_uint256"},{"astId":3025,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"initiator","offset":0,"slot":"1","type":"t_address"},{"astId":3028,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"reason","offset":20,"slot":"1","type":"t_enum(DisputeReason)2994"},{"astId":3030,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"details","offset":0,"slot":"2","type":"t_string_storage"},{"astId":3032,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"timestamp","offset":0,"slot":"3","type":"t_uint256"},{"astId":3034,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"resolved","offset":0,"slot":"4","type":"t_bool"},{"astId":3036,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"resolver","offset":1,"slot":"4","type":"t_address"},{"astId":3038,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"resolution","offset":0,"slot":"5","type":"t_string_storage"}],"numberOfBytes":"192"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Settlement)3021_storage":{"encoding":"inplace","label":"struct GameDinSettlement.Settlement","members":[{"astId":2996,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"settlementId","offset":0,"slot":"0","type":"t_uint256"},{"astId":2998,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"from","offset":0,"slot":"1","type":"t_address"},{"astId":3000,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"to","offset":0,"slot":"2","type":"t_address"},{"astId":3002,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"amount","offset":0,"slot":"3","type":"t_uint256"},{"astId":3004,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"timestamp","offset":0,"slot":"4","type":"t_uint256"},{"astId":3007,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"status","offset":0,"slot":"5","type":"t_enum(SettlementStatus)2988"},{"astId":3009,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"l3TransactionHash","offset":0,"slot":"6","type":"t_string_storage"},{"astId":3011,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"merkleRoot","offset":0,"slot":"7","type":"t_bytes32"},{"astId":3013,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputeDeadline","offset":0,"slot":"8","type":"t_uint256"},{"astId":3015,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputeInitiator","offset":0,"slot":"9","type":"t_address"},{"astId":3018,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputeReason","offset":20,"slot":"9","type":"t_enum(DisputeReason)2994"},{"astId":3020,"contract":"contracts/GameDinSettlement.sol:GameDinSettlement","label":"disputeDetails","offset":0,"slot":"10","type":"t_string_storage"}],"numberOfBytes":"352"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}