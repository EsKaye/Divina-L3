{
  "name": "gamedin-l3-gaming-blockchain",
  "version": "1.0.0",
  "type": "module",
  "description": "Complete GameDin Layer 3 Gaming Blockchain with NovaSanctum AI Integration - TDD Compliant",
  "main": "src/index.ts",
  "scripts": {
    "build": "npx hardhat compile && tsc --project tsconfig.json",
    "build:watch": "tsc --watch",
    "build:tdd": "npm run test:unit && npm run test:integration && tsc",
    "clean": "rm -rf dist cache artifacts test-results",
    "test": "npm run test:tdd",
    "test:tdd": "npm run test:unit",
    "test:unit": "vitest run test/unit/",
    "test:integration": "vitest run test/integration/",
    "test:e2e": "vitest run test/e2e/",
    "test:quantum": "npx vitest run test/blockchain-critical.test.ts test/gaming-critical.test.ts test/ai-critical.test.ts --reporter=verbose",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest",
    "test:ci": "npm run test:tdd && npm run test:coverage",
    "lint": "eslint src/**/*.ts test/**/*.ts",
    "lint:fix": "eslint src/**/*.ts test/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts test/**/*.ts",
    "type-check": "tsc --noEmit",
    "deploy:local": "npm run test:tdd && npx hardhat run scripts/deploy-local.js --network localhost",
    "deploy:testnet": "npm run test:tdd && npx hardhat run scripts/deploy-testnet.js --network testnet",
    "deploy:sepolia": "npm run test:tdd && npx hardhat run scripts/deploy-sepolia.js --network sepolia",
    "deploy:mainnet": "npm run test:tdd && npx hardhat deploy --network mainnet",
    "faucet": "node scripts/faucet.js",
    "balance": "node scripts/check-balance.js",
    "balance:sepolia": "node scripts/check-sepolia.js",
    "start:node": "npx hardhat node",
    "start:bridge": "npm run test:unit && node --loader ts-node/esm src/bridge/relayer.ts",
    "start:gaming": "npm run test:unit && node --loader ts-node/esm src/gaming/RealTimeGamingEngine.ts",
    "start:ai": "npm run test:unit && node --loader ts-node/esm src/ai/NovaSanctumAI.ts",
    "start:ai:unified": "npm run test:unit && node --loader ts-node/esm src/ai/UnifiedAIService.ts",
    "start:ai:athena": "npm run test:unit && node --loader ts-node/esm src/ai/AthenaMistAI.ts",
    "health:check": "node --loader ts-node/esm src/monitoring/health-checker.ts",
    "dev": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts",
    "gdi:balance": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts balance",
    "gdi:send": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts send",
    "gdi:info": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts info",
    "gdi:phantom": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts phantom",
    "gdi:history": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts history",
    "gdi:check": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts check",
    "gdi:help": "npm run test:unit && node --loader ts-node/esm src/cli/gdi-cli.ts help",
    "deploy:complete": "npm run test:tdd && node scripts/deploy-gdi-complete.js",
    "deploy:metadata": "npm run test:unit && node scripts/deploy-metadata.js",
    "deploy:pool": "npm run test:unit && node scripts/create-raydium-pool.js",
    "revoke": "npm run test:unit && node scripts/revoke-authorities.js",
    "status": "node scripts/deploy-gdi-complete.js --status",
    "check-authorities": "node scripts/revoke-authorities.js --check",
    "verify": "npm run test:unit && node scripts/verify-setup.js",
    "l3:deploy": "npm run test:tdd && ./GameDin_Complete_Launch.sh",
    "l3:infrastructure": "npm run test:unit && ./GameDin_Infrastructure_Setup.sh",
    "l3:instant": "npm run test:unit && ./GameDin_Instant_Deploy.sh",
    "l3:quick": "npm run test:unit && ./GameDin_L3_Quick_Start.sh",
    "auto-testnet": "npm run test:unit && node scripts/auto-testnet.js",
    "start:all": "npm run test:unit && node --loader ts-node/esm scripts/start-all.ts",
    "start:all:js": "npm run test:unit && node scripts/start-all.js",
    "setup": "npm install && cp env.example .env",
    "quickstart": "npm run test:unit && ./GameDin_AthenaMist_Complete_Launch.sh development",
    "docker:build": "npm run test:tdd && docker build -t gamedin-l3 .",
    "docker:run": "docker run -p 3000:3000 -p 8545:8545 gamedin-l3",
    "docs:build": "typedoc src/**/*.ts --out docs/api",
    "docs:serve": "npx serve docs/api",
    "start": "npm run test:unit && node dist/api/gateway.js",
    "tdd:red": "npm run test:unit -- --grep 'RED'",
    "tdd:green": "npm run test:unit -- --grep 'GREEN'",
    "tdd:refactor": "npm run test:unit && npm run lint:fix && npm run format",
    "immutable:check": "tsc --noEmit --strict --noImplicitAny --strictNullChecks",
    "collective:validate": "npm run test:tdd && npm run immutable:check"
  },
  "keywords": [
    "blockchain",
    "gaming",
    "layer3",
    "ai",
    "novasanctum",
    "athenamist",
    "ethereum",
    "base",
    "defi",
    "gdi",
    "gamedin",
    "websocket",
    "realtime",
    "nft",
    "gaming-infrastructure",
    "smart-contracts",
    "typescript",
    "react",
    "hardhat",
    "tdd",
    "immutable",
    "functional-programming",
    "celestial-genesis-collective"
  ],
  "author": {
    "name": "GameDin Team",
    "email": "team@gamedin.com",
    "url": "https://gamedin.io"
  },
  "license": "MIT",
  "dependencies": {
    "@chainlink/contracts": "^0.8.0",
    "@metaplex-foundation/js": "^0.20.1",
    "@mui/icons-material": "^5.18.0",
    "@mui/material": "^5.18.0",
    "@mui/system": "^5.18.0",
    "@nomiclabs/hardhat-ethers": "^2.2.2",
    "@openzeppelin/contracts": "^5.3.0",
    "@openzeppelin/hardhat-upgrades": "^3.0.0",
    "@raydium-io/raydium-sdk": "^1.3.1-beta.0",
    "@solana/spl-token": "^0.3.11",
    "@solana/wallet-adapter-phantom": "^0.9.28",
    "@solana/wallet-adapter-react": "^0.15.39",
    "@solana/wallet-adapter-react-ui": "^0.9.39",
    "@solana/wallet-adapter-wallets": "^0.19.37",
    "@solana/web3.js": "^1.98.2",
    "autoprefixer": "^10.4.21",
    "axios": "^1.6.0",
    "bs58": "^5.0.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "ethers": "^6.15.0",
    "express": "^4.18.2",
    "hardhat": "^2.19.0",
    "hardhat-deploy": "^0.12.0",
    "helmet": "^7.1.0",
    "mongodb-memory-server": "^10.1.4",
    "node-cron": "^3.0.3",
    "pg": "^8.11.3",
    "postcss": "^8.5.6",
    "prom-client": "^15.1.0",
    "redis": "^4.6.10",
    "sequelize": "^6.35.0",
    "tailwindcss": "^4.1.11",
    "tweetnacl": "^1.0.3",
    "winston": "^3.17.0",
    "ws": "^8.14.0"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.9",
    "@nomicfoundation/hardhat-ethers": "^3.0.9",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.13",
    "@nomicfoundation/hardhat-toolbox": "^4.0.0",
    "@nomicfoundation/hardhat-verify": "^2.0.14",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@types/chai": "^4.3.20",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.10.0",
    "@types/pg": "^8.10.9",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "chai": "^4.3.10",
    "eslint": "^9.30.1",
    "eslint-plugin-react": "^7.37.5",
    "hardhat-gas-reporter": "^1.0.10",
    "mocha": "^10.2.0",
    "prettier": "^3.6.2",
    "solidity-coverage": "^0.8.16",
    "ts-node": "^10.9.0",
    "tsconfig-paths": "^4.2.0",
    "typechain": "^8.3.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.36.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gamedin/gamedin-l3-gaming-blockchain.git"
  },
  "bugs": {
    "url": "https://github.com/gamedin/gamedin-l3-gaming-blockchain/issues"
  },
  "homepage": "https://gamedin.io"
}
